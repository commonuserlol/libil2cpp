--- 2017/2017.4.14f1/struct.h
+++ 2017/2017.4.15f1/struct.h
@@ -1508,6 +1508,7 @@ struct Il2CppMarshalByRefObject
 struct Il2CppComObject : Il2CppObject
 {
     Il2CppIUnknown* identity;
+    volatile int32_t refCount;
 };
 struct Il2CppAppDomain
 {
--- 2017/2017.4.40f1/struct.h
+++ 2018/2018.1.5f1/struct.h
@@ -1,43 +1,24 @@
-typedef uint32_t Il2CppMethodSlot;
-const uint32_t kInvalidIl2CppMethodSlot = 65535;
-template<bool value>
-struct Il2CppStaticAssertHelper;
-template<>
-struct Il2CppStaticAssertHelper<true>
-{
-};
-const int32_t kIl2CppInt32Min = (-2147483647-1);
-const int32_t kIl2CppInt32Max = (2147483647);
-const uint32_t kIl2CppUInt32Max = (4294967295U);
-const int64_t kIl2CppInt64Min = (-9223372036854775807L -1);
-const int64_t kIl2CppInt64Max = (9223372036854775807L);
-const uint64_t kIl2CppUInt64Max = (18446744073709551615UL);
-const intptr_t kIl2CppIntPtrMin = kIl2CppInt64Min;
-const intptr_t kIl2CppIntPtrMax = kIl2CppInt64Max;
-const uintptr_t kIl2CppUIntPtrMax = kIl2CppUInt64Max;
-const int ipv6AddressSize = 16;
-typedef int32_t il2cpp_hresult_t;
-       
-struct Il2CppClass;
-struct Il2CppType;
-struct EventInfo;
-struct MethodInfo;
-struct FieldInfo;
-struct PropertyInfo;
-struct Il2CppAssembly;
-struct Il2CppArray;
-struct Il2CppDelegate;
-struct Il2CppDomain;
-struct Il2CppImage;
-struct Il2CppException;
-struct Il2CppProfiler;
-struct Il2CppObject;
-struct Il2CppReflectionMethod;
-struct Il2CppReflectionType;
-struct Il2CppString;
-struct Il2CppThread;
-struct Il2CppAsyncResult;
-enum Il2CppProfileFlags
+typedef struct Il2CppClass Il2CppClass;
+typedef struct Il2CppType Il2CppType;
+typedef struct EventInfo EventInfo;
+typedef struct MethodInfo MethodInfo;
+typedef struct FieldInfo FieldInfo;
+typedef struct PropertyInfo PropertyInfo;
+typedef struct Il2CppAssembly Il2CppAssembly;
+typedef struct Il2CppArray Il2CppArray;
+typedef struct Il2CppDelegate Il2CppDelegate;
+typedef struct Il2CppDomain Il2CppDomain;
+typedef struct Il2CppImage Il2CppImage;
+typedef struct Il2CppException Il2CppException;
+typedef struct Il2CppProfiler Il2CppProfiler;
+typedef struct Il2CppObject Il2CppObject;
+typedef struct Il2CppReflectionMethod Il2CppReflectionMethod;
+typedef struct Il2CppReflectionType Il2CppReflectionType;
+typedef struct Il2CppString Il2CppString;
+typedef struct Il2CppThread Il2CppThread;
+typedef struct Il2CppAsyncResult Il2CppAsyncResult;
+typedef struct Il2CppManagedMemorySnapshot Il2CppManagedMemorySnapshot;
+typedef enum
 {
     IL2CPP_PROFILE_NONE = 0,
     IL2CPP_PROFILE_APPDOMAIN_EVENTS = 1 << 0,
@@ -61,13 +42,13 @@ enum Il2CppProfileFlags
     IL2CPP_PROFILE_IOMAP_EVENTS = 1 << 18,
     IL2CPP_PROFILE_GC_MOVES = 1 << 19,
     IL2CPP_PROFILE_FILEIO = 1 << 20
-};
-enum Il2CppProfileFileIOKind
+} Il2CppProfileFlags;
+typedef enum
 {
     IL2CPP_PROFILE_FILEIO_WRITE = 0,
     IL2CPP_PROFILE_FILEIO_READ
-};
-enum Il2CppGCEvent
+} Il2CppProfileFileIOKind;
+typedef enum
 {
     IL2CPP_GC_EVENT_START,
     IL2CPP_GC_EVENT_MARK_START,
@@ -79,8 +60,8 @@ enum Il2CppGCEvent
     IL2CPP_GC_EVENT_POST_STOP_WORLD,
     IL2CPP_GC_EVENT_PRE_START_WORLD,
     IL2CPP_GC_EVENT_POST_START_WORLD
-};
-enum Il2CppStat
+} Il2CppGCEvent;
+typedef enum
 {
     IL2CPP_STAT_NEW_OBJECT_COUNT,
     IL2CPP_STAT_INITIALIZED_CLASS_COUNT,
@@ -90,16 +71,16 @@ enum Il2CppStat
     IL2CPP_STAT_GENERIC_CLASS_COUNT,
     IL2CPP_STAT_INFLATED_METHOD_COUNT,
     IL2CPP_STAT_INFLATED_TYPE_COUNT,
-};
-enum Il2CppRuntimeUnhandledExceptionPolicy
+} Il2CppStat;
+typedef enum
 {
     IL2CPP_UNHANDLED_POLICY_LEGACY,
     IL2CPP_UNHANDLED_POLICY_CURRENT
-};
-struct Il2CppStackFrameInfo
+} Il2CppRuntimeUnhandledExceptionPolicy;
+typedef struct Il2CppStackFrameInfo
 {
     const MethodInfo *method;
-};
+} Il2CppStackFrameInfo;
 typedef struct
 {
     void* (*malloc_func)(size_t size);
@@ -126,13 +107,26 @@ typedef void (*Il2CppLogCallback)(const
 struct Il2CppManagedMemorySnapshot;
 typedef void (*Il2CppMethodPointer)();
 typedef uintptr_t il2cpp_array_size_t;
+typedef uint32_t Il2CppMethodSlot;
+const uint32_t kInvalidIl2CppMethodSlot = 65535;
+const int32_t kIl2CppInt32Min = (-2147483647-1);
+const int32_t kIl2CppInt32Max = (2147483647);
+const uint32_t kIl2CppUInt32Max = (4294967295U);
+const int64_t kIl2CppInt64Min = (-9223372036854775807L -1);
+const int64_t kIl2CppInt64Max = (9223372036854775807L);
+const uint64_t kIl2CppUInt64Max = (18446744073709551615UL);
+const intptr_t kIl2CppIntPtrMin = (-9223372036854775807L -1);
+const intptr_t kIl2CppIntPtrMax = (9223372036854775807L);
+const uintptr_t kIl2CppUIntPtrMax = (18446744073709551615UL);
+const int ipv6AddressSize = 16;
+typedef int32_t il2cpp_hresult_t;
 const Il2CppChar kIl2CppNewLine[] = { '\n', '\0' };
 struct Il2CppMetadataField
 {
     uint32_t offset;
     uint32_t typeIndex;
     const char* name;
-    bool isStatic;
+    uint8_t isStatic;
 };
 enum Il2CppMetadataTypeFlags
 {
@@ -222,7 +216,7 @@ namespace MemoryInformation
        
        
        
-enum Il2CppTypeEnum
+typedef enum Il2CppTypeEnum
 {
     IL2CPP_TYPE_END = 0x00,
     IL2CPP_TYPE_VOID = 0x01,
@@ -260,7 +254,7 @@ enum Il2CppTypeEnum
     IL2CPP_TYPE_SENTINEL = 0x41,
     IL2CPP_TYPE_PINNED = 0x45,
     IL2CPP_TYPE_ENUM = 0x55
-};
+} Il2CppTypeEnum;
        
 typedef int32_t TypeIndex;
 typedef int32_t TypeDefinitionIndex;
@@ -310,42 +304,34 @@ enum Il2CppMetadataUsage
     kIl2CppMetadataUsageStringLiteral,
     kIl2CppMetadataUsageMethodRef,
 };
-static inline Il2CppMetadataUsage GetEncodedIndexType(EncodedMethodIndex index)
-{
-    return (Il2CppMetadataUsage)((index & 0xE0000000) >> 29);
-}
-static inline uint32_t GetDecodedMethodIndex(EncodedMethodIndex index)
-{
-    return index & 0x1FFFFFFFU;
-}
 struct Il2CppImage;
 struct Il2CppType;
 struct Il2CppTypeDefinitionMetadata;
-union Il2CppRGCTXDefinitionData
+typedef union Il2CppRGCTXDefinitionData
 {
     int32_t rgctxDataDummy;
     MethodIndex methodIndex;
     TypeIndex typeIndex;
-};
-enum Il2CppRGCTXDataType
+} Il2CppRGCTXDefinitionData;
+typedef enum Il2CppRGCTXDataType
 {
     IL2CPP_RGCTX_DATA_INVALID,
     IL2CPP_RGCTX_DATA_TYPE,
     IL2CPP_RGCTX_DATA_CLASS,
     IL2CPP_RGCTX_DATA_METHOD,
     IL2CPP_RGCTX_DATA_ARRAY,
-};
-struct Il2CppRGCTXDefinition
+} Il2CppRGCTXDataType;
+typedef struct Il2CppRGCTXDefinition
 {
     Il2CppRGCTXDataType type;
     Il2CppRGCTXDefinitionData data;
-};
-struct Il2CppInterfaceOffsetPair
+} Il2CppRGCTXDefinition;
+typedef struct Il2CppInterfaceOffsetPair
 {
     TypeIndex interfaceTypeIndex;
     int32_t offset;
-};
-struct Il2CppTypeDefinition
+} Il2CppInterfaceOffsetPair;
+typedef struct Il2CppTypeDefinition
 {
     StringIndex nameIndex;
     StringIndex namespaceIndex;
@@ -377,45 +363,45 @@ struct Il2CppTypeDefinition
     uint16_t interface_offsets_count;
     uint32_t bitfield;
     uint32_t token;
-};
-struct Il2CppFieldDefinition
+} Il2CppTypeDefinition;
+typedef struct Il2CppFieldDefinition
 {
     StringIndex nameIndex;
     TypeIndex typeIndex;
     CustomAttributeIndex customAttributeIndex;
     uint32_t token;
-};
-struct Il2CppFieldDefaultValue
+} Il2CppFieldDefinition;
+typedef struct Il2CppFieldDefaultValue
 {
     FieldIndex fieldIndex;
     TypeIndex typeIndex;
     DefaultValueDataIndex dataIndex;
-};
-struct Il2CppFieldMarshaledSize
+} Il2CppFieldDefaultValue;
+typedef struct Il2CppFieldMarshaledSize
 {
     FieldIndex fieldIndex;
     TypeIndex typeIndex;
     int32_t size;
-};
-struct Il2CppFieldRef
+} Il2CppFieldMarshaledSize;
+typedef struct Il2CppFieldRef
 {
     TypeIndex typeIndex;
     FieldIndex fieldIndex;
-};
-struct Il2CppParameterDefinition
+} Il2CppFieldRef;
+typedef struct Il2CppParameterDefinition
 {
     StringIndex nameIndex;
     uint32_t token;
     CustomAttributeIndex customAttributeIndex;
     TypeIndex typeIndex;
-};
-struct Il2CppParameterDefaultValue
+} Il2CppParameterDefinition;
+typedef struct Il2CppParameterDefaultValue
 {
     ParameterIndex parameterIndex;
     TypeIndex typeIndex;
     DefaultValueDataIndex dataIndex;
-};
-struct Il2CppMethodDefinition
+} Il2CppParameterDefaultValue;
+typedef struct Il2CppMethodDefinition
 {
     StringIndex nameIndex;
     TypeDefinitionIndex declaringType;
@@ -433,8 +419,8 @@ struct Il2CppMethodDefinition
     uint16_t iflags;
     uint16_t slot;
     uint16_t parameterCount;
-};
-struct Il2CppEventDefinition
+} Il2CppMethodDefinition;
+typedef struct Il2CppEventDefinition
 {
     StringIndex nameIndex;
     TypeIndex typeIndex;
@@ -443,8 +429,8 @@ struct Il2CppEventDefinition
     MethodIndex raise;
     CustomAttributeIndex customAttributeIndex;
     uint32_t token;
-};
-struct Il2CppPropertyDefinition
+} Il2CppEventDefinition;
+typedef struct Il2CppPropertyDefinition
 {
     StringIndex nameIndex;
     MethodIndex get;
@@ -452,30 +438,30 @@ struct Il2CppPropertyDefinition
     uint32_t attrs;
     CustomAttributeIndex customAttributeIndex;
     uint32_t token;
-};
-struct Il2CppMethodSpec
+} Il2CppPropertyDefinition;
+typedef struct Il2CppMethodSpec
 {
     MethodIndex methodDefinitionIndex;
     GenericInstIndex classIndexIndex;
     GenericInstIndex methodIndexIndex;
-};
-struct Il2CppStringLiteral
+} Il2CppMethodSpec;
+typedef struct Il2CppStringLiteral
 {
     uint32_t length;
     StringLiteralIndex dataIndex;
-};
-struct Il2CppGenericMethodIndices
+} Il2CppStringLiteral;
+typedef struct
 {
     MethodIndex methodIndex;
     MethodIndex invokerIndex;
-};
-struct Il2CppGenericMethodFunctionsDefinitions
+} Il2CppGenericMethodIndices;
+typedef struct Il2CppGenericMethodFunctionsDefinitions
 {
     GenericMethodIndex genericMethodIndex;
     Il2CppGenericMethodIndices indices;
-};
+} Il2CppGenericMethodFunctionsDefinitions;
 const int kPublicKeyByteLength = 8;
-struct Il2CppAssemblyName
+typedef struct Il2CppAssemblyNameDefinition
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
@@ -488,9 +474,9 @@ struct Il2CppAssemblyName
     int32_t minor;
     int32_t build;
     int32_t revision;
-    uint8_t publicKeyToken[kPublicKeyByteLength];
-};
-struct Il2CppImageDefinition
+    uint8_t public_key_token[8];
+} Il2CppAssemblyNameDefinition;
+typedef struct Il2CppImageDefinition
 {
     StringIndex nameIndex;
     AssemblyIndex assemblyIndex;
@@ -500,42 +486,42 @@ struct Il2CppImageDefinition
     uint32_t exportedTypeCount;
     MethodIndex entryPointIndex;
     uint32_t token;
-};
-struct Il2CppAssembly
+} Il2CppImageDefinition;
+typedef struct Il2CppAssemblyDefinition
 {
     ImageIndex imageIndex;
     CustomAttributeIndex customAttributeIndex;
     int32_t referencedAssemblyStart;
     int32_t referencedAssemblyCount;
-    Il2CppAssemblyName aname;
-};
-struct Il2CppMetadataUsageList
+    Il2CppAssemblyNameDefinition aname;
+} Il2CppAssemblyDefinition;
+typedef struct Il2CppMetadataUsageList
 {
     uint32_t start;
     uint32_t count;
-};
-struct Il2CppMetadataUsagePair
+} Il2CppMetadataUsageList;
+typedef struct Il2CppMetadataUsagePair
 {
     uint32_t destinationIndex;
     uint32_t encodedSourceIndex;
-};
-struct Il2CppCustomAttributeTypeRange
+} Il2CppMetadataUsagePair;
+typedef struct Il2CppCustomAttributeTypeRange
 {
     int32_t start;
     int32_t count;
-};
-struct Il2CppRange
+} Il2CppCustomAttributeTypeRange;
+typedef struct Il2CppRange
 {
     int32_t start;
     int32_t length;
-};
-struct Il2CppWindowsRuntimeTypeNamePair
+} Il2CppRange;
+typedef struct Il2CppWindowsRuntimeTypeNamePair
 {
     StringIndex nameIndex;
     TypeIndex typeIndex;
-};
+} Il2CppWindowsRuntimeTypeNamePair;
 #pragma pack(push, p1,4)
-struct Il2CppGlobalMetadataHeader
+typedef struct Il2CppGlobalMetadataHeader
 {
     int32_t sanity;
     int32_t version;
@@ -605,12 +591,12 @@ struct Il2CppGlobalMetadataHeader
     int32_t windowsRuntimeTypeNamesSize;
     int32_t exportedTypeDefinitionsOffset;
     int32_t exportedTypeDefinitionsCount;
-};
+} Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
 struct Il2CppClass;
 struct MethodInfo;
 struct Il2CppType;
-struct Il2CppArrayType
+typedef struct Il2CppArrayType
 {
     const Il2CppType* etype;
     uint8_t rank;
@@ -618,18 +604,18 @@ struct Il2CppArrayType
     uint8_t numlobounds;
     int *sizes;
     int *lobounds;
-};
-struct Il2CppGenericInst
+} Il2CppArrayType;
+typedef struct Il2CppGenericInst
 {
     uint32_t type_argc;
     const Il2CppType **type_argv;
-};
-struct Il2CppGenericContext
+} Il2CppGenericInst;
+typedef struct Il2CppGenericContext
 {
     const Il2CppGenericInst *class_inst;
     const Il2CppGenericInst *method_inst;
-};
-struct Il2CppGenericParameter
+} Il2CppGenericContext;
+typedef struct Il2CppGenericParameter
 {
     GenericContainerIndex ownerIndex;
     StringIndex nameIndex;
@@ -637,26 +623,26 @@ struct Il2CppGenericParameter
     int16_t constraintsCount;
     uint16_t num;
     uint16_t flags;
-};
-struct Il2CppGenericContainer
+} Il2CppGenericParameter;
+typedef struct Il2CppGenericContainer
 {
     int32_t ownerIndex;
     int32_t type_argc;
     int32_t is_method;
     GenericParameterIndex genericParameterStart;
-};
-struct Il2CppGenericClass
+} Il2CppGenericContainer;
+typedef struct Il2CppGenericClass
 {
     TypeDefinitionIndex typeDefinitionIndex;
     Il2CppGenericContext context;
     Il2CppClass *cached_class;
-};
-struct Il2CppGenericMethod
+} Il2CppGenericClass;
+typedef struct Il2CppGenericMethod
 {
     const MethodInfo* methodDefinition;
     Il2CppGenericContext context;
-};
-struct Il2CppType
+} Il2CppGenericMethod;
+typedef struct Il2CppType
 {
     union
     {
@@ -672,8 +658,8 @@ struct Il2CppType
     unsigned int num_mods : 6;
     unsigned int byref : 1;
     unsigned int pinned : 1;
-};
-typedef enum
+} Il2CppType;
+typedef enum Il2CppCallConvention
 {
     IL2CPP_CALL_DEFAULT,
     IL2CPP_CALL_C,
@@ -682,34 +668,32 @@ typedef enum
     IL2CPP_CALL_FASTCALL,
     IL2CPP_CALL_VARARG
 } Il2CppCallConvention;
-enum Il2CppCharSet
+typedef enum Il2CppCharSet
 {
     CHARSET_ANSI,
     CHARSET_UNICODE
-};
-struct Il2CppClass;
-struct Il2CppGuid;
-struct Il2CppImage;
-struct Il2CppAssembly;
-struct Il2CppAppDomain;
-struct Il2CppAppDomainSetup;
-struct Il2CppDelegate;
-struct Il2CppAppContext;
-struct Il2CppNameToTypeDefinitionIndexHashTable;
-struct VirtualInvokeData
+} Il2CppCharSet;
+typedef struct Il2CppClass Il2CppClass;
+typedef struct Il2CppGuid Il2CppGuid;
+typedef struct Il2CppImage Il2CppImage;
+typedef struct Il2CppAppDomain Il2CppAppDomain;
+typedef struct Il2CppAppDomainSetup Il2CppAppDomainSetup;
+typedef struct Il2CppDelegate Il2CppDelegate;
+typedef struct Il2CppAppContext Il2CppAppContext;
+typedef struct Il2CppNameToTypeDefinitionIndexHashTable Il2CppNameToTypeDefinitionIndexHashTable;
+typedef struct VirtualInvokeData
 {
     Il2CppMethodPointer methodPtr;
     const MethodInfo* method;
-};
-enum Il2CppTypeNameFormat
+} VirtualInvokeData;
+typedef enum Il2CppTypeNameFormat
 {
     IL2CPP_TYPE_NAME_FORMAT_IL,
     IL2CPP_TYPE_NAME_FORMAT_REFLECTION,
     IL2CPP_TYPE_NAME_FORMAT_FULL_NAME,
     IL2CPP_TYPE_NAME_FORMAT_ASSEMBLY_QUALIFIED
-};
-extern bool g_il2cpp_is_fully_initialized;
-typedef struct
+} Il2CppTypeNameFormat;
+typedef struct Il2CppDefaults
 {
     Il2CppImage *corlib;
     Il2CppClass *object_class;
@@ -805,19 +789,19 @@ struct MethodInfo;
 struct FieldInfo;
 struct Il2CppObject;
 struct MemberInfo;
-struct CustomAttributesCache
+typedef struct CustomAttributesCache
 {
     int count;
     Il2CppObject** attributes;
-};
-struct CustomAttributeTypeCache
+} CustomAttributesCache;
+typedef struct CustomAttributeTypeCache
 {
     int count;
     Il2CppClass** attributeTypes;
-};
+} CustomAttributeTypeCache;
 typedef void (*CustomAttributesCacheGenerator)(CustomAttributesCache*);
 const int THREAD_STATIC_FIELD_OFFSET = -1;
-struct FieldInfo
+typedef struct FieldInfo
 {
     const char* name;
     const Il2CppType* type;
@@ -825,8 +809,8 @@ struct FieldInfo
     int32_t offset;
     CustomAttributeIndex customAttributeIndex;
     uint32_t token;
-};
-struct PropertyInfo
+} FieldInfo;
+typedef struct PropertyInfo
 {
     Il2CppClass *parent;
     const char *name;
@@ -835,8 +819,8 @@ struct PropertyInfo
     uint32_t attrs;
     CustomAttributeIndex customAttributeIndex;
     uint32_t token;
-};
-struct EventInfo
+} PropertyInfo;
+typedef struct EventInfo
 {
     const char* name;
     const Il2CppType* eventType;
@@ -846,29 +830,80 @@ struct EventInfo
     const MethodInfo* raise;
     CustomAttributeIndex customAttributeIndex;
     uint32_t token;
-};
-struct ParameterInfo
+} EventInfo;
+typedef struct ParameterInfo
 {
     const char* name;
     int32_t position;
     uint32_t token;
     CustomAttributeIndex customAttributeIndex;
     const Il2CppType* parameter_type;
-};
+} ParameterInfo;
 typedef void* (*InvokerMethod)(Il2CppMethodPointer, const MethodInfo*, void*, void**);
-union Il2CppRGCTXData
+typedef enum MethodVariableKind
+{
+    kMethodVariableKind_This,
+    kMethodVariableKind_Parameter,
+    kMethodVariableKind_LocalVariable
+} MethodVariableKind;
+typedef enum SequencePointKind
+{
+    kSequencePointKind_Normal,
+    kSequencePointKind_StepOut
+} SequencePointKind;
+typedef struct Il2CppMethodExecutionContextInfo
+{
+    const Il2CppType** m_type;
+    const char* m_name;
+    MethodVariableKind m_variableKind;
+    int m_start;
+    int m_end;
+} Il2CppMethodExecutionContextInfo;
+typedef struct Il2CppMethodScope
+{
+    int startOffset;
+    int endOffset;
+} Il2CppMethodScope;
+typedef struct Il2CppMethodHeaderInfo
+{
+    int m_codeSize;
+    int m_numScopes;
+    Il2CppMethodScope *m_scopes;
+} Il2CppMethodHeaderInfo;
+typedef struct Hash16
+{
+    uint8_t m_hash[16];
+} Hash16;
+typedef struct Il2CppSequencePoint
+{
+    const Il2CppMethodExecutionContextInfo* executionContextInfos;
+    uint32_t executionContextInfoCount;
+    const Il2CppMethodHeaderInfo* header;
+    const MethodInfo* method;
+    const Il2CppClass* catchType;
+    const char* sourceFile;
+    Hash16 sourceFileHash;
+    int32_t lineStart, lineEnd;
+    int32_t columnStart, columnEnd;
+    int32_t ilOffset;
+    SequencePointKind kind;
+    uint8_t isActive;
+    int id;
+    uint8_t tryDepth;
+} Il2CppSequencePoint;
+typedef union Il2CppRGCTXData
 {
     void* rgctxDataDummy;
     const MethodInfo* method;
     const Il2CppType* type;
     Il2CppClass* klass;
-};
-struct MethodInfo
+} Il2CppRGCTXData;
+typedef struct MethodInfo
 {
     Il2CppMethodPointer methodPointer;
     InvokerMethod invoker_method;
     const char* name;
-    Il2CppClass *declaring_type;
+    Il2CppClass *klass;
     const Il2CppType *return_type;
     const ParameterInfo* parameters;
     union
@@ -889,17 +924,19 @@ struct MethodInfo
     uint8_t parameters_count;
     uint8_t is_generic : 1;
     uint8_t is_inflated : 1;
-};
-struct Il2CppRuntimeInterfaceOffsetPair
+    uint8_t wrapper_type : 1;
+    uint8_t is_marshaled_from_native : 1;
+} MethodInfo;
+typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
     Il2CppClass* interfaceType;
     int32_t offset;
-};
+} Il2CppRuntimeInterfaceOffsetPair;
 typedef void (*PInvokeMarshalToNativeFunc)(void* managedStructure, void* marshaledStructure);
 typedef void (*PInvokeMarshalFromNativeFunc)(void* marshaledStructure, void* managedStructure);
 typedef void (*PInvokeMarshalCleanupFunc)(void* marshaledStructure);
 typedef struct Il2CppIUnknown* (*CreateCCWFunc)(Il2CppObject* obj);
-struct Il2CppInteropData
+typedef struct Il2CppInteropData
 {
     Il2CppMethodPointer delegatePInvokeWrapperFunction;
     PInvokeMarshalToNativeFunc pinvokeMarshalToNativeFunction;
@@ -908,15 +945,15 @@ struct Il2CppInteropData
     CreateCCWFunc createCCWFunction;
     const Il2CppGuid* guid;
     const Il2CppType* type;
-};
-struct Il2CppClass
+} Il2CppInteropData;
+typedef struct Il2CppClass
 {
     const Il2CppImage* image;
     void* gc_desc;
     const char* name;
     const char* namespaze;
-    const Il2CppType* byval_arg;
-    const Il2CppType* this_arg;
+    Il2CppType byval_arg;
+    Il2CppType this_arg;
     Il2CppClass* element_class;
     Il2CppClass* castClass;
     Il2CppClass* declaringType;
@@ -924,6 +961,7 @@ struct Il2CppClass
     Il2CppGenericClass *generic_class;
     const Il2CppTypeDefinition* typeDefinition;
     const Il2CppInteropData* interopData;
+    Il2CppClass* klass;
     FieldInfo* fields;
     const EventInfo* events;
     const PropertyInfo* properties;
@@ -974,15 +1012,15 @@ struct Il2CppClass
     uint8_t is_import_or_windows_runtime : 1;
     uint8_t is_vtable_initialized : 1;
     VirtualInvokeData vtable[0];
-};
-struct Il2CppTypeDefinitionSizes
+} Il2CppClass;
+typedef struct Il2CppTypeDefinitionSizes
 {
     uint32_t instance_size;
     int32_t native_size;
     uint32_t static_fields_size;
     uint32_t thread_static_fields_size;
-};
-struct Il2CppDomain
+} Il2CppTypeDefinitionSizes;
+typedef struct Il2CppDomain
 {
     Il2CppAppDomain* domain;
     Il2CppAppDomainSetup* setup;
@@ -990,25 +1028,50 @@ struct Il2CppDomain
     const char* friendly_name;
     uint32_t domain_id;
     volatile int threadpool_jobs;
-};
-struct Il2CppImage
+    void* agent_info;
+} Il2CppDomain;
+typedef struct Il2CppAssemblyName
+{
+    const char* name;
+    const char* culture;
+    const char* hash_value;
+    const char* public_key;
+    uint32_t hash_alg;
+    int32_t hash_len;
+    uint32_t flags;
+    int32_t major;
+    int32_t minor;
+    int32_t build;
+    int32_t revision;
+    uint8_t public_key_token[8];
+} Il2CppAssemblyName;
+typedef struct Il2CppImage
 {
     const char* name;
     const char *nameNoExt;
-    AssemblyIndex assemblyIndex;
+    Il2CppAssembly* assembly;
     TypeDefinitionIndex typeStart;
     uint32_t typeCount;
     TypeDefinitionIndex exportedTypeStart;
     uint32_t exportedTypeCount;
     MethodIndex entryPointIndex;
-    mutable Il2CppNameToTypeDefinitionIndexHashTable* nameToClassHashTable;
+    Il2CppNameToTypeDefinitionIndexHashTable * nameToClassHashTable;
     uint32_t token;
-};
-struct Il2CppCodeGenOptions
+    uint8_t dynamic;
+} Il2CppImage;
+typedef struct Il2CppAssembly
 {
-    bool enablePrimitiveValueTypeGenericSharing;
-};
-struct Il2CppCodeRegistration
+    Il2CppImage* image;
+    CustomAttributeIndex customAttributeIndex;
+    int32_t referencedAssemblyStart;
+    int32_t referencedAssemblyCount;
+    Il2CppAssemblyName aname;
+} Il2CppAssembly;
+typedef struct Il2CppCodeGenOptions
+{
+    uint8_t enablePrimitiveValueTypeGenericSharing;
+} Il2CppCodeGenOptions;
+typedef struct Il2CppCodeRegistration
 {
     uint32_t methodPointersCount;
     const Il2CppMethodPointer* methodPointers;
@@ -1024,8 +1087,8 @@ struct Il2CppCodeRegistration
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
-};
-struct Il2CppMetadataRegistration
+} Il2CppCodeRegistration;
+typedef struct Il2CppMetadataRegistration
 {
     int32_t genericClassesCount;
     Il2CppGenericClass* const * genericClasses;
@@ -1043,8 +1106,8 @@ struct Il2CppMetadataRegistration
     const Il2CppTypeDefinitionSizes** typeDefinitionsSizes;
     const size_t metadataUsagesCount;
     void** const* metadataUsages;
-};
-struct Il2CppRuntimeStats
+} Il2CppMetadataRegistration;
+typedef struct Il2CppRuntimeStats
 {
     uint64_t new_object_count;
     uint64_t initialized_class_count;
@@ -1054,10 +1117,10 @@ struct Il2CppRuntimeStats
     uint64_t generic_class_count;
     uint64_t inflated_method_count;
     uint64_t inflated_type_count;
-    bool enabled;
-};
+    uint8_t enabled;
+} Il2CppRuntimeStats;
 extern Il2CppRuntimeStats il2cpp_runtime_stats;
-struct Il2CppPerfCounters
+typedef struct Il2CppPerfCounters
 {
     uint32_t jit_methods;
     uint32_t jit_bytes;
@@ -1123,93 +1186,90 @@ struct Il2CppPerfCounters
     uint64_t threadpool_ioworkitems;
     unsigned int threadpool_threads;
     unsigned int threadpool_iothreads;
-};
-struct Il2CppClass;
-struct MethodInfo;
-struct PropertyInfo;
-struct FieldInfo;
-struct EventInfo;
-struct Il2CppType;
-struct Il2CppAssembly;
-struct Il2CppException;
-struct Il2CppImage;
-struct Il2CppDomain;
-struct Il2CppString;
-struct Il2CppReflectionMethod;
-struct Il2CppAsyncCall;
-struct Il2CppIUnknown;
-struct Il2CppWaitHandle;
-struct MonitorData;
-namespace il2cpp
-{
-namespace os
+} Il2CppPerfCounters;
+typedef struct Il2CppClass Il2CppClass;
+typedef struct MethodInfo MethodInfo;
+typedef struct PropertyInfo PropertyInfo;
+typedef struct FieldInfo FieldInfo;
+typedef struct EventInfo EventInfo;
+typedef struct Il2CppType Il2CppType;
+typedef struct Il2CppAssembly Il2CppAssembly;
+typedef struct Il2CppException Il2CppException;
+typedef struct Il2CppImage Il2CppImage;
+typedef struct Il2CppDomain Il2CppDomain;
+typedef struct Il2CppString Il2CppString;
+typedef struct Il2CppReflectionMethod Il2CppReflectionMethod;
+typedef struct Il2CppAsyncCall Il2CppAsyncCall;
+typedef struct Il2CppIUnknown Il2CppIUnknown;
+typedef struct Il2CppWaitHandle Il2CppWaitHandle;
+typedef struct MonitorData MonitorData;
+typedef struct Il2CppReflectionAssembly Il2CppReflectionAssembly;
+typedef Il2CppClass Il2CppVTable;
+typedef struct Il2CppObject
 {
-    class FastMutex;
-    class Thread;
-}
-}
-struct Il2CppReflectionAssembly;
-struct Il2CppObject
+    union
 {
     Il2CppClass *klass;
-    MonitorData *monitor;
+        Il2CppVTable *vtable;
 };
+    MonitorData *monitor;
+} Il2CppObject;
 typedef int32_t il2cpp_array_lower_bound_t;
-struct Il2CppArrayBounds
+typedef struct Il2CppArrayBounds
 {
     il2cpp_array_size_t length;
     il2cpp_array_lower_bound_t lower_bound;
-};
-struct Il2CppArray : public Il2CppObject
+} Il2CppArrayBounds;
+typedef struct Il2CppArray
 {
+    Il2CppObject obj;
     Il2CppArrayBounds *bounds;
     il2cpp_array_size_t max_length;
-};
-struct Il2CppArraySize : public Il2CppArray
+} Il2CppArray;
+typedef struct Il2CppArraySize
 {
-    __attribute__((aligned(8))) void* vector;
-};
+    Il2CppObject obj;
+    Il2CppArrayBounds *bounds;
+    il2cpp_array_size_t max_length;
+    __attribute__((aligned(8))) void* vector[0];
+} Il2CppArraySize;
 const size_t kIl2CppSizeOfArray = (__builtin_offsetof (Il2CppArraySize, vector));
 const size_t kIl2CppOffsetOfArrayBounds = (__builtin_offsetof (Il2CppArray, bounds));
 const size_t kIl2CppOffsetOfArrayLength = (__builtin_offsetof (Il2CppArray, max_length));
-struct Il2CppString
+typedef struct Il2CppString
 {
     Il2CppObject object;
     int32_t length;
     Il2CppChar chars[0];
-};
-struct Il2CppReflectionType
+} Il2CppString;
+typedef struct Il2CppReflectionType
 {
     Il2CppObject object;
     const Il2CppType *type;
-};
-struct Il2CppReflectionRuntimeType
+} Il2CppReflectionType;
+typedef struct Il2CppReflectionRuntimeType
 {
     Il2CppReflectionType type;
     Il2CppObject *type_info;
     Il2CppObject* genericCache;
     Il2CppObject* serializationCtor;
-};
-struct Il2CppReflectionMonoType
+} Il2CppReflectionRuntimeType;
+typedef struct Il2CppReflectionMonoType
 {
     Il2CppReflectionRuntimeType type;
-    const Il2CppType* GetIl2CppType() const
-    {
-        return type.type.type;
-    }
-};
-struct Il2CppReflectionEvent
+} Il2CppReflectionMonoType;
+typedef struct Il2CppReflectionEvent
 {
     Il2CppObject object;
     Il2CppObject *cached_add_event;
-};
-struct Il2CppReflectionMonoEvent
+} Il2CppReflectionEvent;
+typedef struct Il2CppReflectionMonoEvent
 {
     Il2CppReflectionEvent event;
     Il2CppReflectionType* reflectedType;
     const EventInfo* eventInfo;
-};
-struct Il2CppReflectionMonoEventInfo
+} Il2CppReflectionMonoEvent;
+typedef struct Il2CppReflectionMonoEventInfo
 {
     Il2CppReflectionType* declaringType;
     Il2CppReflectionType* reflectedType;
@@ -1219,8 +1279,8 @@ struct Il2CppReflectionMonoEventInfo
     Il2CppReflectionMethod* raiseMethod;
     uint32_t eventAttributes;
     Il2CppArray* otherMethods;
-};
-struct Il2CppReflectionField
+} Il2CppReflectionMonoEventInfo;
+typedef struct Il2CppReflectionField
 {
     Il2CppObject object;
     Il2CppClass *klass;
@@ -1228,33 +1288,33 @@ struct Il2CppReflectionField
     Il2CppString *name;
     Il2CppReflectionType *type;
     uint32_t attrs;
-};
-struct Il2CppReflectionProperty
+} Il2CppReflectionField;
+typedef struct Il2CppReflectionProperty
 {
     Il2CppObject object;
     Il2CppClass *klass;
     const PropertyInfo *property;
-};
-struct Il2CppReflectionMethod
+} Il2CppReflectionProperty;
+typedef struct Il2CppReflectionMethod
 {
     Il2CppObject object;
     const MethodInfo *method;
     Il2CppString *name;
     Il2CppReflectionType *reftype;
-};
-struct Il2CppReflectionGenericMethod
+} Il2CppReflectionMethod;
+typedef struct Il2CppReflectionGenericMethod
 {
     Il2CppReflectionMethod base;
-};
-struct Il2CppMethodInfo
+} Il2CppReflectionGenericMethod;
+typedef struct Il2CppMethodInfo
 {
     Il2CppReflectionType *parent;
     Il2CppReflectionType *ret;
     uint32_t attrs;
     uint32_t implattrs;
     uint32_t callconv;
-};
-struct Il2CppPropertyInfo
+} Il2CppMethodInfo;
+typedef struct Il2CppPropertyInfo
 {
     Il2CppReflectionType* parent;
     Il2CppReflectionType* declaringType;
@@ -1262,8 +1322,8 @@ struct Il2CppPropertyInfo
     Il2CppReflectionMethod *get;
     Il2CppReflectionMethod *set;
     uint32_t attrs;
-};
-struct Il2CppReflectionParameter
+} Il2CppPropertyInfo;
+typedef struct Il2CppReflectionParameter
 {
     Il2CppObject object;
     Il2CppReflectionType *ClassImpl;
@@ -1273,8 +1333,8 @@ struct Il2CppReflectionParameter
     int32_t PositionImpl;
     uint32_t AttrsImpl;
     Il2CppObject *MarshalAsImpl;
-};
-struct Il2CppReflectionModule
+} Il2CppReflectionParameter;
+typedef struct Il2CppReflectionModule
 {
     Il2CppObject obj;
     const Il2CppImage* image;
@@ -1282,10 +1342,10 @@ struct Il2CppReflectionModule
     Il2CppString* fqname;
     Il2CppString* name;
     Il2CppString* scopename;
-    bool is_resource;
+    uint8_t is_resource;
     uint32_t token;
-};
-struct Il2CppReflectionAssemblyName
+} Il2CppReflectionModule;
+typedef struct Il2CppReflectionAssemblyName
 {
     Il2CppObject obj;
     Il2CppString *name;
@@ -1301,8 +1361,8 @@ struct Il2CppReflectionAssemblyName
     Il2CppObject *version;
     uint32_t processor_architecture;
     uint32_t contentType;
-};
-struct Il2CppReflectionAssembly
+} Il2CppReflectionAssemblyName;
+typedef struct Il2CppReflectionAssembly
 {
     Il2CppObject object;
     const Il2CppAssembly *assembly;
@@ -1313,10 +1373,10 @@ struct Il2CppReflectionAssembly
     Il2CppObject *refuse;
     Il2CppObject *granted;
     Il2CppObject *denied;
-    bool from_byte_array;
+    uint8_t from_byte_array;
     Il2CppString *name;
-};
-struct Il2CppReflectionMarshal
+} Il2CppReflectionAssembly;
+typedef struct Il2CppReflectionMarshal
 {
     Il2CppObject object;
     int32_t count;
@@ -1327,19 +1387,19 @@ struct Il2CppReflectionMarshal
     Il2CppString* marshaltype;
     Il2CppObject* marshaltyperef;
     int32_t param_num;
-    bool has_size;
-};
-struct Il2CppReflectionPointer
+    uint8_t has_size;
+} Il2CppReflectionMarshal;
+typedef struct Il2CppReflectionPointer
 {
     Il2CppObject object;
     void* data;
     Il2CppReflectionType* type;
-};
-struct Il2CppInternalThread
+} Il2CppReflectionPointer;
+typedef struct Il2CppInternalThread
 {
     Il2CppObject obj;
     int lock_thread_id;
-    il2cpp::os::Thread* handle;
+    void* handle;
     void* native_handle;
     Il2CppArray* cached_culture_info;
     Il2CppChar* name;
@@ -1348,7 +1408,7 @@ struct Il2CppInternalThread
     Il2CppObject* abort_exc;
     int abort_state_handle;
     uint64_t tid;
-    void* stack_ptr;
+    intptr_t debugger_thread;
     void** static_data;
     void* runtime_thread_info;
     Il2CppObject* current_appcontext;
@@ -1357,9 +1417,9 @@ struct Il2CppInternalThread
     int _serialized_principal_version;
     void* appdomain_refs;
     int32_t interruption_requested;
-    il2cpp::os::FastMutex* synch_cs;
-    bool threadpool_thread;
-    bool thread_interrupt_requested;
+    void* synch_cs;
+    uint8_t threadpool_thread;
+    uint8_t thread_interrupt_requested;
     int stack_size;
     uint8_t apartment_state;
     int critical_region_level;
@@ -1367,7 +1427,7 @@ struct Il2CppInternalThread
     uint32_t small_id;
     void* manage_callback;
     void* interrupt_on_stop;
-    void* flags;
+    intptr_t flags;
     void* thread_pinning_ref;
     void* abort_protected_block_count;
     int32_t priority;
@@ -1377,14 +1437,14 @@ struct Il2CppInternalThread
     size_t thread_state;
     size_t unused2;
     void* last;
-};
-struct Il2CppIOSelectorJob
+} Il2CppInternalThread;
+typedef struct Il2CppIOSelectorJob
 {
     Il2CppObject object;
     int32_t operation;
     Il2CppObject *callback;
     Il2CppObject *state;
-};
+} Il2CppIOSelectorJob;
 typedef enum
 {
     Il2Cpp_CallType_Sync = 0,
@@ -1392,7 +1452,7 @@ typedef enum
     Il2Cpp_CallType_EndInvoke = 2,
     Il2Cpp_CallType_OneWay = 3
 } Il2CppCallType;
-struct Il2CppMethodMessage
+typedef struct Il2CppMethodMessage
 {
     Il2CppObject obj;
     Il2CppReflectionMethod *method;
@@ -1404,8 +1464,8 @@ struct Il2CppMethodMessage
     Il2CppObject *exc;
     Il2CppAsyncResult *async_result;
     uint32_t call_type;
-};
-struct Il2CppAppDomainSetup
+} Il2CppMethodMessage;
+typedef struct Il2CppAppDomainSetup
 {
     Il2CppObject object;
     Il2CppString* application_base;
@@ -1430,8 +1490,8 @@ struct Il2CppAppDomainSetup
     uint8_t disallow_appbase_probe;
     Il2CppArray* configuration_bytes;
     Il2CppArray* serialized_non_primitives;
-};
-struct Il2CppThread
+} Il2CppAppDomainSetup;
+typedef struct Il2CppThread
 {
     Il2CppObject obj;
     Il2CppInternalThread* internal_thread;
@@ -1441,14 +1501,11 @@ struct Il2CppThread
     int32_t principal_version;
     Il2CppDelegate* delegate;
     Il2CppObject* executionContext;
-    bool executionContextBelongsToOuterScope;
-    Il2CppInternalThread* GetInternalThread() const
-    {
-        return internal_thread;
-    }
-};
-struct Il2CppException : public Il2CppObject
+    uint8_t executionContextBelongsToOuterScope;
+} Il2CppThread;
+typedef struct Il2CppException
 {
+    Il2CppObject object;
     Il2CppString* className;
     Il2CppString* message;
     Il2CppObject* _data;
@@ -1464,23 +1521,23 @@ struct Il2CppException : public Il2CppOb
     Il2CppObject* safeSerializationManager;
     Il2CppArray* captured_traces;
     Il2CppArray* native_trace_ips;
-};
-struct Il2CppSystemException
+} Il2CppException;
+typedef struct Il2CppSystemException
 {
     Il2CppException base;
-};
-struct Il2CppArgumentException
+} Il2CppSystemException;
+typedef struct Il2CppArgumentException
 {
     Il2CppException base;
     Il2CppString *argName;
-};
-struct Il2CppTypedRef
+} Il2CppArgumentException;
+typedef struct Il2CppTypedRef
 {
-    Il2CppType *type;
+    const Il2CppType *type;
     void* value;
     Il2CppClass *klass;
-};
-struct Il2CppDelegate
+} Il2CppTypedRef;
+typedef struct Il2CppDelegate
 {
     Il2CppObject object;
     Il2CppMethodPointer method_ptr;
@@ -1493,29 +1550,24 @@ struct Il2CppDelegate
     Il2CppReflectionMethod *method_info;
     Il2CppReflectionMethod *original_method_info;
     Il2CppObject *data;
-    bool method_is_virtual;
-};
-struct Il2CppMulticastDelegate
+    uint8_t method_is_virtual;
+} Il2CppDelegate;
+typedef struct Il2CppMulticastDelegate
 {
     Il2CppDelegate delegate;
     Il2CppArray *delegates;
-};
-struct Il2CppMarshalByRefObject
+} Il2CppMulticastDelegate;
+typedef struct Il2CppMarshalByRefObject
 {
     Il2CppObject obj;
     Il2CppObject *identity;
-};
-struct Il2CppComObject : Il2CppObject
-{
-    Il2CppIUnknown* identity;
-    volatile int32_t refCount;
-};
-struct Il2CppAppDomain
+} Il2CppMarshalByRefObject;
+typedef struct Il2CppAppDomain
 {
     Il2CppMarshalByRefObject mbr;
     Il2CppDomain *data;
-};
-struct Il2CppStackFrame
+} Il2CppAppDomain;
+typedef struct Il2CppStackFrame
 {
     Il2CppObject obj;
     int32_t il_offset;
@@ -1527,8 +1579,8 @@ struct Il2CppStackFrame
     int32_t line;
     int32_t column;
     Il2CppString *internal_method_name;
-};
-struct Il2CppDateTimeFormatInfo
+} Il2CppStackFrame;
+typedef struct Il2CppDateTimeFormatInfo
 {
     Il2CppObject obj;
     Il2CppObject* CultureData;
@@ -1570,19 +1622,19 @@ struct Il2CppDateTimeFormatInfo
     Il2CppArray* AbbrevEraNames;
     Il2CppArray* AbbrevEnglishEraNames;
     Il2CppArray* OptionalCalendars;
-    bool readOnly;
+    uint8_t readOnly;
     int32_t FormatFlags;
     int32_t CultureID;
-    bool UseUserOverride;
-    bool UseCalendarInfo;
+    uint8_t UseUserOverride;
+    uint8_t UseCalendarInfo;
     int32_t DataItem;
-    bool IsDefaultCalendar;
+    uint8_t IsDefaultCalendar;
     Il2CppArray* DateWords;
     Il2CppString* FullTimeSpanPositivePattern;
     Il2CppString* FullTimeSpanNegativePattern;
     Il2CppArray* dtfiTokenHash;
-};
-struct Il2CppNumberFormatInfo
+} Il2CppDateTimeFormatInfo;
+typedef struct Il2CppNumberFormatInfo
 {
     Il2CppObject obj;
     Il2CppArray* numberGroupSizes;
@@ -1614,13 +1666,13 @@ struct Il2CppNumberFormatInfo
     int percentNegativePattern;
     int percentDecimalDigits;
     int digitSubstitution;
-    bool readOnly;
-    bool useUserOverride;
-    bool isInvariant;
-    bool validForParseAsNumber;
-    bool validForParseAsCurrency;
-};
-struct Il2CppCultureData
+    uint8_t readOnly;
+    uint8_t useUserOverride;
+    uint8_t isInvariant;
+    uint8_t validForParseAsNumber;
+    uint8_t validForParseAsCurrency;
+} Il2CppNumberFormatInfo;
+typedef struct Il2CppCultureData
 {
     Il2CppObject obj;
     Il2CppString *AMDesignator;
@@ -1630,8 +1682,8 @@ struct Il2CppCultureData
     Il2CppArray *ShortTimePatterns;
     uint32_t FirstDayOfWeek;
     uint32_t CalendarWeekRule;
-};
-struct Il2CppCalendarData
+} Il2CppCultureData;
+typedef struct Il2CppCalendarData
 {
     Il2CppObject obj;
     Il2CppString *NativeName;
@@ -1649,17 +1701,17 @@ struct Il2CppCalendarData
     Il2CppArray *AbbreviatedMonthNames;
     Il2CppArray *GenitiveMonthNames;
     Il2CppArray *GenitiveAbbreviatedMonthNames;
-};
-struct Il2CppCultureInfo
+} Il2CppCalendarData;
+typedef struct Il2CppCultureInfo
 {
     Il2CppObject obj;
-    bool is_read_only;
+    uint8_t is_read_only;
     int32_t lcid;
     int32_t parent_lcid;
     int32_t datetime_index;
     int32_t number_index;
     int32_t default_calendar_type;
-    bool use_user_override;
+    uint8_t use_user_override;
     Il2CppNumberFormatInfo* number_format;
     Il2CppDateTimeFormatInfo* datetime_format;
     Il2CppObject* textinfo;
@@ -1676,12 +1728,12 @@ struct Il2CppCultureInfo
     int dataItem;
     Il2CppObject* calendar;
     Il2CppObject* parent_culture;
-    bool constructed;
+    uint8_t constructed;
     Il2CppArray* cached_serialized_form;
     Il2CppObject* cultureData;
-    bool isInherited;
-};
-struct Il2CppRegionInfo
+    uint8_t isInherited;
+} Il2CppCultureInfo;
+typedef struct Il2CppRegionInfo
 {
     Il2CppObject obj;
     int32_t geo_id;
@@ -1692,16 +1744,17 @@ struct Il2CppRegionInfo
     Il2CppString* currency_symbol;
     Il2CppString* iso_currency_symbol;
     Il2CppString* currency_english_name;
-};
-struct Il2CppSafeHandle
+} Il2CppRegionInfo;
+typedef struct Il2CppSafeHandle
 {
     Il2CppObject base;
     void* handle;
     int state;
-    bool owns_handle;
-    bool fullyInitialized;
-};
-struct Il2CppStringBuilder
+    uint8_t owns_handle;
+    uint8_t fullyInitialized;
+} Il2CppSafeHandle;
+typedef struct Il2CppStringBuilder Il2CppStringBuilder;
+typedef struct Il2CppStringBuilder
 {
     Il2CppObject object;
     Il2CppArray* chunkChars;
@@ -1709,29 +1762,29 @@ struct Il2CppStringBuilder
     int chunkLength;
     int chunkOffset;
     int maxCapacity;
-};
-struct Il2CppSocketAddress
+} Il2CppStringBuilder;
+typedef struct Il2CppSocketAddress
 {
     Il2CppObject base;
     int m_Size;
     Il2CppArray* data;
-    bool m_changed;
+    uint8_t m_changed;
     int m_hash;
-};
-struct Il2CppSortKey
+} Il2CppSocketAddress;
+typedef struct Il2CppSortKey
 {
     Il2CppObject base;
     Il2CppString *str;
     Il2CppArray *key;
     int32_t options;
     int32_t lcid;
-};
-struct Il2CppErrorWrapper
+} Il2CppSortKey;
+typedef struct Il2CppErrorWrapper
 {
     Il2CppObject base;
     int32_t errorCode;
-};
-struct Il2CppAsyncResult
+} Il2CppErrorWrapper;
+typedef struct Il2CppAsyncResult
 {
     Il2CppObject base;
     Il2CppObject *async_state;
@@ -1739,14 +1792,14 @@ struct Il2CppAsyncResult
     Il2CppDelegate *async_delegate;
     void* data;
     Il2CppAsyncCall *object_data;
-    bool sync_completed;
-    bool completed;
-    bool endinvoke_called;
+    uint8_t sync_completed;
+    uint8_t completed;
+    uint8_t endinvoke_called;
     Il2CppObject *async_callback;
     Il2CppObject *execution_context;
     Il2CppObject *original_context;
-};
-struct Il2CppAsyncCall
+} Il2CppAsyncResult;
+typedef struct Il2CppAsyncCall
 {
     Il2CppObject base;
     Il2CppMethodMessage *msg;
@@ -1755,22 +1808,22 @@ struct Il2CppAsyncCall
     Il2CppObject *state;
     Il2CppObject *res;
     Il2CppArray *out_args;
-};
-struct Il2CppExceptionWrapper
+} Il2CppAsyncCall;
+typedef struct Il2CppExceptionWrapper Il2CppExceptionWrapper;
+typedef struct Il2CppExceptionWrapper
 {
     Il2CppException* ex;
-    Il2CppExceptionWrapper(Il2CppException* ex) : ex(ex) {}
-};
-struct Il2CppIOAsyncResult
+} Il2CppExceptionWrapper;
+typedef struct Il2CppIOAsyncResult
 {
     Il2CppObject base;
     Il2CppDelegate* callback;
     Il2CppObject* state;
     Il2CppWaitHandle* wait_handle;
-    bool completed_synchronously;
-    bool completed;
-};
-struct Il2CppSocketAsyncResult
+    uint8_t completed_synchronously;
+    uint8_t completed;
+} Il2CppIOAsyncResult;
+typedef struct Il2CppSocketAsyncResult
 {
     Il2CppIOAsyncResult base;
     Il2CppObject* socket;
@@ -1785,34 +1838,34 @@ struct Il2CppSocketAsyncResult
     Il2CppArray* addresses;
     int32_t port;
     Il2CppObject* buffers;
-    bool reuseSocket;
+    uint8_t reuseSocket;
     int32_t currentAddress;
     Il2CppObject* acceptedSocket;
     int32_t total;
     int32_t error;
     int32_t endCalled;
-};
-enum Il2CppResourceLocation
+} Il2CppSocketAsyncResult;
+typedef enum Il2CppResourceLocation
 {
     IL2CPP_RESOURCE_LOCATION_EMBEDDED = 1,
     IL2CPP_RESOURCE_LOCATION_ANOTHER_ASSEMBLY = 2,
     IL2CPP_RESOURCE_LOCATION_IN_MANIFEST = 4
-};
-struct Il2CppManifestResourceInfo
+} Il2CppResourceLocation;
+typedef struct Il2CppManifestResourceInfo
 {
     Il2CppObject object;
     Il2CppReflectionAssembly* assembly;
     Il2CppString* filename;
     uint32_t location;
-};
-struct Il2CppAppContext
+} Il2CppManifestResourceInfo;
+typedef struct Il2CppAppContext
 {
     Il2CppObject obj;
     int32_t domain_id;
     int32_t context_id;
     void* static_data;
-};
-struct Il2CppDecimal
+} Il2CppAppContext;
+typedef struct Il2CppDecimal
 {
     uint16_t reserved;
     union
@@ -1834,49 +1887,49 @@ struct Il2CppDecimal
         } v;
         uint64_t Lo64;
     } v;
-};
-struct Il2CppDouble
+} Il2CppDecimal;
+typedef struct Il2CppDouble
 {
     uint32_t mantLo : 32;
     uint32_t mantHi : 20;
     uint32_t exp : 11;
     uint32_t sign : 1;
-};
-typedef union
+} Il2CppDouble;
+typedef union Il2CppDouble_double
 {
     Il2CppDouble s;
     double d;
 } Il2CppDouble_double;
-typedef enum
+typedef enum Il2CppDecimalCompareResult
 {
     IL2CPP_DECIMAL_CMP_LT = -1,
     IL2CPP_DECIMAL_CMP_EQ,
     IL2CPP_DECIMAL_CMP_GT
 } Il2CppDecimalCompareResult;
-struct Il2CppSingle
+typedef struct Il2CppSingle
 {
     uint32_t mant : 23;
     uint32_t exp : 8;
     uint32_t sign : 1;
-};
-typedef union
+} Il2CppSingle;
+typedef union Il2CppSingle_float
 {
     Il2CppSingle s;
     float f;
 } Il2CppSingle_float;
-struct Il2CppGuid
+typedef struct Il2CppGuid
 {
     uint32_t data1;
     uint16_t data2;
     uint16_t data3;
     uint8_t data4[8];
-};
-struct Il2CppSafeArrayBound
+} Il2CppGuid;
+typedef struct Il2CppSafeArrayBound
 {
     uint32_t element_count;
     int32_t lower_bound;
-};
-struct Il2CppSafeArray
+} Il2CppSafeArrayBound;
+typedef struct Il2CppSafeArray
 {
     uint16_t dimension_count;
     uint16_t features;
@@ -1884,8 +1937,8 @@ struct Il2CppSafeArray
     uint32_t lock_count;
     void* data;
     Il2CppSafeArrayBound bounds[1];
-};
-struct Il2CppWin32Decimal
+} Il2CppSafeArray;
+typedef struct Il2CppWin32Decimal
 {
     uint16_t reserved;
     union
@@ -1907,9 +1960,9 @@ struct Il2CppWin32Decimal
         } s2;
         uint64_t lo64;
     } u2;
-};
+} Il2CppWin32Decimal;
 typedef int16_t IL2CPP_VARIANT_BOOL;
-enum Il2CppVarType
+typedef enum Il2CppVarType
 {
     IL2CPP_VT_EMPTY = 0,
     IL2CPP_VT_NULL = 1,
@@ -1963,8 +2016,9 @@ enum Il2CppVarType
     IL2CPP_VT_ILLEGAL = 0xffff,
     IL2CPP_VT_ILLEGALMASKED = 0xfff,
     IL2CPP_VT_TYPEMASK = 0xfff,
-};
-struct Il2CppVariant
+} Il2CppVarType;
+typedef struct Il2CppVariant Il2CppVariant;
+typedef struct Il2CppVariant
 {
     union
     {
@@ -2028,13 +2082,13 @@ struct Il2CppVariant
         } n2;
         Il2CppWin32Decimal decVal;
     } n1;
-};
-struct Il2CppFileTime
+} Il2CppVariant;
+typedef struct Il2CppFileTime
 {
     uint32_t low;
     uint32_t high;
-};
-struct Il2CppStatStg
+} Il2CppFileTime;
+typedef struct Il2CppStatStg
 {
     Il2CppChar* name;
     uint32_t type;
@@ -2047,93 +2101,17 @@ struct Il2CppStatStg
     Il2CppGuid clsid;
     uint32_t state;
     uint32_t reserved;
-};
-struct Il2CppHString__
+} Il2CppStatStg;
+typedef struct Il2CppHString__
 {
     int unused;
-};
+} Il2CppHString__;
 typedef Il2CppHString__* Il2CppHString;
-struct Il2CppHStringHeader
+typedef struct Il2CppHStringHeader
 {
     union
     {
         void* Reserved1;
         char Reserved2[24];
     } Reserved;
-};
-struct Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t QueryInterface(const Il2CppGuid& iid, void** object) = 0;
-    virtual uint32_t AddRef() = 0;
-    virtual uint32_t Release() = 0;
-};
-struct Il2CppISequentialStream : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t Read(void* buffer, uint32_t size, uint32_t* read) = 0;
-    virtual il2cpp_hresult_t Write(const void* buffer, uint32_t size, uint32_t* written) = 0;
-};
-struct Il2CppIStream : Il2CppISequentialStream
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t Seek(int64_t move, uint32_t origin, uint64_t* position) = 0;
-    virtual il2cpp_hresult_t SetSize(uint64_t size) = 0;
-    virtual il2cpp_hresult_t CopyTo(Il2CppIStream* stream, uint64_t size, uint64_t* read, uint64_t* written) = 0;
-    virtual il2cpp_hresult_t Commit(uint32_t flags) = 0;
-    virtual il2cpp_hresult_t Revert() = 0;
-    virtual il2cpp_hresult_t LockRegion(uint64_t offset, uint64_t size, uint32_t type) = 0;
-    virtual il2cpp_hresult_t UnlockRegion(uint64_t offset, uint64_t size, uint32_t type) = 0;
-    virtual il2cpp_hresult_t Stat(Il2CppStatStg* data, uint32_t flags) = 0;
-    virtual il2cpp_hresult_t Clone(Il2CppIStream** stream) = 0;
-};
-struct Il2CppIMarshal : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t GetUnmarshalClass(const Il2CppGuid& iid, void* object, uint32_t context, void* reserved, uint32_t flags, Il2CppGuid* clsid) = 0;
-    virtual il2cpp_hresult_t GetMarshalSizeMax(const Il2CppGuid& iid, void* object, uint32_t context, void* reserved, uint32_t flags, uint32_t* size) = 0;
-    virtual il2cpp_hresult_t MarshalInterface(Il2CppIStream* stream, const Il2CppGuid& iid, void* object, uint32_t context, void* reserved, uint32_t flags) = 0;
-    virtual il2cpp_hresult_t UnmarshalInterface(Il2CppIStream* stream, const Il2CppGuid& iid, void** object) = 0;
-    virtual il2cpp_hresult_t ReleaseMarshalData(Il2CppIStream* stream) = 0;
-    virtual il2cpp_hresult_t DisconnectObject(uint32_t reserved) = 0;
-};
-struct Il2CppIManagedObject : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t GetSerializedBuffer(Il2CppChar** bstr) = 0;
-    virtual il2cpp_hresult_t GetObjectIdentity(Il2CppChar** bstr_guid, int32_t* app_domain_id, intptr_t* ccw) = 0;
-};
-struct Il2CppIManagedObjectHolder : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual Il2CppObject* GetManagedObject() = 0;
-    virtual void Destroy() = 0;
-};
-struct Il2CppIInspectable : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t GetIids(uint32_t* iidCount, Il2CppGuid** iids) = 0;
-    virtual il2cpp_hresult_t GetRuntimeClassName(Il2CppHString* className) = 0;
-    virtual il2cpp_hresult_t GetTrustLevel(int32_t* trustLevel) = 0;
-};
-struct Il2CppIActivationFactory : Il2CppIInspectable
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t ActivateInstance(Il2CppIInspectable** instance) = 0;
-};
-struct Il2CppIRestrictedErrorInfo : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t GetErrorDetails(Il2CppChar** bstrDescription, il2cpp_hresult_t* error, Il2CppChar** bstrRestrictedDescription, Il2CppChar** bstrCapabilitySid) = 0;
-    virtual il2cpp_hresult_t GetReference(Il2CppChar** bstrReference) = 0;
-};
-struct Il2CppILanguageExceptionErrorInfo : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t GetLanguageException(Il2CppIUnknown** languageException) = 0;
-};
-struct Il2CppIAgileObject : Il2CppIUnknown
-{
-    static const Il2CppGuid IID;
-    virtual il2cpp_hresult_t GetLanguageException(Il2CppIUnknown** languageException) = 0;
-};
+} Il2CppHStringHeader;
--- 2018/2018.1.9f2/struct.h
+++ 2018/2018.2.0b9/struct.h
@@ -782,6 +782,7 @@ typedef struct Il2CppDefaults
     Il2CppClass* windows_foundation_uri_class;
     Il2CppClass* windows_foundation_iuri_runtime_class_class;
     Il2CppClass* system_uri_class;
+    Il2CppClass* system_guid_class;
 } Il2CppDefaults;
 extern Il2CppDefaults il2cpp_defaults;
 struct Il2CppClass;
@@ -853,44 +854,73 @@ typedef enum SequencePointKind
 } SequencePointKind;
 typedef struct Il2CppMethodExecutionContextInfo
 {
-    const Il2CppType** m_type;
-    const char* m_name;
-    MethodVariableKind m_variableKind;
-    int m_start;
-    int m_end;
+    TypeIndex typeIndex;
+    int32_t nameIndex;
+    MethodVariableKind variableKind;
+    int32_t startOffset;
+    int32_t endOffset;
 } Il2CppMethodExecutionContextInfo;
+typedef struct Il2CppMethodExecutionContextInfoIndex
+{
+    int8_t tableIndex;
+    int32_t startIndex;
+    int32_t count;
+} Il2CppMethodExecutionContextInfoIndex;
 typedef struct Il2CppMethodScope
 {
-    int startOffset;
-    int endOffset;
+    int32_t startOffset;
+    int32_t endOffset;
 } Il2CppMethodScope;
 typedef struct Il2CppMethodHeaderInfo
 {
-    int m_codeSize;
-    int m_numScopes;
-    Il2CppMethodScope *m_scopes;
+    int32_t codeSize;
+    int32_t startScope;
+    int32_t numScopes;
 } Il2CppMethodHeaderInfo;
-typedef struct Hash16
+typedef struct Il2CppSequencePointIndex
 {
-    uint8_t m_hash[16];
-} Hash16;
+    uint8_t tableIndex;
+    int32_t index;
+} Il2CppSequencePointIndex;
+typedef struct Il2CppSequencePointSourceFile
+{
+    const char *file;
+    uint8_t hash[16];
+} Il2CppSequencePointSourceFile;
+typedef struct Il2CppTypeSourceFilePair
+{
+    TypeIndex klassIndex;
+    int32_t sourceFileIndex;
+} Il2CppTypeSourceFilePair;
 typedef struct Il2CppSequencePoint
 {
-    const Il2CppMethodExecutionContextInfo* executionContextInfos;
-    uint32_t executionContextInfoCount;
-    const Il2CppMethodHeaderInfo* header;
-    const MethodInfo* method;
-    const Il2CppClass* catchType;
-    const char* sourceFile;
-    Hash16 sourceFileHash;
+    MethodIndex methodIndex;
+    EncodedMethodIndex methodMetadataIndex;
+    const MethodInfo *method_;
+    TypeIndex catchTypeIndex;
+    int32_t sourceFileIndex;
     int32_t lineStart, lineEnd;
     int32_t columnStart, columnEnd;
     int32_t ilOffset;
     SequencePointKind kind;
     uint8_t isActive;
-    int id;
+    int32_t id;
     uint8_t tryDepth;
 } Il2CppSequencePoint;
+typedef struct Il2CppDebuggerMetadataRegistration
+{
+    Il2CppMethodExecutionContextInfo** methodExecutionContextInfos;
+    Il2CppMethodExecutionContextInfoIndex* methodExecutionContextInfoIndexes;
+    Il2CppMethodScope* methodScopes;
+    Il2CppMethodHeaderInfo* methodHeaderInfos;
+    Il2CppSequencePointSourceFile* sequencePointSourceFiles;
+    int32_t numSequencePoints;
+    Il2CppSequencePointIndex* sequencePointIndexes;
+    Il2CppSequencePoint** sequencePoints;
+    int32_t numTypeSourceFileEntries;
+    Il2CppTypeSourceFilePair* typeSourceFiles;
+    const char** methodExecutionContextInfoStrings;
+} Il2CppDebuggerMetadataRegistration;
 typedef union Il2CppRGCTXData
 {
     void* rgctxDataDummy;
@@ -972,6 +1002,7 @@ typedef struct Il2CppClass
     void* static_fields;
     const Il2CppRGCTXData* rgctx_data;
     Il2CppClass** typeHierarchy;
+    uint32_t initializationExceptionGCHandle;
     uint32_t cctor_started;
     uint32_t cctor_finished;
     __attribute__((aligned(8))) uint64_t cctor_thread;
@@ -1011,6 +1042,7 @@ typedef struct Il2CppClass
     uint8_t is_blittable : 1;
     uint8_t is_import_or_windows_runtime : 1;
     uint8_t is_vtable_initialized : 1;
+    uint8_t has_initialization_error : 1;
     VirtualInvokeData vtable[0];
 } Il2CppClass;
 typedef struct Il2CppTypeDefinitionSizes
@@ -1741,9 +1773,11 @@ typedef struct Il2CppRegionInfo
     Il2CppString* iso3name;
     Il2CppString* win3name;
     Il2CppString* english_name;
+    Il2CppString* native_name;
     Il2CppString* currency_symbol;
     Il2CppString* iso_currency_symbol;
     Il2CppString* currency_english_name;
+    Il2CppString* currency_native_name;
 } Il2CppRegionInfo;
 typedef struct Il2CppSafeHandle
 {
@@ -2115,3 +2149,14 @@ typedef struct Il2CppHStringHeader
         char Reserved2[24];
     } Reserved;
 } Il2CppHStringHeader;
+enum Il2CppWindowsRuntimeTypeKind
+{
+    kTypeKindPrimitive = 0,
+    kTypeKindMetadata,
+    kTypeKindCustom
+};
+struct Il2CppWindowsRuntimeTypeName
+{
+    Il2CppHString typeName;
+    enum Il2CppWindowsRuntimeTypeKind typeKind;
+};
--- 2018/2018.2.11f1/struct.h
+++ 2018/2018.2.12f1/struct.h
@@ -671,7 +671,8 @@ typedef enum Il2CppCallConvention
 typedef enum Il2CppCharSet
 {
     CHARSET_ANSI,
-    CHARSET_UNICODE
+    CHARSET_UNICODE,
+    CHARSET_NOT_SPECIFIED
 } Il2CppCharSet;
 typedef struct Il2CppClass Il2CppClass;
 typedef struct Il2CppGuid Il2CppGuid;
--- 2018/2018.2.15f1/struct.h
+++ 2018/2018.2.16f1/struct.h
@@ -778,6 +778,7 @@ typedef struct Il2CppDefaults
     MethodInfo *threadpool_perform_wait_callback_method;
     Il2CppClass *mono_method_message_class;
     Il2CppClass* ireference_class;
+    Il2CppClass* ireferencearray_class;
     Il2CppClass* ikey_value_pair_class;
     Il2CppClass* key_value_pair_class;
     Il2CppClass* windows_foundation_uri_class;
--- 2018/2018.2.21f1/struct.h
+++ 2018/2018.3.0b1/struct.h
@@ -18,6 +18,7 @@ typedef struct Il2CppString Il2CppString
 typedef struct Il2CppThread Il2CppThread;
 typedef struct Il2CppAsyncResult Il2CppAsyncResult;
 typedef struct Il2CppManagedMemorySnapshot Il2CppManagedMemorySnapshot;
+typedef struct Il2CppCustomAttrInfo Il2CppCustomAttrInfo;
 typedef enum
 {
     IL2CPP_PROFILE_NONE = 0,
@@ -102,6 +103,7 @@ typedef void (*Il2CppProfileAllocFunc) (
 typedef void (*Il2CppProfileGCFunc) (Il2CppProfiler* prof, Il2CppGCEvent event, int generation);
 typedef void (*Il2CppProfileGCResizeFunc) (Il2CppProfiler* prof, int64_t new_size);
 typedef void (*Il2CppProfileFileIOFunc) (Il2CppProfiler* prof, Il2CppProfileFileIOKind kind, int count);
+typedef void (*Il2CppProfileThreadFunc) (Il2CppProfiler *prof, unsigned long tid);
 typedef const Il2CppNativeChar* (*Il2CppSetFindPlugInCallback)(const Il2CppNativeChar*);
 typedef void (*Il2CppLogCallback)(const char*);
 struct Il2CppManagedMemorySnapshot;
@@ -284,6 +286,7 @@ typedef int32_t InteropDataIndex;
 const TypeIndex kTypeIndexInvalid = -1;
 const TypeDefinitionIndex kTypeDefinitionIndexInvalid = -1;
 const DefaultValueDataIndex kDefaultValueIndexNull = -1;
+const CustomAttributeIndex kCustomAttributeIndexInvalid = -1;
 const EventIndex kEventIndexInvalid = -1;
 const FieldIndex kFieldIndexInvalid = -1;
 const MethodIndex kMethodIndexInvalid = -1;
@@ -335,7 +338,6 @@ typedef struct Il2CppTypeDefinition
 {
     StringIndex nameIndex;
     StringIndex namespaceIndex;
-    CustomAttributeIndex customAttributeIndex;
     TypeIndex byvalTypeIndex;
     TypeIndex byrefTypeIndex;
     TypeIndex declaringTypeIndex;
@@ -368,7 +370,6 @@ typedef struct Il2CppFieldDefinition
 {
     StringIndex nameIndex;
     TypeIndex typeIndex;
-    CustomAttributeIndex customAttributeIndex;
     uint32_t token;
 } Il2CppFieldDefinition;
 typedef struct Il2CppFieldDefaultValue
@@ -392,7 +393,6 @@ typedef struct Il2CppParameterDefinition
 {
     StringIndex nameIndex;
     uint32_t token;
-    CustomAttributeIndex customAttributeIndex;
     TypeIndex typeIndex;
 } Il2CppParameterDefinition;
 typedef struct Il2CppParameterDefaultValue
@@ -407,7 +407,6 @@ typedef struct Il2CppMethodDefinition
     TypeDefinitionIndex declaringType;
     TypeIndex returnType;
     ParameterIndex parameterStart;
-    CustomAttributeIndex customAttributeIndex;
     GenericContainerIndex genericContainerIndex;
     MethodIndex methodIndex;
     MethodIndex invokerIndex;
@@ -427,7 +426,6 @@ typedef struct Il2CppEventDefinition
     MethodIndex add;
     MethodIndex remove;
     MethodIndex raise;
-    CustomAttributeIndex customAttributeIndex;
     uint32_t token;
 } Il2CppEventDefinition;
 typedef struct Il2CppPropertyDefinition
@@ -436,7 +434,6 @@ typedef struct Il2CppPropertyDefinition
     MethodIndex get;
     MethodIndex set;
     uint32_t attrs;
-    CustomAttributeIndex customAttributeIndex;
     uint32_t token;
 } Il2CppPropertyDefinition;
 typedef struct Il2CppMethodSpec
@@ -486,11 +483,13 @@ typedef struct Il2CppImageDefinition
     uint32_t exportedTypeCount;
     MethodIndex entryPointIndex;
     uint32_t token;
+    CustomAttributeIndex customAttributeStart;
+    uint32_t customAttributeCount;
 } Il2CppImageDefinition;
 typedef struct Il2CppAssemblyDefinition
 {
     ImageIndex imageIndex;
-    CustomAttributeIndex customAttributeIndex;
+    uint32_t token;
     int32_t referencedAssemblyStart;
     int32_t referencedAssemblyCount;
     Il2CppAssemblyNameDefinition aname;
@@ -507,6 +506,7 @@ typedef struct Il2CppMetadataUsagePair
 } Il2CppMetadataUsagePair;
 typedef struct Il2CppCustomAttributeTypeRange
 {
+    uint32_t token;
     int32_t start;
     int32_t count;
 } Il2CppCustomAttributeTypeRange;
@@ -671,8 +671,7 @@ typedef enum Il2CppCallConvention
 typedef enum Il2CppCharSet
 {
     CHARSET_ANSI,
-    CHARSET_UNICODE,
-    CHARSET_NOT_SPECIFIED
+    CHARSET_UNICODE
 } Il2CppCharSet;
 typedef struct Il2CppClass Il2CppClass;
 typedef struct Il2CppGuid Il2CppGuid;
@@ -750,6 +749,7 @@ typedef struct Il2CppDefaults
     Il2CppClass *runtimetype_class;
     Il2CppClass *generic_nullable_class;
     Il2CppClass *il2cpp_com_object_class;
+    Il2CppClass *attribute_class;
     Il2CppClass *customattribute_data_class;
     Il2CppClass *version;
     Il2CppClass *culture_info;
@@ -778,13 +778,20 @@ typedef struct Il2CppDefaults
     MethodInfo *threadpool_perform_wait_callback_method;
     Il2CppClass *mono_method_message_class;
     Il2CppClass* ireference_class;
-    Il2CppClass* ireferencearray_class;
     Il2CppClass* ikey_value_pair_class;
     Il2CppClass* key_value_pair_class;
     Il2CppClass* windows_foundation_uri_class;
     Il2CppClass* windows_foundation_iuri_runtime_class_class;
     Il2CppClass* system_uri_class;
     Il2CppClass* system_guid_class;
+    Il2CppClass* sbyte_shared_enum;
+    Il2CppClass* int16_shared_enum;
+    Il2CppClass* int32_shared_enum;
+    Il2CppClass* int64_shared_enum;
+    Il2CppClass* byte_shared_enum;
+    Il2CppClass* uint16_shared_enum;
+    Il2CppClass* uint32_shared_enum;
+    Il2CppClass* uint64_shared_enum;
 } Il2CppDefaults;
 extern Il2CppDefaults il2cpp_defaults;
 struct Il2CppClass;
@@ -797,11 +804,6 @@ typedef struct CustomAttributesCache
     int count;
     Il2CppObject** attributes;
 } CustomAttributesCache;
-typedef struct CustomAttributeTypeCache
-{
-    int count;
-    Il2CppClass** attributeTypes;
-} CustomAttributeTypeCache;
 typedef void (*CustomAttributesCacheGenerator)(CustomAttributesCache*);
 const int THREAD_STATIC_FIELD_OFFSET = -1;
 typedef struct FieldInfo
@@ -810,7 +812,6 @@ typedef struct FieldInfo
     const Il2CppType* type;
     Il2CppClass *parent;
     int32_t offset;
-    CustomAttributeIndex customAttributeIndex;
     uint32_t token;
 } FieldInfo;
 typedef struct PropertyInfo
@@ -820,7 +821,6 @@ typedef struct PropertyInfo
     const MethodInfo *get;
     const MethodInfo *set;
     uint32_t attrs;
-    CustomAttributeIndex customAttributeIndex;
     uint32_t token;
 } PropertyInfo;
 typedef struct EventInfo
@@ -831,7 +831,6 @@ typedef struct EventInfo
     const MethodInfo* add;
     const MethodInfo* remove;
     const MethodInfo* raise;
-    CustomAttributeIndex customAttributeIndex;
     uint32_t token;
 } EventInfo;
 typedef struct ParameterInfo
@@ -839,7 +838,6 @@ typedef struct ParameterInfo
     const char* name;
     int32_t position;
     uint32_t token;
-    CustomAttributeIndex customAttributeIndex;
     const Il2CppType* parameter_type;
 } ParameterInfo;
 typedef void* (*InvokerMethod)(Il2CppMethodPointer, const MethodInfo*, void*, void**);
@@ -858,9 +856,7 @@ typedef struct Il2CppMethodExecutionCont
 {
     TypeIndex typeIndex;
     int32_t nameIndex;
-    MethodVariableKind variableKind;
-    int32_t startOffset;
-    int32_t endOffset;
+    int32_t scopeIndex;
 } Il2CppMethodExecutionContextInfo;
 typedef struct Il2CppMethodExecutionContextInfoIndex
 {
@@ -896,9 +892,7 @@ typedef struct Il2CppTypeSourceFilePair
 } Il2CppTypeSourceFilePair;
 typedef struct Il2CppSequencePoint
 {
-    MethodIndex methodIndex;
-    EncodedMethodIndex methodMetadataIndex;
-    const MethodInfo *method_;
+    MethodIndex methodDefinitionIndex;
     TypeIndex catchTypeIndex;
     int32_t sourceFileIndex;
     int32_t lineStart, lineEnd;
@@ -948,7 +942,6 @@ typedef struct MethodInfo
         const Il2CppGenericMethod* genericMethod;
         const Il2CppGenericContainer* genericContainer;
     };
-    CustomAttributeIndex customAttributeIndex;
     uint32_t token;
     uint16_t flags;
     uint16_t iflags;
@@ -1009,7 +1002,6 @@ typedef struct Il2CppClass
     uint32_t cctor_finished;
     __attribute__((aligned(8))) uint64_t cctor_thread;
     GenericContainerIndex genericContainerIndex;
-    CustomAttributeIndex customAttributeIndex;
     uint32_t instance_size;
     uint32_t actualSize;
     uint32_t element_size;
@@ -1088,6 +1080,8 @@ typedef struct Il2CppImage
     uint32_t typeCount;
     TypeDefinitionIndex exportedTypeStart;
     uint32_t exportedTypeCount;
+    CustomAttributeIndex customAttributeStart;
+    uint32_t customAttributeCount;
     MethodIndex entryPointIndex;
     Il2CppNameToTypeDefinitionIndexHashTable * nameToClassHashTable;
     uint32_t token;
@@ -1096,7 +1090,7 @@ typedef struct Il2CppImage
 typedef struct Il2CppAssembly
 {
     Il2CppImage* image;
-    CustomAttributeIndex customAttributeIndex;
+    uint32_t token;
     int32_t referencedAssemblyStart;
     int32_t referencedAssemblyCount;
     Il2CppAssemblyName aname;
@@ -1221,6 +1215,7 @@ typedef struct Il2CppPerfCounters
     unsigned int threadpool_threads;
     unsigned int threadpool_iothreads;
 } Il2CppPerfCounters;
+__attribute__ ((visibility ("default"))) void il2cpp_gc_wbarrier_set_field(Il2CppObject * obj, void **targetAddress, void *object);
 typedef struct Il2CppClass Il2CppClass;
 typedef struct MethodInfo MethodInfo;
 typedef struct PropertyInfo PropertyInfo;
--- 2018/2018.3.0b7/struct.h
+++ 2018/2018.3.0b8/struct.h
@@ -671,7 +671,8 @@ typedef enum Il2CppCallConvention
 typedef enum Il2CppCharSet
 {
     CHARSET_ANSI,
-    CHARSET_UNICODE
+    CHARSET_UNICODE,
+    CHARSET_NOT_SPECIFIED
 } Il2CppCharSet;
 typedef struct Il2CppClass Il2CppClass;
 typedef struct Il2CppGuid Il2CppGuid;
--- 2018/2018.3.0b8/struct.h
+++ 2018/2018.3.0b9/struct.h
@@ -779,6 +779,7 @@ typedef struct Il2CppDefaults
     MethodInfo *threadpool_perform_wait_callback_method;
     Il2CppClass *mono_method_message_class;
     Il2CppClass* ireference_class;
+    Il2CppClass* ireferencearray_class;
     Il2CppClass* ikey_value_pair_class;
     Il2CppClass* key_value_pair_class;
     Il2CppClass* windows_foundation_uri_class;
--- 2018/2018.3.0b10/struct.h
+++ 2018/2018.3.0b11/struct.h
@@ -1026,6 +1026,7 @@ typedef struct Il2CppClass
     uint8_t rank;
     uint8_t minimumAlignment;
     uint8_t packingSize;
+    uint8_t initialized_and_no_error : 1;
     uint8_t valuetype : 1;
     uint8_t initialized : 1;
     uint8_t enumtype : 1;
--- 2018/2018.3.7f1/struct.h
+++ 2018/2018.3.8f1/struct.h
@@ -1025,6 +1025,7 @@ typedef struct Il2CppClass
     uint8_t genericRecursionDepth;
     uint8_t rank;
     uint8_t minimumAlignment;
+    uint8_t naturalAligment;
     uint8_t packingSize;
     uint8_t initialized_and_no_error : 1;
     uint8_t valuetype : 1;
--- 2018/2018.4.17f1/struct.h
+++ 2018/2018.4.18f1/struct.h
@@ -1103,6 +1103,11 @@ typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
 } Il2CppCodeGenOptions;
+typedef struct Il2CppWindowsRuntimeFactoryTableEntry
+{
+    const Il2CppType* type;
+    Il2CppMethodPointer createFactoryFunction;
+} Il2CppWindowsRuntimeFactoryTableEntry;
 typedef struct Il2CppCodeRegistration
 {
     uint32_t methodPointersCount;
@@ -1119,6 +1124,8 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
+    uint32_t windowsRuntimeFactoryCount;
+    Il2CppWindowsRuntimeFactoryTableEntry* windowsRuntimeFactoryTable;
 } Il2CppCodeRegistration;
 typedef struct Il2CppMetadataRegistration
 {
--- 2018/2018.4.33f1/struct.h
+++ 2018/2018.4.34f1/struct.h
@@ -462,7 +462,6 @@ typedef struct Il2CppAssemblyNameDefinit
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
-    StringIndex hashValueIndex;
     StringIndex publicKeyIndex;
     uint32_t hash_alg;
     int32_t hash_len;
@@ -1064,8 +1063,7 @@ typedef struct Il2CppAssemblyName
 {
     const char* name;
     const char* culture;
-    const char* hash_value;
-    const char* public_key;
+    const uint8_t* public_key;
     uint32_t hash_alg;
     int32_t hash_len;
     uint32_t flags;
--- 2018/2018.4.36f1/struct.h
+++ 2019/2019.1.0a7/struct.h
@@ -110,19 +110,19 @@ struct Il2CppManagedMemorySnapshot;
 typedef void (*Il2CppMethodPointer)();
 typedef uintptr_t il2cpp_array_size_t;
 typedef uint32_t Il2CppMethodSlot;
-const uint32_t kInvalidIl2CppMethodSlot = 65535;
-const int32_t kIl2CppInt32Min = (-2147483647-1);
-const int32_t kIl2CppInt32Max = (2147483647);
-const uint32_t kIl2CppUInt32Max = (4294967295U);
-const int64_t kIl2CppInt64Min = (-9223372036854775807L -1);
-const int64_t kIl2CppInt64Max = (9223372036854775807L);
-const uint64_t kIl2CppUInt64Max = (18446744073709551615UL);
-const intptr_t kIl2CppIntPtrMin = (-9223372036854775807L -1);
-const intptr_t kIl2CppIntPtrMax = (9223372036854775807L);
-const uintptr_t kIl2CppUIntPtrMax = (18446744073709551615UL);
-const int ipv6AddressSize = 16;
+static const uint32_t kInvalidIl2CppMethodSlot = 65535;
+static const int32_t kIl2CppInt32Min = (-2147483647-1);
+static const int32_t kIl2CppInt32Max = (2147483647);
+static const uint32_t kIl2CppUInt32Max = (4294967295U);
+static const int64_t kIl2CppInt64Min = (-9223372036854775807L -1);
+static const int64_t kIl2CppInt64Max = (9223372036854775807L);
+static const uint64_t kIl2CppUInt64Max = (18446744073709551615UL);
+static const intptr_t kIl2CppIntPtrMin = (-9223372036854775807L -1);
+static const intptr_t kIl2CppIntPtrMax = (9223372036854775807L);
+static const uintptr_t kIl2CppUIntPtrMax = (18446744073709551615UL);
+static const int ipv6AddressSize = 16;
 typedef int32_t il2cpp_hresult_t;
-const Il2CppChar kIl2CppNewLine[] = { '\n', '\0' };
+static const Il2CppChar kIl2CppNewLine[] = { '\n', '\0' };
 struct Il2CppMetadataField
 {
     uint32_t offset;
@@ -283,19 +283,19 @@ typedef int32_t GenericInstIndex;
 typedef int32_t ImageIndex;
 typedef int32_t AssemblyIndex;
 typedef int32_t InteropDataIndex;
-const TypeIndex kTypeIndexInvalid = -1;
-const TypeDefinitionIndex kTypeDefinitionIndexInvalid = -1;
-const DefaultValueDataIndex kDefaultValueIndexNull = -1;
-const CustomAttributeIndex kCustomAttributeIndexInvalid = -1;
-const EventIndex kEventIndexInvalid = -1;
-const FieldIndex kFieldIndexInvalid = -1;
-const MethodIndex kMethodIndexInvalid = -1;
-const PropertyIndex kPropertyIndexInvalid = -1;
-const GenericContainerIndex kGenericContainerIndexInvalid = -1;
-const GenericParameterIndex kGenericParameterIndexInvalid = -1;
-const RGCTXIndex kRGCTXIndexInvalid = -1;
-const StringLiteralIndex kStringLiteralIndexInvalid = -1;
-const InteropDataIndex kInteropDataIndexInvalid = -1;
+static const TypeIndex kTypeIndexInvalid = -1;
+static const TypeDefinitionIndex kTypeDefinitionIndexInvalid = -1;
+static const DefaultValueDataIndex kDefaultValueIndexNull = -1;
+static const CustomAttributeIndex kCustomAttributeIndexInvalid = -1;
+static const EventIndex kEventIndexInvalid = -1;
+static const FieldIndex kFieldIndexInvalid = -1;
+static const MethodIndex kMethodIndexInvalid = -1;
+static const PropertyIndex kPropertyIndexInvalid = -1;
+static const GenericContainerIndex kGenericContainerIndexInvalid = -1;
+static const GenericParameterIndex kGenericParameterIndexInvalid = -1;
+static const RGCTXIndex kRGCTXIndexInvalid = -1;
+static const StringLiteralIndex kStringLiteralIndexInvalid = -1;
+static const InteropDataIndex kInteropDataIndexInvalid = -1;
 typedef uint32_t EncodedMethodIndex;
 enum Il2CppMetadataUsage
 {
@@ -457,11 +457,12 @@ typedef struct Il2CppGenericMethodFuncti
     GenericMethodIndex genericMethodIndex;
     Il2CppGenericMethodIndices indices;
 } Il2CppGenericMethodFunctionsDefinitions;
-const int kPublicKeyByteLength = 8;
+static const int kPublicKeyByteLength = 8;
 typedef struct Il2CppAssemblyNameDefinition
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
+    StringIndex hashValueIndex;
     StringIndex publicKeyIndex;
     uint32_t hash_alg;
     int32_t hash_len;
@@ -778,7 +779,6 @@ typedef struct Il2CppDefaults
     MethodInfo *threadpool_perform_wait_callback_method;
     Il2CppClass *mono_method_message_class;
     Il2CppClass* ireference_class;
-    Il2CppClass* ireferencearray_class;
     Il2CppClass* ikey_value_pair_class;
     Il2CppClass* key_value_pair_class;
     Il2CppClass* windows_foundation_uri_class;
@@ -806,7 +806,6 @@ typedef struct CustomAttributesCache
     Il2CppObject** attributes;
 } CustomAttributesCache;
 typedef void (*CustomAttributesCacheGenerator)(CustomAttributesCache*);
-const int THREAD_STATIC_FIELD_OFFSET = -1;
 typedef struct FieldInfo
 {
     const char* name;
@@ -888,7 +887,7 @@ typedef struct Il2CppSequencePointSource
 } Il2CppSequencePointSourceFile;
 typedef struct Il2CppTypeSourceFilePair
 {
-    TypeIndex klassIndex;
+    TypeDefinitionIndex klassIndex;
     int32_t sourceFileIndex;
 } Il2CppTypeSourceFilePair;
 typedef struct Il2CppSequencePoint
@@ -1024,9 +1023,7 @@ typedef struct Il2CppClass
     uint8_t genericRecursionDepth;
     uint8_t rank;
     uint8_t minimumAlignment;
-    uint8_t naturalAligment;
     uint8_t packingSize;
-    uint8_t initialized_and_no_error : 1;
     uint8_t valuetype : 1;
     uint8_t initialized : 1;
     uint8_t enumtype : 1;
@@ -1063,7 +1060,8 @@ typedef struct Il2CppAssemblyName
 {
     const char* name;
     const char* culture;
-    const uint8_t* public_key;
+    const char* hash_value;
+    const char* public_key;
     uint32_t hash_alg;
     int32_t hash_len;
     uint32_t flags;
@@ -1101,11 +1099,6 @@ typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
 } Il2CppCodeGenOptions;
-typedef struct Il2CppWindowsRuntimeFactoryTableEntry
-{
-    const Il2CppType* type;
-    Il2CppMethodPointer createFactoryFunction;
-} Il2CppWindowsRuntimeFactoryTableEntry;
 typedef struct Il2CppCodeRegistration
 {
     uint32_t methodPointersCount;
@@ -1122,8 +1115,6 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
-    uint32_t windowsRuntimeFactoryCount;
-    Il2CppWindowsRuntimeFactoryTableEntry* windowsRuntimeFactoryTable;
 } Il2CppCodeRegistration;
 typedef struct Il2CppMetadataRegistration
 {
@@ -1271,9 +1262,9 @@ typedef struct Il2CppArraySize
     il2cpp_array_size_t max_length;
     __attribute__((aligned(8))) void* vector[0];
 } Il2CppArraySize;
-const size_t kIl2CppSizeOfArray = (__builtin_offsetof (Il2CppArraySize, vector));
-const size_t kIl2CppOffsetOfArrayBounds = (__builtin_offsetof (Il2CppArray, bounds));
-const size_t kIl2CppOffsetOfArrayLength = (__builtin_offsetof (Il2CppArray, max_length));
+static const size_t kIl2CppSizeOfArray = (__builtin_offsetof (Il2CppArraySize, vector));
+static const size_t kIl2CppOffsetOfArrayBounds = (__builtin_offsetof (Il2CppArray, bounds));
+static const size_t kIl2CppOffsetOfArrayLength = (__builtin_offsetof (Il2CppArray, max_length));
 typedef struct Il2CppString
 {
     Il2CppObject object;
--- 2019/2019.1.0a7/struct.h
+++ 2019/2019.1.0a8/struct.h
@@ -1000,7 +1000,7 @@ typedef struct Il2CppClass
     uint32_t initializationExceptionGCHandle;
     uint32_t cctor_started;
     uint32_t cctor_finished;
-    __attribute__((aligned(8))) uint64_t cctor_thread;
+    __attribute__((aligned(8))) size_t cctor_thread;
     GenericContainerIndex genericContainerIndex;
     uint32_t instance_size;
     uint32_t actualSize;
@@ -1024,6 +1024,7 @@ typedef struct Il2CppClass
     uint8_t rank;
     uint8_t minimumAlignment;
     uint8_t packingSize;
+    uint8_t initialized_and_no_error : 1;
     uint8_t valuetype : 1;
     uint8_t initialized : 1;
     uint8_t enumtype : 1;
--- 2019/2019.1.0a9/struct.h
+++ 2019/2019.1.0a10/struct.h
@@ -659,21 +659,6 @@ typedef struct Il2CppType
     unsigned int byref : 1;
     unsigned int pinned : 1;
 } Il2CppType;
-typedef enum Il2CppCallConvention
-{
-    IL2CPP_CALL_DEFAULT,
-    IL2CPP_CALL_C,
-    IL2CPP_CALL_STDCALL,
-    IL2CPP_CALL_THISCALL,
-    IL2CPP_CALL_FASTCALL,
-    IL2CPP_CALL_VARARG
-} Il2CppCallConvention;
-typedef enum Il2CppCharSet
-{
-    CHARSET_ANSI,
-    CHARSET_UNICODE,
-    CHARSET_NOT_SPECIFIED
-} Il2CppCharSet;
 typedef struct Il2CppClass Il2CppClass;
 typedef struct Il2CppGuid Il2CppGuid;
 typedef struct Il2CppImage Il2CppImage;
@@ -779,6 +764,7 @@ typedef struct Il2CppDefaults
     MethodInfo *threadpool_perform_wait_callback_method;
     Il2CppClass *mono_method_message_class;
     Il2CppClass* ireference_class;
+    Il2CppClass* ireferencearray_class;
     Il2CppClass* ikey_value_pair_class;
     Il2CppClass* key_value_pair_class;
     Il2CppClass* windows_foundation_uri_class;
@@ -1216,6 +1202,218 @@ typedef struct Il2CppPerfCounters
     unsigned int threadpool_threads;
     unsigned int threadpool_iothreads;
 } Il2CppPerfCounters;
+       
+       
+typedef struct Il2CppHString__
+{
+    int unused;
+} Il2CppHString__;
+typedef Il2CppHString__* Il2CppHString;
+typedef struct Il2CppHStringHeader
+{
+    union
+    {
+        void* Reserved1;
+        char Reserved2[24];
+    } Reserved;
+} Il2CppHStringHeader;
+typedef struct Il2CppGuid
+{
+    uint32_t data1;
+    uint16_t data2;
+    uint16_t data3;
+    uint8_t data4[8];
+} Il2CppGuid;
+typedef struct Il2CppSafeArrayBound
+{
+    uint32_t element_count;
+    int32_t lower_bound;
+} Il2CppSafeArrayBound;
+typedef struct Il2CppSafeArray
+{
+    uint16_t dimension_count;
+    uint16_t features;
+    uint32_t element_size;
+    uint32_t lock_count;
+    void* data;
+    Il2CppSafeArrayBound bounds[1];
+} Il2CppSafeArray;
+typedef struct Il2CppWin32Decimal
+{
+    uint16_t reserved;
+    union
+    {
+        struct
+        {
+            uint8_t scale;
+            uint8_t sign;
+        } s;
+        uint16_t signscale;
+    } u;
+    uint32_t hi32;
+    union
+    {
+        struct
+        {
+            uint32_t lo32;
+            uint32_t mid32;
+        } s2;
+        uint64_t lo64;
+    } u2;
+} Il2CppWin32Decimal;
+typedef int16_t IL2CPP_VARIANT_BOOL;
+typedef enum Il2CppVarType
+{
+    IL2CPP_VT_EMPTY = 0,
+    IL2CPP_VT_NULL = 1,
+    IL2CPP_VT_I2 = 2,
+    IL2CPP_VT_I4 = 3,
+    IL2CPP_VT_R4 = 4,
+    IL2CPP_VT_R8 = 5,
+    IL2CPP_VT_CY = 6,
+    IL2CPP_VT_DATE = 7,
+    IL2CPP_VT_BSTR = 8,
+    IL2CPP_VT_DISPATCH = 9,
+    IL2CPP_VT_ERROR = 10,
+    IL2CPP_VT_BOOL = 11,
+    IL2CPP_VT_VARIANT = 12,
+    IL2CPP_VT_UNKNOWN = 13,
+    IL2CPP_VT_DECIMAL = 14,
+    IL2CPP_VT_I1 = 16,
+    IL2CPP_VT_UI1 = 17,
+    IL2CPP_VT_UI2 = 18,
+    IL2CPP_VT_UI4 = 19,
+    IL2CPP_VT_I8 = 20,
+    IL2CPP_VT_UI8 = 21,
+    IL2CPP_VT_INT = 22,
+    IL2CPP_VT_UINT = 23,
+    IL2CPP_VT_VOID = 24,
+    IL2CPP_VT_HRESULT = 25,
+    IL2CPP_VT_PTR = 26,
+    IL2CPP_VT_SAFEARRAY = 27,
+    IL2CPP_VT_CARRAY = 28,
+    IL2CPP_VT_USERDEFINED = 29,
+    IL2CPP_VT_LPSTR = 30,
+    IL2CPP_VT_LPWSTR = 31,
+    IL2CPP_VT_RECORD = 36,
+    IL2CPP_VT_INT_PTR = 37,
+    IL2CPP_VT_UINT_PTR = 38,
+    IL2CPP_VT_FILETIME = 64,
+    IL2CPP_VT_BLOB = 65,
+    IL2CPP_VT_STREAM = 66,
+    IL2CPP_VT_STORAGE = 67,
+    IL2CPP_VT_STREAMED_OBJECT = 68,
+    IL2CPP_VT_STORED_OBJECT = 69,
+    IL2CPP_VT_BLOB_OBJECT = 70,
+    IL2CPP_VT_CF = 71,
+    IL2CPP_VT_CLSID = 72,
+    IL2CPP_VT_VERSIONED_STREAM = 73,
+    IL2CPP_VT_BSTR_BLOB = 0xfff,
+    IL2CPP_VT_VECTOR = 0x1000,
+    IL2CPP_VT_ARRAY = 0x2000,
+    IL2CPP_VT_BYREF = 0x4000,
+    IL2CPP_VT_RESERVED = 0x8000,
+    IL2CPP_VT_ILLEGAL = 0xffff,
+    IL2CPP_VT_ILLEGALMASKED = 0xfff,
+    IL2CPP_VT_TYPEMASK = 0xfff,
+} Il2CppVarType;
+typedef struct Il2CppVariant Il2CppVariant;
+typedef struct Il2CppIUnknown Il2CppIUnknown;
+typedef struct Il2CppVariant
+{
+    union
+    {
+        struct __tagVARIANT
+        {
+            uint16_t type;
+            uint16_t reserved1;
+            uint16_t reserved2;
+            uint16_t reserved3;
+            union
+            {
+                int64_t llVal;
+                int32_t lVal;
+                uint8_t bVal;
+                int16_t iVal;
+                float fltVal;
+                double dblVal;
+                IL2CPP_VARIANT_BOOL boolVal;
+                int32_t scode;
+                int64_t cyVal;
+                double date;
+                Il2CppChar* bstrVal;
+                Il2CppIUnknown* punkVal;
+                void* pdispVal;
+                Il2CppSafeArray* parray;
+                uint8_t* pbVal;
+                int16_t* piVal;
+                int32_t* plVal;
+                int64_t* pllVal;
+                float* pfltVal;
+                double* pdblVal;
+                IL2CPP_VARIANT_BOOL* pboolVal;
+                int32_t* pscode;
+                int64_t* pcyVal;
+                double* pdate;
+                Il2CppChar* pbstrVal;
+                Il2CppIUnknown** ppunkVal;
+                void** ppdispVal;
+                Il2CppSafeArray** pparray;
+                Il2CppVariant* pvarVal;
+                void* byref;
+                char cVal;
+                uint16_t uiVal;
+                uint32_t ulVal;
+                uint64_t ullVal;
+                int intVal;
+                unsigned int uintVal;
+                Il2CppWin32Decimal* pdecVal;
+                char* pcVal;
+                uint16_t* puiVal;
+                uint32_t* pulVal;
+                uint64_t* pullVal;
+                int* pintVal;
+                unsigned int* puintVal;
+                struct __tagBRECORD
+                {
+                    void* pvRecord;
+                    void* pRecInfo;
+                } n4;
+            } n3;
+        } n2;
+        Il2CppWin32Decimal decVal;
+    } n1;
+} Il2CppVariant;
+typedef struct Il2CppFileTime
+{
+    uint32_t low;
+    uint32_t high;
+} Il2CppFileTime;
+typedef struct Il2CppStatStg
+{
+    Il2CppChar* name;
+    uint32_t type;
+    uint64_t size;
+    Il2CppFileTime mtime;
+    Il2CppFileTime ctime;
+    Il2CppFileTime atime;
+    uint32_t mode;
+    uint32_t locks;
+    Il2CppGuid clsid;
+    uint32_t state;
+    uint32_t reserved;
+} Il2CppStatStg;
+enum Il2CppWindowsRuntimeTypeKind
+{
+    kTypeKindPrimitive = 0,
+    kTypeKindMetadata,
+    kTypeKindCustom
+};
+struct Il2CppWindowsRuntimeTypeName
+{
+    Il2CppHString typeName;
+    enum Il2CppWindowsRuntimeTypeKind typeKind;
+};
 __attribute__ ((visibility ("default"))) void il2cpp_gc_wbarrier_set_field(Il2CppObject * obj, void **targetAddress, void *object);
 typedef struct Il2CppClass Il2CppClass;
 typedef struct MethodInfo MethodInfo;
@@ -1949,212 +2147,3 @@ typedef union Il2CppSingle_float
     Il2CppSingle s;
     float f;
 } Il2CppSingle_float;
-typedef struct Il2CppGuid
-{
-    uint32_t data1;
-    uint16_t data2;
-    uint16_t data3;
-    uint8_t data4[8];
-} Il2CppGuid;
-typedef struct Il2CppSafeArrayBound
-{
-    uint32_t element_count;
-    int32_t lower_bound;
-} Il2CppSafeArrayBound;
-typedef struct Il2CppSafeArray
-{
-    uint16_t dimension_count;
-    uint16_t features;
-    uint32_t element_size;
-    uint32_t lock_count;
-    void* data;
-    Il2CppSafeArrayBound bounds[1];
-} Il2CppSafeArray;
-typedef struct Il2CppWin32Decimal
-{
-    uint16_t reserved;
-    union
-    {
-        struct
-        {
-            uint8_t scale;
-            uint8_t sign;
-        } s;
-        uint16_t signscale;
-    } u;
-    uint32_t hi32;
-    union
-    {
-        struct
-        {
-            uint32_t lo32;
-            uint32_t mid32;
-        } s2;
-        uint64_t lo64;
-    } u2;
-} Il2CppWin32Decimal;
-typedef int16_t IL2CPP_VARIANT_BOOL;
-typedef enum Il2CppVarType
-{
-    IL2CPP_VT_EMPTY = 0,
-    IL2CPP_VT_NULL = 1,
-    IL2CPP_VT_I2 = 2,
-    IL2CPP_VT_I4 = 3,
-    IL2CPP_VT_R4 = 4,
-    IL2CPP_VT_R8 = 5,
-    IL2CPP_VT_CY = 6,
-    IL2CPP_VT_DATE = 7,
-    IL2CPP_VT_BSTR = 8,
-    IL2CPP_VT_DISPATCH = 9,
-    IL2CPP_VT_ERROR = 10,
-    IL2CPP_VT_BOOL = 11,
-    IL2CPP_VT_VARIANT = 12,
-    IL2CPP_VT_UNKNOWN = 13,
-    IL2CPP_VT_DECIMAL = 14,
-    IL2CPP_VT_I1 = 16,
-    IL2CPP_VT_UI1 = 17,
-    IL2CPP_VT_UI2 = 18,
-    IL2CPP_VT_UI4 = 19,
-    IL2CPP_VT_I8 = 20,
-    IL2CPP_VT_UI8 = 21,
-    IL2CPP_VT_INT = 22,
-    IL2CPP_VT_UINT = 23,
-    IL2CPP_VT_VOID = 24,
-    IL2CPP_VT_HRESULT = 25,
-    IL2CPP_VT_PTR = 26,
-    IL2CPP_VT_SAFEARRAY = 27,
-    IL2CPP_VT_CARRAY = 28,
-    IL2CPP_VT_USERDEFINED = 29,
-    IL2CPP_VT_LPSTR = 30,
-    IL2CPP_VT_LPWSTR = 31,
-    IL2CPP_VT_RECORD = 36,
-    IL2CPP_VT_INT_PTR = 37,
-    IL2CPP_VT_UINT_PTR = 38,
-    IL2CPP_VT_FILETIME = 64,
-    IL2CPP_VT_BLOB = 65,
-    IL2CPP_VT_STREAM = 66,
-    IL2CPP_VT_STORAGE = 67,
-    IL2CPP_VT_STREAMED_OBJECT = 68,
-    IL2CPP_VT_STORED_OBJECT = 69,
-    IL2CPP_VT_BLOB_OBJECT = 70,
-    IL2CPP_VT_CF = 71,
-    IL2CPP_VT_CLSID = 72,
-    IL2CPP_VT_VERSIONED_STREAM = 73,
-    IL2CPP_VT_BSTR_BLOB = 0xfff,
-    IL2CPP_VT_VECTOR = 0x1000,
-    IL2CPP_VT_ARRAY = 0x2000,
-    IL2CPP_VT_BYREF = 0x4000,
-    IL2CPP_VT_RESERVED = 0x8000,
-    IL2CPP_VT_ILLEGAL = 0xffff,
-    IL2CPP_VT_ILLEGALMASKED = 0xfff,
-    IL2CPP_VT_TYPEMASK = 0xfff,
-} Il2CppVarType;
-typedef struct Il2CppVariant Il2CppVariant;
-typedef struct Il2CppVariant
-{
-    union
-    {
-        struct __tagVARIANT
-        {
-            uint16_t type;
-            uint16_t reserved1;
-            uint16_t reserved2;
-            uint16_t reserved3;
-            union
-            {
-                int64_t llVal;
-                int32_t lVal;
-                uint8_t bVal;
-                int16_t iVal;
-                float fltVal;
-                double dblVal;
-                IL2CPP_VARIANT_BOOL boolVal;
-                int32_t scode;
-                int64_t cyVal;
-                double date;
-                Il2CppChar* bstrVal;
-                Il2CppIUnknown* punkVal;
-                void* pdispVal;
-                Il2CppSafeArray* parray;
-                uint8_t* pbVal;
-                int16_t* piVal;
-                int32_t* plVal;
-                int64_t* pllVal;
-                float* pfltVal;
-                double* pdblVal;
-                IL2CPP_VARIANT_BOOL* pboolVal;
-                int32_t* pscode;
-                int64_t* pcyVal;
-                double* pdate;
-                Il2CppChar* pbstrVal;
-                Il2CppIUnknown** ppunkVal;
-                void** ppdispVal;
-                Il2CppSafeArray** pparray;
-                Il2CppVariant* pvarVal;
-                void* byref;
-                char cVal;
-                uint16_t uiVal;
-                uint32_t ulVal;
-                uint64_t ullVal;
-                int intVal;
-                unsigned int uintVal;
-                Il2CppWin32Decimal* pdecVal;
-                char* pcVal;
-                uint16_t* puiVal;
-                uint32_t* pulVal;
-                uint64_t* pullVal;
-                int* pintVal;
-                unsigned int* puintVal;
-                struct __tagBRECORD
-                {
-                    void* pvRecord;
-                    void* pRecInfo;
-                } n4;
-            } n3;
-        } n2;
-        Il2CppWin32Decimal decVal;
-    } n1;
-} Il2CppVariant;
-typedef struct Il2CppFileTime
-{
-    uint32_t low;
-    uint32_t high;
-} Il2CppFileTime;
-typedef struct Il2CppStatStg
-{
-    Il2CppChar* name;
-    uint32_t type;
-    uint64_t size;
-    Il2CppFileTime mtime;
-    Il2CppFileTime ctime;
-    Il2CppFileTime atime;
-    uint32_t mode;
-    uint32_t locks;
-    Il2CppGuid clsid;
-    uint32_t state;
-    uint32_t reserved;
-} Il2CppStatStg;
-typedef struct Il2CppHString__
-{
-    int unused;
-} Il2CppHString__;
-typedef Il2CppHString__* Il2CppHString;
-typedef struct Il2CppHStringHeader
-{
-    union
-    {
-        void* Reserved1;
-        char Reserved2[24];
-    } Reserved;
-} Il2CppHStringHeader;
-enum Il2CppWindowsRuntimeTypeKind
-{
-    kTypeKindPrimitive = 0,
-    kTypeKindMetadata,
-    kTypeKindCustom
-};
-struct Il2CppWindowsRuntimeTypeName
-{
-    Il2CppHString typeName;
-    enum Il2CppWindowsRuntimeTypeKind typeKind;
-};
--- 2019/2019.1.0a10/struct.h
+++ 2019/2019.1.0a11/struct.h
@@ -659,6 +659,247 @@ typedef struct Il2CppType
     unsigned int byref : 1;
     unsigned int pinned : 1;
 } Il2CppType;
+       
+typedef enum Il2CppCallConvention
+{
+    IL2CPP_CALL_DEFAULT,
+    IL2CPP_CALL_C,
+    IL2CPP_CALL_STDCALL,
+    IL2CPP_CALL_THISCALL,
+    IL2CPP_CALL_FASTCALL,
+    IL2CPP_CALL_VARARG
+} Il2CppCallConvention;
+typedef enum Il2CppCharSet
+{
+    CHARSET_ANSI,
+    CHARSET_UNICODE,
+    CHARSET_NOT_SPECIFIED
+} Il2CppCharSet;
+       
+typedef struct Il2CppHString__
+{
+    int unused;
+} Il2CppHString__;
+typedef Il2CppHString__* Il2CppHString;
+typedef struct Il2CppHStringHeader
+{
+    union
+    {
+        void* Reserved1;
+        char Reserved2[24];
+    } Reserved;
+} Il2CppHStringHeader;
+typedef struct Il2CppGuid
+{
+    uint32_t data1;
+    uint16_t data2;
+    uint16_t data3;
+    uint8_t data4[8];
+} Il2CppGuid;
+typedef struct Il2CppSafeArrayBound
+{
+    uint32_t element_count;
+    int32_t lower_bound;
+} Il2CppSafeArrayBound;
+typedef struct Il2CppSafeArray
+{
+    uint16_t dimension_count;
+    uint16_t features;
+    uint32_t element_size;
+    uint32_t lock_count;
+    void* data;
+    Il2CppSafeArrayBound bounds[1];
+} Il2CppSafeArray;
+typedef struct Il2CppWin32Decimal
+{
+    uint16_t reserved;
+    union
+    {
+        struct
+        {
+            uint8_t scale;
+            uint8_t sign;
+        } s;
+        uint16_t signscale;
+    } u;
+    uint32_t hi32;
+    union
+    {
+        struct
+        {
+            uint32_t lo32;
+            uint32_t mid32;
+        } s2;
+        uint64_t lo64;
+    } u2;
+} Il2CppWin32Decimal;
+typedef int16_t IL2CPP_VARIANT_BOOL;
+typedef enum Il2CppVarType
+{
+    IL2CPP_VT_EMPTY = 0,
+    IL2CPP_VT_NULL = 1,
+    IL2CPP_VT_I2 = 2,
+    IL2CPP_VT_I4 = 3,
+    IL2CPP_VT_R4 = 4,
+    IL2CPP_VT_R8 = 5,
+    IL2CPP_VT_CY = 6,
+    IL2CPP_VT_DATE = 7,
+    IL2CPP_VT_BSTR = 8,
+    IL2CPP_VT_DISPATCH = 9,
+    IL2CPP_VT_ERROR = 10,
+    IL2CPP_VT_BOOL = 11,
+    IL2CPP_VT_VARIANT = 12,
+    IL2CPP_VT_UNKNOWN = 13,
+    IL2CPP_VT_DECIMAL = 14,
+    IL2CPP_VT_I1 = 16,
+    IL2CPP_VT_UI1 = 17,
+    IL2CPP_VT_UI2 = 18,
+    IL2CPP_VT_UI4 = 19,
+    IL2CPP_VT_I8 = 20,
+    IL2CPP_VT_UI8 = 21,
+    IL2CPP_VT_INT = 22,
+    IL2CPP_VT_UINT = 23,
+    IL2CPP_VT_VOID = 24,
+    IL2CPP_VT_HRESULT = 25,
+    IL2CPP_VT_PTR = 26,
+    IL2CPP_VT_SAFEARRAY = 27,
+    IL2CPP_VT_CARRAY = 28,
+    IL2CPP_VT_USERDEFINED = 29,
+    IL2CPP_VT_LPSTR = 30,
+    IL2CPP_VT_LPWSTR = 31,
+    IL2CPP_VT_RECORD = 36,
+    IL2CPP_VT_INT_PTR = 37,
+    IL2CPP_VT_UINT_PTR = 38,
+    IL2CPP_VT_FILETIME = 64,
+    IL2CPP_VT_BLOB = 65,
+    IL2CPP_VT_STREAM = 66,
+    IL2CPP_VT_STORAGE = 67,
+    IL2CPP_VT_STREAMED_OBJECT = 68,
+    IL2CPP_VT_STORED_OBJECT = 69,
+    IL2CPP_VT_BLOB_OBJECT = 70,
+    IL2CPP_VT_CF = 71,
+    IL2CPP_VT_CLSID = 72,
+    IL2CPP_VT_VERSIONED_STREAM = 73,
+    IL2CPP_VT_BSTR_BLOB = 0xfff,
+    IL2CPP_VT_VECTOR = 0x1000,
+    IL2CPP_VT_ARRAY = 0x2000,
+    IL2CPP_VT_BYREF = 0x4000,
+    IL2CPP_VT_RESERVED = 0x8000,
+    IL2CPP_VT_ILLEGAL = 0xffff,
+    IL2CPP_VT_ILLEGALMASKED = 0xfff,
+    IL2CPP_VT_TYPEMASK = 0xfff,
+} Il2CppVarType;
+typedef struct Il2CppVariant Il2CppVariant;
+typedef struct Il2CppIUnknown Il2CppIUnknown;
+typedef struct Il2CppVariant
+{
+    union
+    {
+        struct __tagVARIANT
+        {
+            uint16_t type;
+            uint16_t reserved1;
+            uint16_t reserved2;
+            uint16_t reserved3;
+            union
+            {
+                int64_t llVal;
+                int32_t lVal;
+                uint8_t bVal;
+                int16_t iVal;
+                float fltVal;
+                double dblVal;
+                IL2CPP_VARIANT_BOOL boolVal;
+                int32_t scode;
+                int64_t cyVal;
+                double date;
+                Il2CppChar* bstrVal;
+                Il2CppIUnknown* punkVal;
+                void* pdispVal;
+                Il2CppSafeArray* parray;
+                uint8_t* pbVal;
+                int16_t* piVal;
+                int32_t* plVal;
+                int64_t* pllVal;
+                float* pfltVal;
+                double* pdblVal;
+                IL2CPP_VARIANT_BOOL* pboolVal;
+                int32_t* pscode;
+                int64_t* pcyVal;
+                double* pdate;
+                Il2CppChar* pbstrVal;
+                Il2CppIUnknown** ppunkVal;
+                void** ppdispVal;
+                Il2CppSafeArray** pparray;
+                Il2CppVariant* pvarVal;
+                void* byref;
+                char cVal;
+                uint16_t uiVal;
+                uint32_t ulVal;
+                uint64_t ullVal;
+                int intVal;
+                unsigned int uintVal;
+                Il2CppWin32Decimal* pdecVal;
+                char* pcVal;
+                uint16_t* puiVal;
+                uint32_t* pulVal;
+                uint64_t* pullVal;
+                int* pintVal;
+                unsigned int* puintVal;
+                struct __tagBRECORD
+                {
+                    void* pvRecord;
+                    void* pRecInfo;
+                } n4;
+            } n3;
+        } n2;
+        Il2CppWin32Decimal decVal;
+    } n1;
+} Il2CppVariant;
+typedef struct Il2CppFileTime
+{
+    uint32_t low;
+    uint32_t high;
+} Il2CppFileTime;
+typedef struct Il2CppStatStg
+{
+    Il2CppChar* name;
+    uint32_t type;
+    uint64_t size;
+    Il2CppFileTime mtime;
+    Il2CppFileTime ctime;
+    Il2CppFileTime atime;
+    uint32_t mode;
+    uint32_t locks;
+    Il2CppGuid clsid;
+    uint32_t state;
+    uint32_t reserved;
+} Il2CppStatStg;
+enum Il2CppWindowsRuntimeTypeKind
+{
+    kTypeKindPrimitive = 0,
+    kTypeKindMetadata,
+    kTypeKindCustom
+};
+struct Il2CppWindowsRuntimeTypeName
+{
+    Il2CppHString typeName;
+    enum Il2CppWindowsRuntimeTypeKind typeKind;
+};
+typedef void (*PInvokeMarshalToNativeFunc)(void* managedStructure, void* marshaledStructure);
+typedef void (*PInvokeMarshalFromNativeFunc)(void* marshaledStructure, void* managedStructure);
+typedef void (*PInvokeMarshalCleanupFunc)(void* marshaledStructure);
+typedef struct Il2CppIUnknown* (*CreateCCWFunc)(Il2CppObject* obj);
+typedef struct Il2CppInteropData
+{
+    Il2CppMethodPointer delegatePInvokeWrapperFunction;
+    PInvokeMarshalToNativeFunc pinvokeMarshalToNativeFunction;
+    PInvokeMarshalFromNativeFunc pinvokeMarshalFromNativeFunction;
+    PInvokeMarshalCleanupFunc pinvokeMarshalCleanupFunction;
+    CreateCCWFunc createCCWFunction;
+    const Il2CppGuid* guid;
+    const Il2CppType* type;
+} Il2CppInteropData;
 typedef struct Il2CppClass Il2CppClass;
 typedef struct Il2CppGuid Il2CppGuid;
 typedef struct Il2CppImage Il2CppImage;
@@ -943,20 +1184,6 @@ typedef struct Il2CppRuntimeInterfaceOff
     Il2CppClass* interfaceType;
     int32_t offset;
 } Il2CppRuntimeInterfaceOffsetPair;
-typedef void (*PInvokeMarshalToNativeFunc)(void* managedStructure, void* marshaledStructure);
-typedef void (*PInvokeMarshalFromNativeFunc)(void* marshaledStructure, void* managedStructure);
-typedef void (*PInvokeMarshalCleanupFunc)(void* marshaledStructure);
-typedef struct Il2CppIUnknown* (*CreateCCWFunc)(Il2CppObject* obj);
-typedef struct Il2CppInteropData
-{
-    Il2CppMethodPointer delegatePInvokeWrapperFunction;
-    PInvokeMarshalToNativeFunc pinvokeMarshalToNativeFunction;
-    PInvokeMarshalFromNativeFunc pinvokeMarshalFromNativeFunction;
-    PInvokeMarshalCleanupFunc pinvokeMarshalCleanupFunction;
-    CreateCCWFunc createCCWFunction;
-    const Il2CppGuid* guid;
-    const Il2CppType* type;
-} Il2CppInteropData;
 typedef struct Il2CppClass
 {
     const Il2CppImage* image;
@@ -983,6 +1210,7 @@ typedef struct Il2CppClass
     void* static_fields;
     const Il2CppRGCTXData* rgctx_data;
     Il2CppClass** typeHierarchy;
+    void *unity_user_data;
     uint32_t initializationExceptionGCHandle;
     uint32_t cctor_started;
     uint32_t cctor_finished;
@@ -1203,217 +1431,6 @@ typedef struct Il2CppPerfCounters
     unsigned int threadpool_iothreads;
 } Il2CppPerfCounters;
        
-       
-typedef struct Il2CppHString__
-{
-    int unused;
-} Il2CppHString__;
-typedef Il2CppHString__* Il2CppHString;
-typedef struct Il2CppHStringHeader
-{
-    union
-    {
-        void* Reserved1;
-        char Reserved2[24];
-    } Reserved;
-} Il2CppHStringHeader;
-typedef struct Il2CppGuid
-{
-    uint32_t data1;
-    uint16_t data2;
-    uint16_t data3;
-    uint8_t data4[8];
-} Il2CppGuid;
-typedef struct Il2CppSafeArrayBound
-{
-    uint32_t element_count;
-    int32_t lower_bound;
-} Il2CppSafeArrayBound;
-typedef struct Il2CppSafeArray
-{
-    uint16_t dimension_count;
-    uint16_t features;
-    uint32_t element_size;
-    uint32_t lock_count;
-    void* data;
-    Il2CppSafeArrayBound bounds[1];
-} Il2CppSafeArray;
-typedef struct Il2CppWin32Decimal
-{
-    uint16_t reserved;
-    union
-    {
-        struct
-        {
-            uint8_t scale;
-            uint8_t sign;
-        } s;
-        uint16_t signscale;
-    } u;
-    uint32_t hi32;
-    union
-    {
-        struct
-        {
-            uint32_t lo32;
-            uint32_t mid32;
-        } s2;
-        uint64_t lo64;
-    } u2;
-} Il2CppWin32Decimal;
-typedef int16_t IL2CPP_VARIANT_BOOL;
-typedef enum Il2CppVarType
-{
-    IL2CPP_VT_EMPTY = 0,
-    IL2CPP_VT_NULL = 1,
-    IL2CPP_VT_I2 = 2,
-    IL2CPP_VT_I4 = 3,
-    IL2CPP_VT_R4 = 4,
-    IL2CPP_VT_R8 = 5,
-    IL2CPP_VT_CY = 6,
-    IL2CPP_VT_DATE = 7,
-    IL2CPP_VT_BSTR = 8,
-    IL2CPP_VT_DISPATCH = 9,
-    IL2CPP_VT_ERROR = 10,
-    IL2CPP_VT_BOOL = 11,
-    IL2CPP_VT_VARIANT = 12,
-    IL2CPP_VT_UNKNOWN = 13,
-    IL2CPP_VT_DECIMAL = 14,
-    IL2CPP_VT_I1 = 16,
-    IL2CPP_VT_UI1 = 17,
-    IL2CPP_VT_UI2 = 18,
-    IL2CPP_VT_UI4 = 19,
-    IL2CPP_VT_I8 = 20,
-    IL2CPP_VT_UI8 = 21,
-    IL2CPP_VT_INT = 22,
-    IL2CPP_VT_UINT = 23,
-    IL2CPP_VT_VOID = 24,
-    IL2CPP_VT_HRESULT = 25,
-    IL2CPP_VT_PTR = 26,
-    IL2CPP_VT_SAFEARRAY = 27,
-    IL2CPP_VT_CARRAY = 28,
-    IL2CPP_VT_USERDEFINED = 29,
-    IL2CPP_VT_LPSTR = 30,
-    IL2CPP_VT_LPWSTR = 31,
-    IL2CPP_VT_RECORD = 36,
-    IL2CPP_VT_INT_PTR = 37,
-    IL2CPP_VT_UINT_PTR = 38,
-    IL2CPP_VT_FILETIME = 64,
-    IL2CPP_VT_BLOB = 65,
-    IL2CPP_VT_STREAM = 66,
-    IL2CPP_VT_STORAGE = 67,
-    IL2CPP_VT_STREAMED_OBJECT = 68,
-    IL2CPP_VT_STORED_OBJECT = 69,
-    IL2CPP_VT_BLOB_OBJECT = 70,
-    IL2CPP_VT_CF = 71,
-    IL2CPP_VT_CLSID = 72,
-    IL2CPP_VT_VERSIONED_STREAM = 73,
-    IL2CPP_VT_BSTR_BLOB = 0xfff,
-    IL2CPP_VT_VECTOR = 0x1000,
-    IL2CPP_VT_ARRAY = 0x2000,
-    IL2CPP_VT_BYREF = 0x4000,
-    IL2CPP_VT_RESERVED = 0x8000,
-    IL2CPP_VT_ILLEGAL = 0xffff,
-    IL2CPP_VT_ILLEGALMASKED = 0xfff,
-    IL2CPP_VT_TYPEMASK = 0xfff,
-} Il2CppVarType;
-typedef struct Il2CppVariant Il2CppVariant;
-typedef struct Il2CppIUnknown Il2CppIUnknown;
-typedef struct Il2CppVariant
-{
-    union
-    {
-        struct __tagVARIANT
-        {
-            uint16_t type;
-            uint16_t reserved1;
-            uint16_t reserved2;
-            uint16_t reserved3;
-            union
-            {
-                int64_t llVal;
-                int32_t lVal;
-                uint8_t bVal;
-                int16_t iVal;
-                float fltVal;
-                double dblVal;
-                IL2CPP_VARIANT_BOOL boolVal;
-                int32_t scode;
-                int64_t cyVal;
-                double date;
-                Il2CppChar* bstrVal;
-                Il2CppIUnknown* punkVal;
-                void* pdispVal;
-                Il2CppSafeArray* parray;
-                uint8_t* pbVal;
-                int16_t* piVal;
-                int32_t* plVal;
-                int64_t* pllVal;
-                float* pfltVal;
-                double* pdblVal;
-                IL2CPP_VARIANT_BOOL* pboolVal;
-                int32_t* pscode;
-                int64_t* pcyVal;
-                double* pdate;
-                Il2CppChar* pbstrVal;
-                Il2CppIUnknown** ppunkVal;
-                void** ppdispVal;
-                Il2CppSafeArray** pparray;
-                Il2CppVariant* pvarVal;
-                void* byref;
-                char cVal;
-                uint16_t uiVal;
-                uint32_t ulVal;
-                uint64_t ullVal;
-                int intVal;
-                unsigned int uintVal;
-                Il2CppWin32Decimal* pdecVal;
-                char* pcVal;
-                uint16_t* puiVal;
-                uint32_t* pulVal;
-                uint64_t* pullVal;
-                int* pintVal;
-                unsigned int* puintVal;
-                struct __tagBRECORD
-                {
-                    void* pvRecord;
-                    void* pRecInfo;
-                } n4;
-            } n3;
-        } n2;
-        Il2CppWin32Decimal decVal;
-    } n1;
-} Il2CppVariant;
-typedef struct Il2CppFileTime
-{
-    uint32_t low;
-    uint32_t high;
-} Il2CppFileTime;
-typedef struct Il2CppStatStg
-{
-    Il2CppChar* name;
-    uint32_t type;
-    uint64_t size;
-    Il2CppFileTime mtime;
-    Il2CppFileTime ctime;
-    Il2CppFileTime atime;
-    uint32_t mode;
-    uint32_t locks;
-    Il2CppGuid clsid;
-    uint32_t state;
-    uint32_t reserved;
-} Il2CppStatStg;
-enum Il2CppWindowsRuntimeTypeKind
-{
-    kTypeKindPrimitive = 0,
-    kTypeKindMetadata,
-    kTypeKindCustom
-};
-struct Il2CppWindowsRuntimeTypeName
-{
-    Il2CppHString typeName;
-    enum Il2CppWindowsRuntimeTypeKind typeKind;
-};
 __attribute__ ((visibility ("default"))) void il2cpp_gc_wbarrier_set_field(Il2CppObject * obj, void **targetAddress, void *object);
 typedef struct Il2CppClass Il2CppClass;
 typedef struct MethodInfo MethodInfo;
--- 2019/2019.1.0a11/struct.h
+++ 2019/2019.1.0a12/struct.h
@@ -258,6 +258,32 @@ typedef enum Il2CppTypeEnum
     IL2CPP_TYPE_ENUM = 0x55
 } Il2CppTypeEnum;
        
+       
+typedef enum
+{
+    IL2CPP_TOKEN_MODULE = 0x00000000,
+    IL2CPP_TOKEN_TYPE_REF = 0x01000000,
+    IL2CPP_TOKEN_TYPE_DEF = 0x02000000,
+    IL2CPP_TOKEN_FIELD_DEF = 0x04000000,
+    IL2CPP_TOKEN_METHOD_DEF = 0x06000000,
+    IL2CPP_TOKEN_PARAM_DEF = 0x08000000,
+    IL2CPP_TOKEN_INTERFACE_IMPL = 0x09000000,
+    IL2CPP_TOKEN_MEMBER_REF = 0x0a000000,
+    IL2CPP_TOKEN_CUSTOM_ATTRIBUTE = 0x0c000000,
+    IL2CPP_TOKEN_PERMISSION = 0x0e000000,
+    IL2CPP_TOKEN_SIGNATURE = 0x11000000,
+    IL2CPP_TOKEN_EVENT = 0x14000000,
+    IL2CPP_TOKEN_PROPERTY = 0x17000000,
+    IL2CPP_TOKEN_MODULE_REF = 0x1a000000,
+    IL2CPP_TOKEN_TYPE_SPEC = 0x1b000000,
+    IL2CPP_TOKEN_ASSEMBLY = 0x20000000,
+    IL2CPP_TOKEN_ASSEMBLY_REF = 0x23000000,
+    IL2CPP_TOKEN_FILE = 0x26000000,
+    IL2CPP_TOKEN_EXPORTED_TYPE = 0x27000000,
+    IL2CPP_TOKEN_MANIFEST_RESOURCE = 0x28000000,
+    IL2CPP_TOKEN_GENERIC_PARAM = 0x2a000000,
+    IL2CPP_TOKEN_METHOD_SPEC = 0x2b000000,
+} Il2CppTokenType;
 typedef int32_t TypeIndex;
 typedef int32_t TypeDefinitionIndex;
 typedef int32_t FieldIndex;
@@ -343,8 +369,6 @@ typedef struct Il2CppTypeDefinition
     TypeIndex declaringTypeIndex;
     TypeIndex parentIndex;
     TypeIndex elementTypeIndex;
-    RGCTXIndex rgctxStartIndex;
-    int32_t rgctxCount;
     GenericContainerIndex genericContainerIndex;
     uint32_t flags;
     FieldIndex fieldStart;
@@ -408,11 +432,6 @@ typedef struct Il2CppMethodDefinition
     TypeIndex returnType;
     ParameterIndex parameterStart;
     GenericContainerIndex genericContainerIndex;
-    MethodIndex methodIndex;
-    MethodIndex invokerIndex;
-    MethodIndex reversePInvokeWrapperIndex;
-    RGCTXIndex rgctxStartIndex;
-    int32_t rgctxCount;
     uint32_t token;
     uint16_t flags;
     uint16_t iflags;
@@ -565,8 +584,6 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t interfaceOffsetsCount;
     int32_t typeDefinitionsOffset;
     int32_t typeDefinitionsCount;
-    int32_t rgctxEntriesOffset;
-    int32_t rgctxEntriesCount;
     int32_t imagesOffset;
     int32_t imagesCount;
     int32_t assembliesOffset;
@@ -908,6 +925,7 @@ typedef struct Il2CppAppDomainSetup Il2C
 typedef struct Il2CppDelegate Il2CppDelegate;
 typedef struct Il2CppAppContext Il2CppAppContext;
 typedef struct Il2CppNameToTypeDefinitionIndexHashTable Il2CppNameToTypeDefinitionIndexHashTable;
+typedef struct Il2CppCodeGenModule Il2CppCodeGenModule;
 typedef struct VirtualInvokeData
 {
     Il2CppMethodPointer methodPtr;
@@ -1299,6 +1317,7 @@ typedef struct Il2CppImage
     uint32_t customAttributeCount;
     MethodIndex entryPointIndex;
     Il2CppNameToTypeDefinitionIndexHashTable * nameToClassHashTable;
+    const Il2CppCodeGenModule* codeGenModule;
     uint32_t token;
     uint8_t dynamic;
 } Il2CppImage;
@@ -1314,10 +1333,31 @@ typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
 } Il2CppCodeGenOptions;
-typedef struct Il2CppCodeRegistration
+typedef struct Il2CppTokenIndexPair
+{
+    uint32_t token;
+    int32_t index;
+} Il2CppTokenIndexPair;
+typedef struct Il2CppTokenRangePair
+{
+    uint32_t token;
+    Il2CppRange range;
+} Il2CppTokenRangePair;
+typedef struct Il2CppCodeGenModule
 {
-    uint32_t methodPointersCount;
+    const char* moduleName;
+    const uint32_t methodPointerCount;
     const Il2CppMethodPointer* methodPointers;
+    const int32_t* invokerIndices;
+    const uint32_t reversePInvokeWrapperCount;
+    const Il2CppTokenIndexPair* reversePInvokeWrapperIndices;
+    const uint32_t rgctxRangesCount;
+    const Il2CppTokenRangePair* rgctxRanges;
+    const uint32_t rgctxsCount;
+    const Il2CppRGCTXDefinition* rgctxs;
+} Il2CppCodeGenModule;
+typedef struct Il2CppCodeRegistration
+{
     uint32_t reversePInvokeWrapperCount;
     const Il2CppMethodPointer* reversePInvokeWrappers;
     uint32_t genericMethodPointersCount;
@@ -1330,6 +1370,8 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
+    uint32_t codeGenModulesCount;
+    const Il2CppCodeGenModule** codeGenModules;
 } Il2CppCodeRegistration;
 typedef struct Il2CppMetadataRegistration
 {
--- 2019/2019.1.0a14/struct.h
+++ 2019/2019.1.0b1/struct.h
@@ -1105,7 +1105,6 @@ typedef struct Il2CppMethodExecutionCont
 } Il2CppMethodExecutionContextInfo;
 typedef struct Il2CppMethodExecutionContextInfoIndex
 {
-    int8_t tableIndex;
     int32_t startIndex;
     int32_t count;
 } Il2CppMethodExecutionContextInfoIndex;
@@ -1120,11 +1119,6 @@ typedef struct Il2CppMethodHeaderInfo
     int32_t startScope;
     int32_t numScopes;
 } Il2CppMethodHeaderInfo;
-typedef struct Il2CppSequencePointIndex
-{
-    uint8_t tableIndex;
-    int32_t index;
-} Il2CppSequencePointIndex;
 typedef struct Il2CppSequencePointSourceFile
 {
     const char *file;
@@ -1150,14 +1144,13 @@ typedef struct Il2CppSequencePoint
 } Il2CppSequencePoint;
 typedef struct Il2CppDebuggerMetadataRegistration
 {
-    Il2CppMethodExecutionContextInfo** methodExecutionContextInfos;
+    Il2CppMethodExecutionContextInfo* methodExecutionContextInfos;
     Il2CppMethodExecutionContextInfoIndex* methodExecutionContextInfoIndexes;
     Il2CppMethodScope* methodScopes;
     Il2CppMethodHeaderInfo* methodHeaderInfos;
     Il2CppSequencePointSourceFile* sequencePointSourceFiles;
     int32_t numSequencePoints;
-    Il2CppSequencePointIndex* sequencePointIndexes;
-    Il2CppSequencePoint** sequencePoints;
+    Il2CppSequencePoint* sequencePoints;
     int32_t numTypeSourceFileEntries;
     Il2CppTypeSourceFilePair* typeSourceFiles;
     const char** methodExecutionContextInfoStrings;
@@ -1355,6 +1348,7 @@ typedef struct Il2CppCodeGenModule
     const Il2CppTokenRangePair* rgctxRanges;
     const uint32_t rgctxsCount;
     const Il2CppRGCTXDefinition* rgctxs;
+    const Il2CppDebuggerMetadataRegistration *debuggerMetadata;
 } Il2CppCodeGenModule;
 typedef struct Il2CppCodeRegistration
 {
--- 2019/2019.1.0b4/struct.h
+++ 2019/2019.1.0b5/struct.h
@@ -1248,6 +1248,7 @@ typedef struct Il2CppClass
     uint8_t genericRecursionDepth;
     uint8_t rank;
     uint8_t minimumAlignment;
+    uint8_t naturalAligment;
     uint8_t packingSize;
     uint8_t initialized_and_no_error : 1;
     uint8_t valuetype : 1;
--- 2019/2019.1.14f1/struct.h
+++ 2019/2019.2.0a4/struct.h
@@ -1248,7 +1248,6 @@ typedef struct Il2CppClass
     uint8_t genericRecursionDepth;
     uint8_t rank;
     uint8_t minimumAlignment;
-    uint8_t naturalAligment;
     uint8_t packingSize;
     uint8_t initialized_and_no_error : 1;
     uint8_t valuetype : 1;
--- 2019/2019.2.0a4/struct.h
+++ 2019/2019.2.0a6/struct.h
@@ -1138,7 +1138,7 @@ typedef struct Il2CppSequencePoint
     int32_t columnStart, columnEnd;
     int32_t ilOffset;
     SequencePointKind kind;
-    uint8_t isActive;
+    int32_t isActive;
     int32_t id;
     uint8_t tryDepth;
 } Il2CppSequencePoint;
@@ -1248,6 +1248,7 @@ typedef struct Il2CppClass
     uint8_t genericRecursionDepth;
     uint8_t rank;
     uint8_t minimumAlignment;
+    uint8_t naturalAligment;
     uint8_t packingSize;
     uint8_t initialized_and_no_error : 1;
     uint8_t valuetype : 1;
--- 2019/2019.2.0a7/struct.h
+++ 2019/2019.2.0a8/struct.h
@@ -1115,7 +1116,7 @@ typedef struct Il2CppMethodScope
 } Il2CppMethodScope;
 typedef struct Il2CppMethodHeaderInfo
 {
-    int32_t codeSize;
+    int32_t code_size;
     int32_t startScope;
     int32_t numScopes;
 } Il2CppMethodHeaderInfo;
@@ -1387,19 +1388,6 @@ typedef struct Il2CppMetadataRegistratio
     const size_t metadataUsagesCount;
     void** const* metadataUsages;
 } Il2CppMetadataRegistration;
-typedef struct Il2CppRuntimeStats
-{
-    uint64_t new_object_count;
-    uint64_t initialized_class_count;
-    uint64_t method_count;
-    uint64_t class_static_data_size;
-    uint64_t generic_instance_count;
-    uint64_t generic_class_count;
-    uint64_t inflated_method_count;
-    uint64_t inflated_type_count;
-    uint8_t enabled;
-} Il2CppRuntimeStats;
-extern Il2CppRuntimeStats il2cpp_runtime_stats;
 typedef struct Il2CppPerfCounters
 {
     uint32_t jit_methods;
--- 2019/2019.2.0b5/struct.h
+++ 2019/2019.2.0b6/struct.h
@@ -110,6 +110,7 @@ struct Il2CppManagedMemorySnapshot;
 typedef void (*Il2CppMethodPointer)();
 typedef uintptr_t il2cpp_array_size_t;
        
+typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef uint32_t Il2CppMethodSlot;
 static const uint32_t kInvalidIl2CppMethodSlot = 65535;
 static const int32_t kIl2CppInt32Min = (-2147483647-1);
--- 2019/2019.2.21f1/struct.h
+++ 2019/2019.3.0a2/struct.h
@@ -110,7 +110,6 @@ struct Il2CppManagedMemorySnapshot;
 typedef void (*Il2CppMethodPointer)();
 typedef uintptr_t il2cpp_array_size_t;
        
-typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef uint32_t Il2CppMethodSlot;
 static const uint32_t kInvalidIl2CppMethodSlot = 65535;
 static const int32_t kIl2CppInt32Min = (-2147483647-1);
--- 2019/2019.3.0a4/struct.h
+++ 2019/2019.3.0a5/struct.h
@@ -82,6 +82,13 @@ typedef struct Il2CppStackFrameInfo
 {
     const MethodInfo *method;
 } Il2CppStackFrameInfo;
+typedef void(*Il2CppMethodPointer)();
+typedef struct Il2CppMethodDebugInfo
+{
+    Il2CppMethodPointer methodPointer;
+    int32_t code_size;
+    const char *file;
+} Il2CppMethodDebugInfo;
 typedef struct
 {
     void* (*malloc_func)(size_t size);
@@ -107,9 +114,9 @@ typedef void (*Il2CppProfileThreadFunc)
 typedef const Il2CppNativeChar* (*Il2CppSetFindPlugInCallback)(const Il2CppNativeChar*);
 typedef void (*Il2CppLogCallback)(const char*);
 struct Il2CppManagedMemorySnapshot;
-typedef void (*Il2CppMethodPointer)();
 typedef uintptr_t il2cpp_array_size_t;
        
+typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef uint32_t Il2CppMethodSlot;
 static const uint32_t kInvalidIl2CppMethodSlot = 65535;
 static const int32_t kIl2CppInt32Min = (-2147483647-1);
@@ -1133,7 +1140,6 @@ typedef struct Il2CppTypeSourceFilePair
 typedef struct Il2CppSequencePoint
 {
     MethodIndex methodDefinitionIndex;
-    TypeIndex catchTypeIndex;
     int32_t sourceFileIndex;
     int32_t lineStart, lineEnd;
     int32_t columnStart, columnEnd;
@@ -1141,8 +1147,15 @@ typedef struct Il2CppSequencePoint
     SequencePointKind kind;
     int32_t isActive;
     int32_t id;
-    uint8_t tryDepth;
 } Il2CppSequencePoint;
+typedef struct Il2CppCatchPoint
+{
+    MethodIndex methodDefinitionIndex;
+    TypeIndex catchTypeIndex;
+    int32_t ilOffset;
+    int8_t tryId;
+    int8_t parentTryId;
+} Il2CppCatchPoint;
 typedef struct Il2CppDebuggerMetadataRegistration
 {
     Il2CppMethodExecutionContextInfo* methodExecutionContextInfos;
@@ -1152,6 +1165,8 @@ typedef struct Il2CppDebuggerMetadataReg
     Il2CppSequencePointSourceFile* sequencePointSourceFiles;
     int32_t numSequencePoints;
     Il2CppSequencePoint* sequencePoints;
+    int32_t numCatchPoints;
+    Il2CppCatchPoint* catchPoints;
     int32_t numTypeSourceFileEntries;
     Il2CppTypeSourceFilePair* typeSourceFiles;
     const char** methodExecutionContextInfoStrings;
--- 2019/2019.3.0a7/struct.h
+++ 2019/2019.3.0a8/struct.h
@@ -99,6 +99,16 @@ typedef struct
     void* (*realloc_func)(void *ptr, size_t size);
     void* (*aligned_realloc_func)(void *ptr, size_t size, size_t alignment);
 } Il2CppMemoryCallbacks;
+typedef struct
+{
+    const char *name;
+    void(*connect)(const char *address);
+    int(*wait_for_attach)(void);
+    void(*close1)(void);
+    void(*close2)(void);
+    int(*send)(void *buf, int len);
+    int(*recv)(void *buf, int len);
+} Il2CppDebuggerTransport;
 typedef uint16_t Il2CppChar;
 typedef char Il2CppNativeChar;
 typedef void (*il2cpp_register_object_callback)(Il2CppObject** arr, int size, void* userdata);
--- 2019/2019.3.0a11/struct.h
+++ 2019/2019.3.0a12/struct.h
@@ -227,6 +227,16 @@ namespace vm
 {
 namespace MemoryInformation
 {
+    typedef void(*ClassReportFunc)(Il2CppClass* klass, void* context);
+    typedef void(*DataReportFunc)(void* data, void* context);
+    struct IterationContext
+    {
+        DataReportFunc callback;
+        void* userData;
+    };
+    void ReportIL2CppClasses(ClassReportFunc callback, void* context);
+    void ReportGcHeapSection(void* context, void* start, void* end);
+    void ReportGcHandleTarget(Il2CppObject* obj, void* context);
     Il2CppManagedMemorySnapshot* CaptureManagedMemorySnapshot();
     void FreeCapturedManagedMemorySnapshot(Il2CppManagedMemorySnapshot* snapshot);
 }
--- 2019/2019.3.0b3/struct.h
+++ 2019/2019.3.0b4/struct.h
@@ -1373,6 +1373,12 @@ typedef struct Il2CppTokenRangePair
     uint32_t token;
     Il2CppRange range;
 } Il2CppTokenRangePair;
+typedef struct Il2CppTokenIndexMethodTuple
+{
+    uint32_t token;
+    int32_t index;
+    void** method;
+} Il2CppTokenIndexMethodTuple;
 typedef struct Il2CppCodeGenModule
 {
     const char* moduleName;
@@ -1380,7 +1386,7 @@ typedef struct Il2CppCodeGenModule
     const Il2CppMethodPointer* methodPointers;
     const int32_t* invokerIndices;
     const uint32_t reversePInvokeWrapperCount;
-    const Il2CppTokenIndexPair* reversePInvokeWrapperIndices;
+    const Il2CppTokenIndexMethodTuple* reversePInvokeWrapperIndices;
     const uint32_t rgctxRangesCount;
     const Il2CppTokenRangePair* rgctxRanges;
     const uint32_t rgctxsCount;
--- 2019/2019.3.0b4/struct.h
+++ 2019/2019.3.0b5/struct.h
@@ -1378,6 +1378,7 @@ typedef struct Il2CppTokenIndexMethodTup
     uint32_t token;
     int32_t index;
     void** method;
+    uint32_t genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
 typedef struct Il2CppCodeGenModule
 {
--- 2019/2019.3.0f3/struct.h
+++ 2019/2019.3.0f5/struct.h
@@ -123,6 +123,7 @@ typedef void (*Il2CppProfileFileIOFunc)
 typedef void (*Il2CppProfileThreadFunc) (Il2CppProfiler *prof, unsigned long tid);
 typedef const Il2CppNativeChar* (*Il2CppSetFindPlugInCallback)(const Il2CppNativeChar*);
 typedef void (*Il2CppLogCallback)(const char*);
+typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
        
--- 2019/2019.3.6f1/struct.h
+++ 2019/2019.3.7f1/struct.h
@@ -1381,6 +1381,11 @@ typedef struct Il2CppTokenIndexMethodTup
     void** method;
     uint32_t genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
+typedef struct Il2CppWindowsRuntimeFactoryTableEntry
+{
+    const Il2CppType* type;
+    Il2CppMethodPointer createFactoryFunction;
+} Il2CppWindowsRuntimeFactoryTableEntry;
 typedef struct Il2CppCodeGenModule
 {
     const char* moduleName;
@@ -1409,6 +1414,8 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
+    uint32_t windowsRuntimeFactoryCount;
+    Il2CppWindowsRuntimeFactoryTableEntry* windowsRuntimeFactoryTable;
     uint32_t codeGenModulesCount;
     const Il2CppCodeGenModule** codeGenModules;
 } Il2CppCodeRegistration;
--- 2019/2019.4.9f1/struct.h
+++ 2019/2019.4.10f1/struct.h
@@ -1174,8 +1174,8 @@ typedef struct Il2CppCatchPoint
     MethodIndex methodDefinitionIndex;
     TypeIndex catchTypeIndex;
     int32_t ilOffset;
-    int8_t tryId;
-    int8_t parentTryId;
+    int32_t tryId;
+    int32_t parentTryId;
 } Il2CppCatchPoint;
 typedef struct Il2CppDebuggerMetadataRegistration
 {
--- 2019/2019.4.14f1/struct.h
+++ 2019/2019.4.15f1/struct.h
@@ -510,7 +510,6 @@ typedef struct Il2CppAssemblyNameDefinit
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
-    StringIndex hashValueIndex;
     StringIndex publicKeyIndex;
     uint32_t hash_alg;
     int32_t hash_len;
@@ -1324,8 +1323,7 @@ typedef struct Il2CppAssemblyName
 {
     const char* name;
     const char* culture;
-    const char* hash_value;
-    const char* public_key;
+    const uint8_t* public_key;
     uint32_t hash_alg;
     int32_t hash_len;
     uint32_t flags;
@@ -1363,6 +1361,7 @@ typedef struct Il2CppAssembly
 typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
+    int maximumRuntimeGenericDepth;
 } Il2CppCodeGenOptions;
 typedef struct Il2CppTokenIndexPair
 {
--- 2019/2019.4.20f1/struct.h
+++ 2019/2019.4.21f1/struct.h
@@ -499,6 +499,7 @@ typedef struct
 {
     MethodIndex methodIndex;
     MethodIndex invokerIndex;
+    MethodIndex adjustorThunkIndex;
 } Il2CppGenericMethodIndices;
 typedef struct Il2CppGenericMethodFunctionsDefinitions
 {
@@ -1380,6 +1381,11 @@ typedef struct Il2CppTokenIndexMethodTup
     void** method;
     uint32_t genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
+typedef struct Il2CppTokenAdjustorThunkPair
+{
+    uint32_t token;
+    Il2CppMethodPointer adjustorThunk;
+} Il2CppTokenAdjustorThunkPair;
 typedef struct Il2CppWindowsRuntimeFactoryTableEntry
 {
     const Il2CppType* type;
@@ -1390,6 +1396,8 @@ typedef struct Il2CppCodeGenModule
     const char* moduleName;
     const uint32_t methodPointerCount;
     const Il2CppMethodPointer* methodPointers;
+    const uint32_t adjustorThunkCount;
+    const Il2CppTokenAdjustorThunkPair* adjustorThunks;
     const int32_t* invokerIndices;
     const uint32_t reversePInvokeWrapperCount;
     const Il2CppTokenIndexMethodTuple* reversePInvokeWrapperIndices;
@@ -1405,6 +1413,7 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* reversePInvokeWrappers;
     uint32_t genericMethodPointersCount;
     const Il2CppMethodPointer* genericMethodPointers;
+    const Il2CppMethodPointer* genericAdjustorThunks;
     uint32_t invokerPointersCount;
     const InvokerMethod* invokerPointers;
     CustomAttributeIndex customAttributeCount;
--- 2019/2019.4.29f1/struct.h
+++ 2019/2019.4.30f1/struct.h
@@ -1216,6 +1216,7 @@ typedef struct MethodInfo
     {
         const Il2CppGenericMethod* genericMethod;
         const Il2CppGenericContainer* genericContainer;
+        Il2CppMethodPointer nativeFunction;
     };
     uint32_t token;
     uint16_t flags;
--- 2019/2019.4.40f1/struct.h
+++ 2020/2020.1.0a3/struct.h
@@ -123,7 +123,6 @@ typedef void (*Il2CppProfileFileIOFunc)
 typedef void (*Il2CppProfileThreadFunc) (Il2CppProfiler *prof, unsigned long tid);
 typedef const Il2CppNativeChar* (*Il2CppSetFindPlugInCallback)(const Il2CppNativeChar*);
 typedef void (*Il2CppLogCallback)(const char*);
-typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
        
@@ -499,7 +498,6 @@ typedef struct
 {
     MethodIndex methodIndex;
     MethodIndex invokerIndex;
-    MethodIndex adjustorThunkIndex;
 } Il2CppGenericMethodIndices;
 typedef struct Il2CppGenericMethodFunctionsDefinitions
 {
@@ -511,6 +509,7 @@ typedef struct Il2CppAssemblyNameDefinit
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
+    StringIndex hashValueIndex;
     StringIndex publicKeyIndex;
     uint32_t hash_alg;
     int32_t hash_len;
@@ -1174,8 +1173,8 @@ typedef struct Il2CppCatchPoint
     MethodIndex methodDefinitionIndex;
     TypeIndex catchTypeIndex;
     int32_t ilOffset;
-    int32_t tryId;
-    int32_t parentTryId;
+    int8_t tryId;
+    int8_t parentTryId;
 } Il2CppCatchPoint;
 typedef struct Il2CppDebuggerMetadataRegistration
 {
@@ -1216,7 +1215,6 @@ typedef struct MethodInfo
     {
         const Il2CppGenericMethod* genericMethod;
         const Il2CppGenericContainer* genericContainer;
-        Il2CppMethodPointer nativeFunction;
     };
     uint32_t token;
     uint16_t flags;
@@ -1325,7 +1323,8 @@ typedef struct Il2CppAssemblyName
 {
     const char* name;
     const char* culture;
-    const uint8_t* public_key;
+    const char* hash_value;
+    const char* public_key;
     uint32_t hash_alg;
     int32_t hash_len;
     uint32_t flags;
@@ -1363,7 +1362,6 @@ typedef struct Il2CppAssembly
 typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
-    int maximumRuntimeGenericDepth;
 } Il2CppCodeGenOptions;
 typedef struct Il2CppTokenIndexPair
 {
@@ -1375,33 +1373,14 @@ typedef struct Il2CppTokenRangePair
     uint32_t token;
     Il2CppRange range;
 } Il2CppTokenRangePair;
-typedef struct Il2CppTokenIndexMethodTuple
-{
-    uint32_t token;
-    int32_t index;
-    void** method;
-    uint32_t genericMethodIndex;
-} Il2CppTokenIndexMethodTuple;
-typedef struct Il2CppTokenAdjustorThunkPair
-{
-    uint32_t token;
-    Il2CppMethodPointer adjustorThunk;
-} Il2CppTokenAdjustorThunkPair;
-typedef struct Il2CppWindowsRuntimeFactoryTableEntry
-{
-    const Il2CppType* type;
-    Il2CppMethodPointer createFactoryFunction;
-} Il2CppWindowsRuntimeFactoryTableEntry;
 typedef struct Il2CppCodeGenModule
 {
     const char* moduleName;
     const uint32_t methodPointerCount;
     const Il2CppMethodPointer* methodPointers;
-    const uint32_t adjustorThunkCount;
-    const Il2CppTokenAdjustorThunkPair* adjustorThunks;
     const int32_t* invokerIndices;
     const uint32_t reversePInvokeWrapperCount;
-    const Il2CppTokenIndexMethodTuple* reversePInvokeWrapperIndices;
+    const Il2CppTokenIndexPair* reversePInvokeWrapperIndices;
     const uint32_t rgctxRangesCount;
     const Il2CppTokenRangePair* rgctxRanges;
     const uint32_t rgctxsCount;
@@ -1414,7 +1393,6 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* reversePInvokeWrappers;
     uint32_t genericMethodPointersCount;
     const Il2CppMethodPointer* genericMethodPointers;
-    const Il2CppMethodPointer* genericAdjustorThunks;
     uint32_t invokerPointersCount;
     const InvokerMethod* invokerPointers;
     CustomAttributeIndex customAttributeCount;
@@ -1423,8 +1401,6 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
-    uint32_t windowsRuntimeFactoryCount;
-    Il2CppWindowsRuntimeFactoryTableEntry* windowsRuntimeFactoryTable;
     uint32_t codeGenModulesCount;
     const Il2CppCodeGenModule** codeGenModules;
 } Il2CppCodeRegistration;
--- 2020/2020.1.0a3/struct.h
+++ 2020/2020.1.0a5/struct.h
@@ -1373,6 +1373,12 @@ typedef struct Il2CppTokenRangePair
     uint32_t token;
     Il2CppRange range;
 } Il2CppTokenRangePair;
+typedef struct Il2CppTokenIndexMethodTuple
+{
+    uint32_t token;
+    int32_t index;
+    void** method;
+} Il2CppTokenIndexMethodTuple;
 typedef struct Il2CppCodeGenModule
 {
     const char* moduleName;
@@ -1380,7 +1386,7 @@ typedef struct Il2CppCodeGenModule
     const Il2CppMethodPointer* methodPointers;
     const int32_t* invokerIndices;
     const uint32_t reversePInvokeWrapperCount;
-    const Il2CppTokenIndexPair* reversePInvokeWrapperIndices;
+    const Il2CppTokenIndexMethodTuple* reversePInvokeWrapperIndices;
     const uint32_t rgctxRangesCount;
     const Il2CppTokenRangePair* rgctxRanges;
     const uint32_t rgctxsCount;
--- 2020/2020.1.0a5/struct.h
+++ 2020/2020.1.0a7/struct.h
@@ -1378,6 +1378,7 @@ typedef struct Il2CppTokenIndexMethodTup
     uint32_t token;
     int32_t index;
     void** method;
+    uint32_t genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
 typedef struct Il2CppCodeGenModule
 {
--- 2020/2020.1.0a18/struct.h
+++ 2020/2020.1.0a19/struct.h
@@ -81,6 +81,7 @@ typedef enum
 typedef struct Il2CppStackFrameInfo
 {
     const MethodInfo *method;
+    uintptr_t raw_ip;
 } Il2CppStackFrameInfo;
 typedef void(*Il2CppMethodPointer)();
 typedef struct Il2CppMethodDebugInfo
@@ -123,12 +124,13 @@ typedef void (*Il2CppProfileFileIOFunc)
 typedef void (*Il2CppProfileThreadFunc) (Il2CppProfiler *prof, unsigned long tid);
 typedef const Il2CppNativeChar* (*Il2CppSetFindPlugInCallback)(const Il2CppNativeChar*);
 typedef void (*Il2CppLogCallback)(const char*);
+typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
-typedef uint32_t Il2CppMethodSlot;
-static const uint32_t kInvalidIl2CppMethodSlot = 65535;
+typedef uint16_t Il2CppMethodSlot;
+static const uint16_t kInvalidIl2CppMethodSlot = 65535;
 static const int32_t kIl2CppInt32Min = (-2147483647-1);
 static const int32_t kIl2CppInt32Max = (2147483647);
 static const uint32_t kIl2CppUInt32Max = (4294967295U);
--- 2020/2020.1.0a21/struct.h
+++ 2020/2020.1.0a22/struct.h
@@ -1382,6 +1382,11 @@ typedef struct Il2CppTokenIndexMethodTup
     void** method;
     uint32_t genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
+typedef struct Il2CppWindowsRuntimeFactoryTableEntry
+{
+    const Il2CppType* type;
+    Il2CppMethodPointer createFactoryFunction;
+} Il2CppWindowsRuntimeFactoryTableEntry;
 typedef struct Il2CppCodeGenModule
 {
     const char* moduleName;
@@ -1410,6 +1415,8 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
+    uint32_t windowsRuntimeFactoryCount;
+    Il2CppWindowsRuntimeFactoryTableEntry* windowsRuntimeFactoryTable;
     uint32_t codeGenModulesCount;
     const Il2CppCodeGenModule** codeGenModules;
 } Il2CppCodeRegistration;
--- 2020/2020.1.4f1/struct.h
+++ 2020/2020.1.5f1/struct.h
@@ -1175,8 +1175,8 @@ typedef struct Il2CppCatchPoint
     MethodIndex methodDefinitionIndex;
     TypeIndex catchTypeIndex;
     int32_t ilOffset;
-    int8_t tryId;
-    int8_t parentTryId;
+    int32_t tryId;
+    int32_t parentTryId;
 } Il2CppCatchPoint;
 typedef struct Il2CppDebuggerMetadataRegistration
 {
--- 2020/2020.1.10f1/struct.h
+++ 2020/2020.1.11f1/struct.h
@@ -511,7 +511,6 @@ typedef struct Il2CppAssemblyNameDefinit
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
-    StringIndex hashValueIndex;
     StringIndex publicKeyIndex;
     uint32_t hash_alg;
     int32_t hash_len;
@@ -1325,8 +1324,7 @@ typedef struct Il2CppAssemblyName
 {
     const char* name;
     const char* culture;
-    const char* hash_value;
-    const char* public_key;
+    const uint8_t* public_key;
     uint32_t hash_alg;
     int32_t hash_len;
     uint32_t flags;
@@ -1364,6 +1362,7 @@ typedef struct Il2CppAssembly
 typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
+    int maximumRuntimeGenericDepth;
 } Il2CppCodeGenOptions;
 typedef struct Il2CppTokenIndexPair
 {
--- 2020/2020.1.17f1/struct.h
+++ 2020/2020.2.0a7/struct.h
@@ -143,151 +143,6 @@ static const uintptr_t kIl2CppUIntPtrMax
 static const int ipv6AddressSize = 16;
 typedef int32_t il2cpp_hresult_t;
 static const Il2CppChar kIl2CppNewLine[] = { '\n', '\0' };
-struct Il2CppMetadataField
-{
-    uint32_t offset;
-    uint32_t typeIndex;
-    const char* name;
-    uint8_t isStatic;
-};
-enum Il2CppMetadataTypeFlags
-{
-    kNone = 0,
-    kValueType = 1 << 0,
-    kArray = 1 << 1,
-    kArrayRankMask = 0xFFFF0000
-};
-struct Il2CppMetadataType
-{
-    Il2CppMetadataTypeFlags flags;
-    Il2CppMetadataField* fields;
-    uint32_t fieldCount;
-    uint32_t staticsSize;
-    uint8_t* statics;
-    uint32_t baseOrElementTypeIndex;
-    char* name;
-    const char* assemblyName;
-    uint64_t typeInfoAddress;
-    uint32_t size;
-};
-struct Il2CppMetadataSnapshot
-{
-    uint32_t typeCount;
-    Il2CppMetadataType* types;
-};
-struct Il2CppManagedMemorySection
-{
-    uint64_t sectionStartAddress;
-    uint32_t sectionSize;
-    uint8_t* sectionBytes;
-};
-struct Il2CppManagedHeap
-{
-    uint32_t sectionCount;
-    Il2CppManagedMemorySection* sections;
-};
-struct Il2CppStacks
-{
-    uint32_t stackCount;
-    Il2CppManagedMemorySection* stacks;
-};
-struct NativeObject
-{
-    uint32_t gcHandleIndex;
-    uint32_t size;
-    uint32_t instanceId;
-    uint32_t classId;
-    uint32_t referencedNativeObjectIndicesCount;
-    uint32_t* referencedNativeObjectIndices;
-};
-struct Il2CppGCHandles
-{
-    uint32_t trackedObjectCount;
-    uint64_t* pointersToObjects;
-};
-struct Il2CppRuntimeInformation
-{
-    uint32_t pointerSize;
-    uint32_t objectHeaderSize;
-    uint32_t arrayHeaderSize;
-    uint32_t arrayBoundsOffsetInHeader;
-    uint32_t arraySizeOffsetInHeader;
-    uint32_t allocationGranularity;
-};
-struct Il2CppManagedMemorySnapshot
-{
-    Il2CppManagedHeap heap;
-    Il2CppStacks stacks;
-    Il2CppMetadataSnapshot metadata;
-    Il2CppGCHandles gcHandles;
-    Il2CppRuntimeInformation runtimeInformation;
-    void* additionalUserInformation;
-};
-namespace il2cpp
-{
-namespace vm
-{
-namespace MemoryInformation
-{
-    typedef void(*ClassReportFunc)(Il2CppClass* klass, void* context);
-    typedef void(*DataReportFunc)(void* data, void* context);
-    struct IterationContext
-    {
-        DataReportFunc callback;
-        void* userData;
-    };
-    void ReportIL2CppClasses(ClassReportFunc callback, void* context);
-    void ReportGcHeapSection(void* context, void* start, void* end);
-    void ReportGcHandleTarget(Il2CppObject* obj, void* context);
-    Il2CppManagedMemorySnapshot* CaptureManagedMemorySnapshot();
-    void FreeCapturedManagedMemorySnapshot(Il2CppManagedMemorySnapshot* snapshot);
-}
-}
-}
-       
-       
-       
-       
-typedef enum Il2CppTypeEnum
-{
-    IL2CPP_TYPE_END = 0x00,
-    IL2CPP_TYPE_VOID = 0x01,
-    IL2CPP_TYPE_BOOLEAN = 0x02,
-    IL2CPP_TYPE_CHAR = 0x03,
-    IL2CPP_TYPE_I1 = 0x04,
-    IL2CPP_TYPE_U1 = 0x05,
-    IL2CPP_TYPE_I2 = 0x06,
-    IL2CPP_TYPE_U2 = 0x07,
-    IL2CPP_TYPE_I4 = 0x08,
-    IL2CPP_TYPE_U4 = 0x09,
-    IL2CPP_TYPE_I8 = 0x0a,
-    IL2CPP_TYPE_U8 = 0x0b,
-    IL2CPP_TYPE_R4 = 0x0c,
-    IL2CPP_TYPE_R8 = 0x0d,
-    IL2CPP_TYPE_STRING = 0x0e,
-    IL2CPP_TYPE_PTR = 0x0f,
-    IL2CPP_TYPE_BYREF = 0x10,
-    IL2CPP_TYPE_VALUETYPE = 0x11,
-    IL2CPP_TYPE_CLASS = 0x12,
-    IL2CPP_TYPE_VAR = 0x13,
-    IL2CPP_TYPE_ARRAY = 0x14,
-    IL2CPP_TYPE_GENERICINST = 0x15,
-    IL2CPP_TYPE_TYPEDBYREF = 0x16,
-    IL2CPP_TYPE_I = 0x18,
-    IL2CPP_TYPE_U = 0x19,
-    IL2CPP_TYPE_FNPTR = 0x1b,
-    IL2CPP_TYPE_OBJECT = 0x1c,
-    IL2CPP_TYPE_SZARRAY = 0x1d,
-    IL2CPP_TYPE_MVAR = 0x1e,
-    IL2CPP_TYPE_CMOD_REQD = 0x1f,
-    IL2CPP_TYPE_CMOD_OPT = 0x20,
-    IL2CPP_TYPE_INTERNAL = 0x21,
-    IL2CPP_TYPE_MODIFIER = 0x40,
-    IL2CPP_TYPE_SENTINEL = 0x41,
-    IL2CPP_TYPE_PINNED = 0x45,
-    IL2CPP_TYPE_ENUM = 0x55
-} Il2CppTypeEnum;
-       
        
 typedef enum
 {
@@ -331,7 +186,6 @@ typedef int16_t GenericParameterConstrai
 typedef int32_t NestedTypeIndex;
 typedef int32_t InterfacesIndex;
 typedef int32_t VTableIndex;
-typedef int32_t InterfaceOffsetIndex;
 typedef int32_t RGCTXIndex;
 typedef int32_t StringIndex;
 typedef int32_t StringLiteralIndex;
@@ -339,6 +193,17 @@ typedef int32_t GenericInstIndex;
 typedef int32_t ImageIndex;
 typedef int32_t AssemblyIndex;
 typedef int32_t InteropDataIndex;
+typedef int32_t TypeFieldIndex;
+typedef int32_t TypeMethodIndex;
+typedef int32_t MethodParameterIndex;
+typedef int32_t TypePropertyIndex;
+typedef int32_t TypeEventIndex;
+typedef int32_t TypeInterfaceIndex;
+typedef int32_t TypeNestedTypeIndex;
+typedef int32_t TypeInterfaceOffsetIndex;
+typedef int32_t GenericContainerParameterIndex;
+typedef int32_t AssemblyTypeIndex;
+typedef int32_t AssemblyExportedTypeIndex;
 static const TypeIndex kTypeIndexInvalid = -1;
 static const TypeDefinitionIndex kTypeDefinitionIndexInvalid = -1;
 static const DefaultValueDataIndex kDefaultValueIndexNull = -1;
@@ -352,26 +217,13 @@ static const GenericParameterIndex kGene
 static const RGCTXIndex kRGCTXIndexInvalid = -1;
 static const StringLiteralIndex kStringLiteralIndexInvalid = -1;
 static const InteropDataIndex kInteropDataIndexInvalid = -1;
-typedef uint32_t EncodedMethodIndex;
-enum Il2CppMetadataUsage
-{
-    kIl2CppMetadataUsageInvalid,
-    kIl2CppMetadataUsageTypeInfo,
-    kIl2CppMetadataUsageIl2CppType,
-    kIl2CppMetadataUsageMethodDef,
-    kIl2CppMetadataUsageFieldInfo,
-    kIl2CppMetadataUsageStringLiteral,
-    kIl2CppMetadataUsageMethodRef,
-};
-struct Il2CppImage;
-struct Il2CppType;
-struct Il2CppTypeDefinitionMetadata;
-typedef union Il2CppRGCTXDefinitionData
+static const int kPublicKeyByteLength = 8;
+typedef struct Il2CppMethodSpec
 {
-    int32_t rgctxDataDummy;
-    MethodIndex methodIndex;
-    TypeIndex typeIndex;
-} Il2CppRGCTXDefinitionData;
+    MethodIndex methodDefinitionIndex;
+    GenericInstIndex classIndexIndex;
+    GenericInstIndex methodIndexIndex;
+} Il2CppMethodSpec;
 typedef enum Il2CppRGCTXDataType
 {
     IL2CPP_RGCTX_DATA_INVALID,
@@ -380,11 +232,52 @@ typedef enum Il2CppRGCTXDataType
     IL2CPP_RGCTX_DATA_METHOD,
     IL2CPP_RGCTX_DATA_ARRAY,
 } Il2CppRGCTXDataType;
+typedef union Il2CppRGCTXDefinitionData
+{
+    int32_t rgctxDataDummy;
+    MethodIndex __methodIndex;
+    TypeIndex __typeIndex;
+} Il2CppRGCTXDefinitionData;
 typedef struct Il2CppRGCTXDefinition
 {
     Il2CppRGCTXDataType type;
     Il2CppRGCTXDefinitionData data;
 } Il2CppRGCTXDefinition;
+typedef struct
+{
+    MethodIndex methodIndex;
+    MethodIndex invokerIndex;
+} Il2CppGenericMethodIndices;
+typedef struct Il2CppGenericMethodFunctionsDefinitions
+{
+    GenericMethodIndex genericMethodIndex;
+    Il2CppGenericMethodIndices indices;
+} Il2CppGenericMethodFunctionsDefinitions;
+static inline uint32_t GetTokenType(uint32_t token)
+{
+    return token & 0xFF000000;
+}
+static inline uint32_t GetTokenRowId(uint32_t token)
+{
+    return token & 0x00FFFFFF;
+}
+typedef const struct ___Il2CppMetadataImageHandle* Il2CppMetadataImageHandle;
+typedef const struct ___Il2CppMetadataCustomAttributeHandle* Il2CppMetadataCustomAttributeHandle;
+typedef const struct ___Il2CppMetadataTypeHandle* Il2CppMetadataTypeHandle;
+typedef const struct ___Il2CppMetadataMethodHandle* Il2CppMetadataMethodDefinitionHandle;
+typedef const struct ___Il2CppMetadataGenericContainerHandle* Il2CppMetadataGenericContainerHandle;
+typedef const struct ___Il2CppMetadataGenericParameterHandle* Il2CppMetadataGenericParameterHandle;
+typedef uint32_t EncodedMethodIndex;
+enum Il2CppMetadataUsage
+{
+    kIl2CppMetadataUsageInvalid,
+    kIl2CppMetadataUsageTypeInfo,
+    kIl2CppMetadataUsageIl2CppType,
+    kIl2CppMetadataUsageMethodDef,
+    kIl2CppMetadataUsageFieldInfo,
+    kIl2CppMetadataUsageStringLiteral,
+    kIl2CppMetadataUsageMethodRef,
+};
 typedef struct Il2CppInterfaceOffsetPair
 {
     TypeIndex interfaceTypeIndex;
@@ -485,32 +378,16 @@ typedef struct Il2CppPropertyDefinition
     uint32_t attrs;
     uint32_t token;
 } Il2CppPropertyDefinition;
-typedef struct Il2CppMethodSpec
-{
-    MethodIndex methodDefinitionIndex;
-    GenericInstIndex classIndexIndex;
-    GenericInstIndex methodIndexIndex;
-} Il2CppMethodSpec;
 typedef struct Il2CppStringLiteral
 {
     uint32_t length;
     StringLiteralIndex dataIndex;
 } Il2CppStringLiteral;
-typedef struct
-{
-    MethodIndex methodIndex;
-    MethodIndex invokerIndex;
-} Il2CppGenericMethodIndices;
-typedef struct Il2CppGenericMethodFunctionsDefinitions
-{
-    GenericMethodIndex genericMethodIndex;
-    Il2CppGenericMethodIndices indices;
-} Il2CppGenericMethodFunctionsDefinitions;
-static const int kPublicKeyByteLength = 8;
 typedef struct Il2CppAssemblyNameDefinition
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
+    StringIndex hashValueIndex;
     StringIndex publicKeyIndex;
     uint32_t hash_alg;
     int32_t hash_len;
@@ -558,11 +435,27 @@ typedef struct Il2CppCustomAttributeType
     int32_t start;
     int32_t count;
 } Il2CppCustomAttributeTypeRange;
-typedef struct Il2CppRange
+typedef struct Il2CppMetadataRange
 {
     int32_t start;
     int32_t length;
-} Il2CppRange;
+} Il2CppMetadataRange;
+typedef struct Il2CppGenericContainer
+{
+    int32_t ownerIndex;
+    int32_t type_argc;
+    int32_t is_method;
+    GenericParameterIndex genericParameterStart;
+} Il2CppGenericContainer;
+typedef struct Il2CppGenericParameter
+{
+    GenericContainerIndex ownerIndex;
+    StringIndex nameIndex;
+    GenericParameterConstraintIndex constraintsStart;
+    int16_t constraintsCount;
+    uint16_t num;
+    uint16_t flags;
+} Il2CppGenericParameter;
 typedef struct Il2CppWindowsRuntimeTypeNamePair
 {
     StringIndex nameIndex;
@@ -639,6 +532,151 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t exportedTypeDefinitionsCount;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
+       
+struct Il2CppMetadataField
+{
+    uint32_t offset;
+    uint32_t typeIndex;
+    const char* name;
+    uint8_t isStatic;
+};
+enum Il2CppMetadataTypeFlags
+{
+    kNone = 0,
+    kValueType = 1 << 0,
+    kArray = 1 << 1,
+    kArrayRankMask = 0xFFFF0000
+};
+struct Il2CppMetadataType
+{
+    Il2CppMetadataTypeFlags flags;
+    Il2CppMetadataField* fields;
+    uint32_t fieldCount;
+    uint32_t staticsSize;
+    uint8_t* statics;
+    uint32_t baseOrElementTypeIndex;
+    char* name;
+    const char* assemblyName;
+    uint64_t typeInfoAddress;
+    uint32_t size;
+};
+struct Il2CppMetadataSnapshot
+{
+    uint32_t typeCount;
+    Il2CppMetadataType* types;
+};
+struct Il2CppManagedMemorySection
+{
+    uint64_t sectionStartAddress;
+    uint32_t sectionSize;
+    uint8_t* sectionBytes;
+};
+struct Il2CppManagedHeap
+{
+    uint32_t sectionCount;
+    Il2CppManagedMemorySection* sections;
+};
+struct Il2CppStacks
+{
+    uint32_t stackCount;
+    Il2CppManagedMemorySection* stacks;
+};
+struct NativeObject
+{
+    uint32_t gcHandleIndex;
+    uint32_t size;
+    uint32_t instanceId;
+    uint32_t classId;
+    uint32_t referencedNativeObjectIndicesCount;
+    uint32_t* referencedNativeObjectIndices;
+};
+struct Il2CppGCHandles
+{
+    uint32_t trackedObjectCount;
+    uint64_t* pointersToObjects;
+};
+struct Il2CppRuntimeInformation
+{
+    uint32_t pointerSize;
+    uint32_t objectHeaderSize;
+    uint32_t arrayHeaderSize;
+    uint32_t arrayBoundsOffsetInHeader;
+    uint32_t arraySizeOffsetInHeader;
+    uint32_t allocationGranularity;
+};
+struct Il2CppManagedMemorySnapshot
+{
+    Il2CppManagedHeap heap;
+    Il2CppStacks stacks;
+    Il2CppMetadataSnapshot metadata;
+    Il2CppGCHandles gcHandles;
+    Il2CppRuntimeInformation runtimeInformation;
+    void* additionalUserInformation;
+};
+namespace il2cpp
+{
+namespace vm
+{
+namespace MemoryInformation
+{
+    typedef void(*ClassReportFunc)(Il2CppClass* klass, void* context);
+    typedef void(*DataReportFunc)(void* data, void* context);
+    struct IterationContext
+    {
+        DataReportFunc callback;
+        void* userData;
+    };
+    void ReportIL2CppClasses(ClassReportFunc callback, void* context);
+    void ReportGcHeapSection(void* context, void* start, void* end);
+    void ReportGcHandleTarget(Il2CppObject* obj, void* context);
+    Il2CppManagedMemorySnapshot* CaptureManagedMemorySnapshot();
+    void FreeCapturedManagedMemorySnapshot(Il2CppManagedMemorySnapshot* snapshot);
+}
+}
+}
+       
+       
+       
+       
+typedef enum Il2CppTypeEnum
+{
+    IL2CPP_TYPE_END = 0x00,
+    IL2CPP_TYPE_VOID = 0x01,
+    IL2CPP_TYPE_BOOLEAN = 0x02,
+    IL2CPP_TYPE_CHAR = 0x03,
+    IL2CPP_TYPE_I1 = 0x04,
+    IL2CPP_TYPE_U1 = 0x05,
+    IL2CPP_TYPE_I2 = 0x06,
+    IL2CPP_TYPE_U2 = 0x07,
+    IL2CPP_TYPE_I4 = 0x08,
+    IL2CPP_TYPE_U4 = 0x09,
+    IL2CPP_TYPE_I8 = 0x0a,
+    IL2CPP_TYPE_U8 = 0x0b,
+    IL2CPP_TYPE_R4 = 0x0c,
+    IL2CPP_TYPE_R8 = 0x0d,
+    IL2CPP_TYPE_STRING = 0x0e,
+    IL2CPP_TYPE_PTR = 0x0f,
+    IL2CPP_TYPE_BYREF = 0x10,
+    IL2CPP_TYPE_VALUETYPE = 0x11,
+    IL2CPP_TYPE_CLASS = 0x12,
+    IL2CPP_TYPE_VAR = 0x13,
+    IL2CPP_TYPE_ARRAY = 0x14,
+    IL2CPP_TYPE_GENERICINST = 0x15,
+    IL2CPP_TYPE_TYPEDBYREF = 0x16,
+    IL2CPP_TYPE_I = 0x18,
+    IL2CPP_TYPE_U = 0x19,
+    IL2CPP_TYPE_FNPTR = 0x1b,
+    IL2CPP_TYPE_OBJECT = 0x1c,
+    IL2CPP_TYPE_SZARRAY = 0x1d,
+    IL2CPP_TYPE_MVAR = 0x1e,
+    IL2CPP_TYPE_CMOD_REQD = 0x1f,
+    IL2CPP_TYPE_CMOD_OPT = 0x20,
+    IL2CPP_TYPE_INTERNAL = 0x21,
+    IL2CPP_TYPE_MODIFIER = 0x40,
+    IL2CPP_TYPE_SENTINEL = 0x41,
+    IL2CPP_TYPE_PINNED = 0x45,
+    IL2CPP_TYPE_ENUM = 0x55
+} Il2CppTypeEnum;
 struct Il2CppClass;
 struct MethodInfo;
 struct Il2CppType;
@@ -661,25 +699,9 @@ typedef struct Il2CppGenericContext
     const Il2CppGenericInst *class_inst;
     const Il2CppGenericInst *method_inst;
 } Il2CppGenericContext;
-typedef struct Il2CppGenericParameter
-{
-    GenericContainerIndex ownerIndex;
-    StringIndex nameIndex;
-    GenericParameterConstraintIndex constraintsStart;
-    int16_t constraintsCount;
-    uint16_t num;
-    uint16_t flags;
-} Il2CppGenericParameter;
-typedef struct Il2CppGenericContainer
-{
-    int32_t ownerIndex;
-    int32_t type_argc;
-    int32_t is_method;
-    GenericParameterIndex genericParameterStart;
-} Il2CppGenericContainer;
 typedef struct Il2CppGenericClass
 {
-    TypeDefinitionIndex typeDefinitionIndex;
+    const Il2CppType* type;
     Il2CppGenericContext context;
     Il2CppClass *cached_class;
 } Il2CppGenericClass;
@@ -693,10 +715,10 @@ typedef struct Il2CppType
     union
     {
         void* dummy;
-        TypeDefinitionIndex klassIndex;
+        TypeDefinitionIndex __klassIndex;
         const Il2CppType *type;
         Il2CppArrayType *array;
-        GenericParameterIndex genericParameterIndex;
+        GenericParameterIndex __genericParameterIndex;
         Il2CppGenericClass *generic_class;
     } data;
     unsigned int attrs : 16;
@@ -705,6 +727,58 @@ typedef struct Il2CppType
     unsigned int byref : 1;
     unsigned int pinned : 1;
 } Il2CppType;
+typedef struct Il2CppMetadataFieldInfo
+{
+    const Il2CppType* type;
+    const char* name;
+    uint32_t token;
+} Il2CppMetadataFieldInfo;
+typedef struct Il2CppMetadataMethodInfo
+{
+    Il2CppMetadataMethodDefinitionHandle handle;
+    const char* name;
+    const Il2CppType* return_type;
+    uint32_t token;
+    uint16_t flags;
+    uint16_t iflags;
+    uint16_t slot;
+    uint16_t parameterCount;
+} Il2CppMetadataMethodInfo;
+typedef struct Il2CppMetadataParameterInfo
+{
+    const char* name;
+    uint32_t token;
+    const Il2CppType* type;
+} Il2CppMetadataParameterInfo;
+typedef struct Il2CppMetadataPropertyInfo
+{
+    const char* name;
+    const MethodInfo* get;
+    const MethodInfo* set;
+    uint32_t attrs;
+    uint32_t token;
+} Il2CppMetadataPropertyInfo;
+typedef struct Il2CppMetadataEventInfo
+{
+    const char* name;
+    const Il2CppType* type;
+    const MethodInfo* add;
+    const MethodInfo* remove;
+    const MethodInfo* raise;
+    uint32_t token;
+} Il2CppMetadataEventInfo;
+typedef struct Il2CppInterfaceOffsetInfo
+{
+    const Il2CppType* interfaceType;
+    int32_t offset;
+} Il2CppInterfaceOffsetInfo;
+typedef struct Il2CppGenericParameterInfo
+{
+    Il2CppMetadataGenericContainerHandle containerHandle;
+    const char* name;
+    uint16_t num;
+    uint16_t flags;
+} Il2CppGenericParameterInfo;
        
 typedef enum Il2CppCallConvention
 {
@@ -953,7 +1027,7 @@ typedef struct Il2CppAppDomain Il2CppApp
 typedef struct Il2CppAppDomainSetup Il2CppAppDomainSetup;
 typedef struct Il2CppDelegate Il2CppDelegate;
 typedef struct Il2CppAppContext Il2CppAppContext;
-typedef struct Il2CppNameToTypeDefinitionIndexHashTable Il2CppNameToTypeDefinitionIndexHashTable;
+typedef struct Il2CppNameToTypeHandleHashTable Il2CppNameToTypeHandleHashTable;
 typedef struct Il2CppCodeGenModule Il2CppCodeGenModule;
 typedef struct VirtualInvokeData
 {
@@ -1155,12 +1229,12 @@ typedef struct Il2CppSequencePointSource
 } Il2CppSequencePointSourceFile;
 typedef struct Il2CppTypeSourceFilePair
 {
-    TypeDefinitionIndex klassIndex;
+    TypeDefinitionIndex __klassIndex;
     int32_t sourceFileIndex;
 } Il2CppTypeSourceFilePair;
 typedef struct Il2CppSequencePoint
 {
-    MethodIndex methodDefinitionIndex;
+    MethodIndex __methodDefinitionIndex;
     int32_t sourceFileIndex;
     int32_t lineStart, lineEnd;
     int32_t columnStart, columnEnd;
@@ -1171,11 +1245,11 @@ typedef struct Il2CppSequencePoint
 } Il2CppSequencePoint;
 typedef struct Il2CppCatchPoint
 {
-    MethodIndex methodDefinitionIndex;
+    MethodIndex __methodDefinitionIndex;
     TypeIndex catchTypeIndex;
     int32_t ilOffset;
-    int32_t tryId;
-    int32_t parentTryId;
+    int8_t tryId;
+    int8_t parentTryId;
 } Il2CppCatchPoint;
 typedef struct Il2CppDebuggerMetadataRegistration
 {
@@ -1210,12 +1284,12 @@ typedef struct MethodInfo
     union
     {
         const Il2CppRGCTXData* rgctx_data;
-        const Il2CppMethodDefinition* methodDefinition;
+        Il2CppMetadataMethodDefinitionHandle methodMetadataHandle;
     };
     union
     {
         const Il2CppGenericMethod* genericMethod;
-        const Il2CppGenericContainer* genericContainer;
+        Il2CppMetadataGenericContainerHandle genericContainerHandle;
     };
     uint32_t token;
     uint16_t flags;
@@ -1245,7 +1319,7 @@ typedef struct Il2CppClass
     Il2CppClass* declaringType;
     Il2CppClass* parent;
     Il2CppGenericClass *generic_class;
-    const Il2CppTypeDefinition* typeDefinition;
+    Il2CppMetadataTypeHandle typeMetadataHandle;
     const Il2CppInteropData* interopData;
     Il2CppClass* klass;
     FieldInfo* fields;
@@ -1263,7 +1337,7 @@ typedef struct Il2CppClass
     uint32_t cctor_started;
     uint32_t cctor_finished;
     __attribute__((aligned(8))) size_t cctor_thread;
-    GenericContainerIndex genericContainerIndex;
+    Il2CppMetadataGenericContainerHandle genericContainerHandle;
     uint32_t instance_size;
     uint32_t actualSize;
     uint32_t element_size;
@@ -1324,7 +1398,8 @@ typedef struct Il2CppAssemblyName
 {
     const char* name;
     const char* culture;
-    const uint8_t* public_key;
+    const char* hash_value;
+    const char* public_key;
     uint32_t hash_alg;
     int32_t hash_len;
     uint32_t flags;
@@ -1339,14 +1414,11 @@ typedef struct Il2CppImage
     const char* name;
     const char *nameNoExt;
     Il2CppAssembly* assembly;
-    TypeDefinitionIndex typeStart;
     uint32_t typeCount;
-    TypeDefinitionIndex exportedTypeStart;
     uint32_t exportedTypeCount;
-    CustomAttributeIndex customAttributeStart;
     uint32_t customAttributeCount;
-    MethodIndex entryPointIndex;
-    Il2CppNameToTypeDefinitionIndexHashTable * nameToClassHashTable;
+    Il2CppMetadataImageHandle metadataHandle;
+    Il2CppNameToTypeHandleHashTable * nameToClassHashTable;
     const Il2CppCodeGenModule* codeGenModule;
     uint32_t token;
     uint8_t dynamic;
@@ -1362,13 +1434,12 @@ typedef struct Il2CppAssembly
 typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
-    int maximumRuntimeGenericDepth;
 } Il2CppCodeGenOptions;
-typedef struct Il2CppTokenIndexPair
+typedef struct Il2CppRange
 {
-    uint32_t token;
-    int32_t index;
-} Il2CppTokenIndexPair;
+    int32_t start;
+    int32_t length;
+} Il2CppRange;
 typedef struct Il2CppTokenRangePair
 {
     uint32_t token;
@@ -1379,7 +1450,7 @@ typedef struct Il2CppTokenIndexMethodTup
     uint32_t token;
     int32_t index;
     void** method;
-    uint32_t genericMethodIndex;
+    uint32_t __genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
 typedef struct Il2CppWindowsRuntimeFactoryTableEntry
 {
@@ -1399,6 +1470,8 @@ typedef struct Il2CppCodeGenModule
     const uint32_t rgctxsCount;
     const Il2CppRGCTXDefinition* rgctxs;
     const Il2CppDebuggerMetadataRegistration *debuggerMetadata;
+    const CustomAttributesCacheGenerator* customAttributeCacheGenerator;
+    const Il2CppMethodPointer moduleInitializer;
 } Il2CppCodeGenModule;
 typedef struct Il2CppCodeRegistration
 {
@@ -1408,8 +1481,6 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* genericMethodPointers;
     uint32_t invokerPointersCount;
     const InvokerMethod* invokerPointers;
-    CustomAttributeIndex customAttributeCount;
-    const CustomAttributesCacheGenerator* customAttributeGenerators;
     uint32_t unresolvedVirtualCallCount;
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
     uint32_t interopDataCount;
--- 2020/2020.2.0a7/struct.h
+++ 2020/2020.2.0a8/struct.h
@@ -288,7 +288,6 @@ typedef struct Il2CppTypeDefinition
     StringIndex nameIndex;
     StringIndex namespaceIndex;
     TypeIndex byvalTypeIndex;
-    TypeIndex byrefTypeIndex;
     TypeIndex declaringTypeIndex;
     TypeIndex parentIndex;
     TypeIndex elementTypeIndex;
--- 2020/2020.2.0a11/struct.h
+++ 2020/2020.2.0a12/struct.h
@@ -1471,6 +1471,7 @@ typedef struct Il2CppCodeGenModule
     const Il2CppDebuggerMetadataRegistration *debuggerMetadata;
     const CustomAttributesCacheGenerator* customAttributeCacheGenerator;
     const Il2CppMethodPointer moduleInitializer;
+    TypeDefinitionIndex* staticConstructorTypeIndices;
 } Il2CppCodeGenModule;
 typedef struct Il2CppCodeRegistration
 {
--- 2020/2020.2.0a12/struct.h
+++ 2020/2020.2.0a13/struct.h
@@ -527,6 +527,8 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t unresolvedVirtualCallParameterRangesCount;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
+    int32_t windowsRuntimeStringsOffset;
+    int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
     int32_t exportedTypeDefinitionsCount;
 } Il2CppGlobalMetadataHeader;
@@ -715,9 +717,11 @@ typedef struct Il2CppType
     {
         void* dummy;
         TypeDefinitionIndex __klassIndex;
+        Il2CppMetadataTypeHandle typeHandle;
         const Il2CppType *type;
         Il2CppArrayType *array;
         GenericParameterIndex __genericParameterIndex;
+        Il2CppMetadataGenericParameterHandle genericParameterHandle;
         Il2CppGenericClass *generic_class;
     } data;
     unsigned int attrs : 16;
@@ -1019,6 +1023,9 @@ typedef struct Il2CppInteropData
     const Il2CppGuid* guid;
     const Il2CppType* type;
 } Il2CppInteropData;
+struct Il2CppCodeGenModule;
+struct Il2CppMetadataRegistration;
+struct Il2CppCodeRegistration;
 typedef struct Il2CppClass Il2CppClass;
 typedef struct Il2CppGuid Il2CppGuid;
 typedef struct Il2CppImage Il2CppImage;
@@ -1028,6 +1035,8 @@ typedef struct Il2CppDelegate Il2CppDele
 typedef struct Il2CppAppContext Il2CppAppContext;
 typedef struct Il2CppNameToTypeHandleHashTable Il2CppNameToTypeHandleHashTable;
 typedef struct Il2CppCodeGenModule Il2CppCodeGenModule;
+typedef struct Il2CppMetadataRegistration Il2CppMetadataRegistration;
+typedef struct Il2CppCodeRegistration Il2CppCodeRegistration;
 typedef struct VirtualInvokeData
 {
     Il2CppMethodPointer methodPtr;
@@ -1472,6 +1481,8 @@ typedef struct Il2CppCodeGenModule
     const CustomAttributesCacheGenerator* customAttributeCacheGenerator;
     const Il2CppMethodPointer moduleInitializer;
     TypeDefinitionIndex* staticConstructorTypeIndices;
+    const Il2CppMetadataRegistration* metadataRegistration;
+    const Il2CppCodeRegistration* codeRegistaration;
 } Il2CppCodeGenModule;
 typedef struct Il2CppCodeRegistration
 {
--- 2020/2020.2.0a13/struct.h
+++ 2020/2020.2.0a15/struct.h
@@ -418,16 +418,6 @@ typedef struct Il2CppAssemblyDefinition
     int32_t referencedAssemblyCount;
     Il2CppAssemblyNameDefinition aname;
 } Il2CppAssemblyDefinition;
-typedef struct Il2CppMetadataUsageList
-{
-    uint32_t start;
-    uint32_t count;
-} Il2CppMetadataUsageList;
-typedef struct Il2CppMetadataUsagePair
-{
-    uint32_t destinationIndex;
-    uint32_t encodedSourceIndex;
-} Il2CppMetadataUsagePair;
 typedef struct Il2CppCustomAttributeTypeRange
 {
     uint32_t token;
@@ -509,10 +499,6 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t imagesCount;
     int32_t assembliesOffset;
     int32_t assembliesCount;
-    int32_t metadataUsageListsOffset;
-    int32_t metadataUsageListsCount;
-    int32_t metadataUsagePairsOffset;
-    int32_t metadataUsagePairsCount;
     int32_t fieldRefsOffset;
     int32_t fieldRefsCount;
     int32_t referencedAssembliesOffset;
--- 2020/2020.2.0a16/struct.h
+++ 2020/2020.2.0a17/struct.h
@@ -64,6 +64,12 @@ typedef enum
 } Il2CppGCEvent;
 typedef enum
 {
+    IL2CPP_GC_MODE_DISABLED = 0,
+    IL2CPP_GC_MODE_ENABLED = 1,
+    IL2CPP_GC_MODE_MANUAL = 2
+} Il2CppGCMode;
+typedef enum
+{
     IL2CPP_STAT_NEW_OBJECT_COUNT,
     IL2CPP_STAT_INITIALIZED_CLASS_COUNT,
     IL2CPP_STAT_METHOD_COUNT,
--- 2020/2020.2.0a19/struct.h
+++ 2020/2020.2.0a21/struct.h
@@ -1248,8 +1248,8 @@ typedef struct Il2CppCatchPoint
     MethodIndex __methodDefinitionIndex;
     TypeIndex catchTypeIndex;
     int32_t ilOffset;
-    int8_t tryId;
-    int8_t parentTryId;
+    int32_t tryId;
+    int32_t parentTryId;
 } Il2CppCatchPoint;
 typedef struct Il2CppDebuggerMetadataRegistration
 {
--- 2020/2020.2.0b6/struct.h
+++ 2020/2020.2.0b7/struct.h
@@ -392,7 +392,6 @@ typedef struct Il2CppAssemblyNameDefinit
 {
     StringIndex nameIndex;
     StringIndex cultureIndex;
-    StringIndex hashValueIndex;
     StringIndex publicKeyIndex;
     uint32_t hash_alg;
     int32_t hash_len;
@@ -1398,8 +1397,7 @@ typedef struct Il2CppAssemblyName
 {
     const char* name;
     const char* culture;
-    const char* hash_value;
-    const char* public_key;
+    const uint8_t* public_key;
     uint32_t hash_alg;
     int32_t hash_len;
     uint32_t flags;
@@ -1434,6 +1432,7 @@ typedef struct Il2CppAssembly
 typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
+    int maximumRuntimeGenericDepth;
 } Il2CppCodeGenOptions;
 typedef struct Il2CppRange
 {
--- 2020/2020.2.3f1/struct.h
+++ 2020/2020.2.4f1/struct.h
@@ -253,6 +253,7 @@ typedef struct
 {
     MethodIndex methodIndex;
     MethodIndex invokerIndex;
+    MethodIndex adjustorThunkIndex;
 } Il2CppGenericMethodIndices;
 typedef struct Il2CppGenericMethodFunctionsDefinitions
 {
@@ -1451,6 +1452,11 @@ typedef struct Il2CppTokenIndexMethodTup
     void** method;
     uint32_t __genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
+typedef struct Il2CppTokenAdjustorThunkPair
+{
+    uint32_t token;
+    Il2CppMethodPointer adjustorThunk;
+} Il2CppTokenAdjustorThunkPair;
 typedef struct Il2CppWindowsRuntimeFactoryTableEntry
 {
     const Il2CppType* type;
@@ -1461,6 +1467,8 @@ typedef struct Il2CppCodeGenModule
     const char* moduleName;
     const uint32_t methodPointerCount;
     const Il2CppMethodPointer* methodPointers;
+    const uint32_t adjustorThunkCount;
+    const Il2CppTokenAdjustorThunkPair* adjustorThunks;
     const int32_t* invokerIndices;
     const uint32_t reversePInvokeWrapperCount;
     const Il2CppTokenIndexMethodTuple* reversePInvokeWrapperIndices;
@@ -1481,6 +1489,7 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* reversePInvokeWrappers;
     uint32_t genericMethodPointersCount;
     const Il2CppMethodPointer* genericMethodPointers;
+    const Il2CppMethodPointer* genericAdjustorThunks;
     uint32_t invokerPointersCount;
     const InvokerMethod* invokerPointers;
     uint32_t unresolvedVirtualCallCount;
--- 2020/2020.3.15f2/struct.h
+++ 2020/2020.3.16f1/struct.h
@@ -1290,6 +1290,7 @@ typedef struct MethodInfo
     {
         const Il2CppGenericMethod* genericMethod;
         Il2CppMetadataGenericContainerHandle genericContainerHandle;
+        Il2CppMethodPointer nativeFunction;
     };
     uint32_t token;
     uint16_t flags;
--- 2020/2020.3.19f1/struct.h
+++ 2020/2020.3.20f1/struct.h
@@ -1369,6 +1369,7 @@ typedef struct Il2CppClass
     uint8_t is_generic : 1;
     uint8_t has_references : 1;
     uint8_t init_pending : 1;
+    uint8_t size_init_pending : 1;
     uint8_t size_inited : 1;
     uint8_t has_finalize : 1;
     uint8_t has_cctor : 1;
--- 2020/2020.3.21f1/struct.h
+++ 2020/2020.3.22f1/struct.h
@@ -462,67 +462,67 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t sanity;
     int32_t version;
     int32_t stringLiteralOffset;
-    int32_t stringLiteralCount;
+    int32_t stringLiteralSize;
     int32_t stringLiteralDataOffset;
-    int32_t stringLiteralDataCount;
+    int32_t stringLiteralDataSize;
     int32_t stringOffset;
-    int32_t stringCount;
+    int32_t stringSize;
     int32_t eventsOffset;
-    int32_t eventsCount;
+    int32_t eventsSize;
     int32_t propertiesOffset;
-    int32_t propertiesCount;
+    int32_t propertiesSize;
     int32_t methodsOffset;
-    int32_t methodsCount;
+    int32_t methodsSize;
     int32_t parameterDefaultValuesOffset;
-    int32_t parameterDefaultValuesCount;
+    int32_t parameterDefaultValuesSize;
     int32_t fieldDefaultValuesOffset;
-    int32_t fieldDefaultValuesCount;
+    int32_t fieldDefaultValuesSize;
     int32_t fieldAndParameterDefaultValueDataOffset;
-    int32_t fieldAndParameterDefaultValueDataCount;
+    int32_t fieldAndParameterDefaultValueDataSize;
     int32_t fieldMarshaledSizesOffset;
-    int32_t fieldMarshaledSizesCount;
+    int32_t fieldMarshaledSizesSize;
     int32_t parametersOffset;
-    int32_t parametersCount;
+    int32_t parametersSize;
     int32_t fieldsOffset;
-    int32_t fieldsCount;
+    int32_t fieldsSize;
     int32_t genericParametersOffset;
-    int32_t genericParametersCount;
+    int32_t genericParametersSize;
     int32_t genericParameterConstraintsOffset;
-    int32_t genericParameterConstraintsCount;
+    int32_t genericParameterConstraintsSize;
     int32_t genericContainersOffset;
-    int32_t genericContainersCount;
+    int32_t genericContainersSize;
     int32_t nestedTypesOffset;
-    int32_t nestedTypesCount;
+    int32_t nestedTypesSize;
     int32_t interfacesOffset;
-    int32_t interfacesCount;
+    int32_t interfacesSize;
     int32_t vtableMethodsOffset;
-    int32_t vtableMethodsCount;
+    int32_t vtableMethodsSize;
     int32_t interfaceOffsetsOffset;
-    int32_t interfaceOffsetsCount;
+    int32_t interfaceOffsetsSize;
     int32_t typeDefinitionsOffset;
-    int32_t typeDefinitionsCount;
+    int32_t typeDefinitionsSize;
     int32_t imagesOffset;
-    int32_t imagesCount;
+    int32_t imagesSize;
     int32_t assembliesOffset;
-    int32_t assembliesCount;
+    int32_t assembliesSize;
     int32_t fieldRefsOffset;
-    int32_t fieldRefsCount;
+    int32_t fieldRefsSize;
     int32_t referencedAssembliesOffset;
-    int32_t referencedAssembliesCount;
+    int32_t referencedAssembliesSize;
     int32_t attributesInfoOffset;
-    int32_t attributesInfoCount;
+    int32_t attributesInfoSize;
     int32_t attributeTypesOffset;
-    int32_t attributeTypesCount;
+    int32_t attributeTypesSize;
     int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesCount;
+    int32_t unresolvedVirtualCallParameterTypesSize;
     int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesCount;
+    int32_t unresolvedVirtualCallParameterRangesSize;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
     int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
-    int32_t exportedTypeDefinitionsCount;
+    int32_t exportedTypeDefinitionsSize;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
        
--- 2020/2020.3.48f1/struct.h
+++ 2021/2021.1.0a2/struct.h
@@ -88,6 +88,9 @@ typedef struct Il2CppStackFrameInfo
 {
     const MethodInfo *method;
     uintptr_t raw_ip;
+    int sourceCodeLineNumber;
+    int ilOffset;
+    const char* filePath;
 } Il2CppStackFrameInfo;
 typedef void(*Il2CppMethodPointer)();
 typedef struct Il2CppMethodDebugInfo
@@ -247,13 +250,12 @@ typedef union Il2CppRGCTXDefinitionData
 typedef struct Il2CppRGCTXDefinition
 {
     Il2CppRGCTXDataType type;
-    Il2CppRGCTXDefinitionData data;
+    const Il2CppRGCTXDefinitionData* data;
 } Il2CppRGCTXDefinition;
 typedef struct
 {
     MethodIndex methodIndex;
     MethodIndex invokerIndex;
-    MethodIndex adjustorThunkIndex;
 } Il2CppGenericMethodIndices;
 typedef struct Il2CppGenericMethodFunctionsDefinitions
 {
@@ -462,67 +464,67 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t sanity;
     int32_t version;
     int32_t stringLiteralOffset;
-    int32_t stringLiteralSize;
+    int32_t stringLiteralCount;
     int32_t stringLiteralDataOffset;
-    int32_t stringLiteralDataSize;
+    int32_t stringLiteralDataCount;
     int32_t stringOffset;
-    int32_t stringSize;
+    int32_t stringCount;
     int32_t eventsOffset;
-    int32_t eventsSize;
+    int32_t eventsCount;
     int32_t propertiesOffset;
-    int32_t propertiesSize;
+    int32_t propertiesCount;
     int32_t methodsOffset;
-    int32_t methodsSize;
+    int32_t methodsCount;
     int32_t parameterDefaultValuesOffset;
-    int32_t parameterDefaultValuesSize;
+    int32_t parameterDefaultValuesCount;
     int32_t fieldDefaultValuesOffset;
-    int32_t fieldDefaultValuesSize;
+    int32_t fieldDefaultValuesCount;
     int32_t fieldAndParameterDefaultValueDataOffset;
-    int32_t fieldAndParameterDefaultValueDataSize;
+    int32_t fieldAndParameterDefaultValueDataCount;
     int32_t fieldMarshaledSizesOffset;
-    int32_t fieldMarshaledSizesSize;
+    int32_t fieldMarshaledSizesCount;
     int32_t parametersOffset;
-    int32_t parametersSize;
+    int32_t parametersCount;
     int32_t fieldsOffset;
-    int32_t fieldsSize;
+    int32_t fieldsCount;
     int32_t genericParametersOffset;
-    int32_t genericParametersSize;
+    int32_t genericParametersCount;
     int32_t genericParameterConstraintsOffset;
-    int32_t genericParameterConstraintsSize;
+    int32_t genericParameterConstraintsCount;
     int32_t genericContainersOffset;
-    int32_t genericContainersSize;
+    int32_t genericContainersCount;
     int32_t nestedTypesOffset;
-    int32_t nestedTypesSize;
+    int32_t nestedTypesCount;
     int32_t interfacesOffset;
-    int32_t interfacesSize;
+    int32_t interfacesCount;
     int32_t vtableMethodsOffset;
-    int32_t vtableMethodsSize;
+    int32_t vtableMethodsCount;
     int32_t interfaceOffsetsOffset;
-    int32_t interfaceOffsetsSize;
+    int32_t interfaceOffsetsCount;
     int32_t typeDefinitionsOffset;
-    int32_t typeDefinitionsSize;
+    int32_t typeDefinitionsCount;
     int32_t imagesOffset;
-    int32_t imagesSize;
+    int32_t imagesCount;
     int32_t assembliesOffset;
-    int32_t assembliesSize;
+    int32_t assembliesCount;
     int32_t fieldRefsOffset;
-    int32_t fieldRefsSize;
+    int32_t fieldRefsCount;
     int32_t referencedAssembliesOffset;
-    int32_t referencedAssembliesSize;
+    int32_t referencedAssembliesCount;
     int32_t attributesInfoOffset;
-    int32_t attributesInfoSize;
+    int32_t attributesInfoCount;
     int32_t attributeTypesOffset;
-    int32_t attributeTypesSize;
+    int32_t attributeTypesCount;
     int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesSize;
+    int32_t unresolvedVirtualCallParameterTypesCount;
     int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesSize;
+    int32_t unresolvedVirtualCallParameterRangesCount;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
     int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
-    int32_t exportedTypeDefinitionsSize;
+    int32_t exportedTypeDefinitionsCount;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
        
@@ -718,9 +720,10 @@ typedef struct Il2CppType
     } data;
     unsigned int attrs : 16;
     Il2CppTypeEnum type : 8;
-    unsigned int num_mods : 6;
+    unsigned int num_mods : 5;
     unsigned int byref : 1;
     unsigned int pinned : 1;
+    unsigned int valuetype : 1;
 } Il2CppType;
 typedef struct Il2CppMetadataFieldInfo
 {
@@ -1188,7 +1191,7 @@ typedef struct ParameterInfo
     uint32_t token;
     const Il2CppType* parameter_type;
 } ParameterInfo;
-typedef void* (*InvokerMethod)(Il2CppMethodPointer, const MethodInfo*, void*, void**);
+typedef void (*InvokerMethod)(Il2CppMethodPointer, const MethodInfo*, void*, void**, void*);
 typedef enum MethodVariableKind
 {
     kMethodVariableKind_This,
@@ -1290,7 +1293,6 @@ typedef struct MethodInfo
     {
         const Il2CppGenericMethod* genericMethod;
         Il2CppMetadataGenericContainerHandle genericContainerHandle;
-        Il2CppMethodPointer nativeFunction;
     };
     uint32_t token;
     uint16_t flags;
@@ -1363,13 +1365,11 @@ typedef struct Il2CppClass
     uint8_t naturalAligment;
     uint8_t packingSize;
     uint8_t initialized_and_no_error : 1;
-    uint8_t valuetype : 1;
     uint8_t initialized : 1;
     uint8_t enumtype : 1;
     uint8_t is_generic : 1;
     uint8_t has_references : 1;
     uint8_t init_pending : 1;
-    uint8_t size_init_pending : 1;
     uint8_t size_inited : 1;
     uint8_t has_finalize : 1;
     uint8_t has_cctor : 1;
@@ -1454,11 +1454,6 @@ typedef struct Il2CppTokenIndexMethodTup
     void** method;
     uint32_t __genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
-typedef struct Il2CppTokenAdjustorThunkPair
-{
-    uint32_t token;
-    Il2CppMethodPointer adjustorThunk;
-} Il2CppTokenAdjustorThunkPair;
 typedef struct Il2CppWindowsRuntimeFactoryTableEntry
 {
     const Il2CppType* type;
@@ -1469,8 +1464,6 @@ typedef struct Il2CppCodeGenModule
     const char* moduleName;
     const uint32_t methodPointerCount;
     const Il2CppMethodPointer* methodPointers;
-    const uint32_t adjustorThunkCount;
-    const Il2CppTokenAdjustorThunkPair* adjustorThunks;
     const int32_t* invokerIndices;
     const uint32_t reversePInvokeWrapperCount;
     const Il2CppTokenIndexMethodTuple* reversePInvokeWrapperIndices;
@@ -1491,7 +1484,6 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* reversePInvokeWrappers;
     uint32_t genericMethodPointersCount;
     const Il2CppMethodPointer* genericMethodPointers;
-    const Il2CppMethodPointer* genericAdjustorThunks;
     uint32_t invokerPointersCount;
     const InvokerMethod* invokerPointers;
     uint32_t unresolvedVirtualCallCount;
--- 2021/2021.1.0b4/struct.h
+++ 2021/2021.1.0b5/struct.h
@@ -256,6 +256,7 @@ typedef struct
 {
     MethodIndex methodIndex;
     MethodIndex invokerIndex;
+    MethodIndex adjustorThunkIndex;
 } Il2CppGenericMethodIndices;
 typedef struct Il2CppGenericMethodFunctionsDefinitions
 {
@@ -1454,6 +1455,11 @@ typedef struct Il2CppTokenIndexMethodTup
     void** method;
     uint32_t __genericMethodIndex;
 } Il2CppTokenIndexMethodTuple;
+typedef struct Il2CppTokenAdjustorThunkPair
+{
+    uint32_t token;
+    Il2CppMethodPointer adjustorThunk;
+} Il2CppTokenAdjustorThunkPair;
 typedef struct Il2CppWindowsRuntimeFactoryTableEntry
 {
     const Il2CppType* type;
@@ -1464,6 +1470,8 @@ typedef struct Il2CppCodeGenModule
     const char* moduleName;
     const uint32_t methodPointerCount;
     const Il2CppMethodPointer* methodPointers;
+    const uint32_t adjustorThunkCount;
+    const Il2CppTokenAdjustorThunkPair* adjustorThunks;
     const int32_t* invokerIndices;
     const uint32_t reversePInvokeWrapperCount;
     const Il2CppTokenIndexMethodTuple* reversePInvokeWrapperIndices;
@@ -1484,6 +1492,7 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* reversePInvokeWrappers;
     uint32_t genericMethodPointersCount;
     const Il2CppMethodPointer* genericMethodPointers;
+    const Il2CppMethodPointer* genericAdjustorThunks;
     uint32_t invokerPointersCount;
     const InvokerMethod* invokerPointers;
     uint32_t unresolvedVirtualCallCount;
--- 2021/2021.1.14f1/struct.h
+++ 2021/2021.1.15f1/struct.h
@@ -1294,6 +1294,7 @@ typedef struct MethodInfo
     {
         const Il2CppGenericMethod* genericMethod;
         Il2CppMetadataGenericContainerHandle genericContainerHandle;
+        Il2CppMethodPointer nativeFunction;
     };
     uint32_t token;
     uint16_t flags;
--- 2021/2021.1.23f1/struct.h
+++ 2021/2021.1.24f1/struct.h
@@ -1372,6 +1372,7 @@ typedef struct Il2CppClass
     uint8_t is_generic : 1;
     uint8_t has_references : 1;
     uint8_t init_pending : 1;
+    uint8_t size_init_pending : 1;
     uint8_t size_inited : 1;
     uint8_t has_finalize : 1;
     uint8_t has_cctor : 1;
--- 2021/2021.1.27f1/struct.h
+++ 2021/2021.1.28f1/struct.h
@@ -465,67 +465,67 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t sanity;
     int32_t version;
     int32_t stringLiteralOffset;
-    int32_t stringLiteralCount;
+    int32_t stringLiteralSize;
     int32_t stringLiteralDataOffset;
-    int32_t stringLiteralDataCount;
+    int32_t stringLiteralDataSize;
     int32_t stringOffset;
-    int32_t stringCount;
+    int32_t stringSize;
     int32_t eventsOffset;
-    int32_t eventsCount;
+    int32_t eventsSize;
     int32_t propertiesOffset;
-    int32_t propertiesCount;
+    int32_t propertiesSize;
     int32_t methodsOffset;
-    int32_t methodsCount;
+    int32_t methodsSize;
     int32_t parameterDefaultValuesOffset;
-    int32_t parameterDefaultValuesCount;
+    int32_t parameterDefaultValuesSize;
     int32_t fieldDefaultValuesOffset;
-    int32_t fieldDefaultValuesCount;
+    int32_t fieldDefaultValuesSize;
     int32_t fieldAndParameterDefaultValueDataOffset;
-    int32_t fieldAndParameterDefaultValueDataCount;
+    int32_t fieldAndParameterDefaultValueDataSize;
     int32_t fieldMarshaledSizesOffset;
-    int32_t fieldMarshaledSizesCount;
+    int32_t fieldMarshaledSizesSize;
     int32_t parametersOffset;
-    int32_t parametersCount;
+    int32_t parametersSize;
     int32_t fieldsOffset;
-    int32_t fieldsCount;
+    int32_t fieldsSize;
     int32_t genericParametersOffset;
-    int32_t genericParametersCount;
+    int32_t genericParametersSize;
     int32_t genericParameterConstraintsOffset;
-    int32_t genericParameterConstraintsCount;
+    int32_t genericParameterConstraintsSize;
     int32_t genericContainersOffset;
-    int32_t genericContainersCount;
+    int32_t genericContainersSize;
     int32_t nestedTypesOffset;
-    int32_t nestedTypesCount;
+    int32_t nestedTypesSize;
     int32_t interfacesOffset;
-    int32_t interfacesCount;
+    int32_t interfacesSize;
     int32_t vtableMethodsOffset;
-    int32_t vtableMethodsCount;
+    int32_t vtableMethodsSize;
     int32_t interfaceOffsetsOffset;
-    int32_t interfaceOffsetsCount;
+    int32_t interfaceOffsetsSize;
     int32_t typeDefinitionsOffset;
-    int32_t typeDefinitionsCount;
+    int32_t typeDefinitionsSize;
     int32_t imagesOffset;
-    int32_t imagesCount;
+    int32_t imagesSize;
     int32_t assembliesOffset;
-    int32_t assembliesCount;
+    int32_t assembliesSize;
     int32_t fieldRefsOffset;
-    int32_t fieldRefsCount;
+    int32_t fieldRefsSize;
     int32_t referencedAssembliesOffset;
-    int32_t referencedAssembliesCount;
+    int32_t referencedAssembliesSize;
     int32_t attributesInfoOffset;
-    int32_t attributesInfoCount;
+    int32_t attributesInfoSize;
     int32_t attributeTypesOffset;
-    int32_t attributeTypesCount;
+    int32_t attributeTypesSize;
     int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesCount;
+    int32_t unresolvedVirtualCallParameterTypesSize;
     int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesCount;
+    int32_t unresolvedVirtualCallParameterRangesSize;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
     int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
-    int32_t exportedTypeDefinitionsCount;
+    int32_t exportedTypeDefinitionsSize;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
        
--- 2021/2021.1.28f1/struct.h
+++ 2021/2021.2.0a5/struct.h
@@ -240,6 +240,7 @@ typedef enum Il2CppRGCTXDataType
     IL2CPP_RGCTX_DATA_CLASS,
     IL2CPP_RGCTX_DATA_METHOD,
     IL2CPP_RGCTX_DATA_ARRAY,
+    IL2CPP_RGCTX_DATA_CONSTRAINED,
 } Il2CppRGCTXDataType;
 typedef union Il2CppRGCTXDefinitionData
 {
@@ -247,10 +248,15 @@ typedef union Il2CppRGCTXDefinitionData
     MethodIndex __methodIndex;
     TypeIndex __typeIndex;
 } Il2CppRGCTXDefinitionData;
+typedef struct Il2CppRGCTXConstrainedData
+{
+    TypeIndex __typeIndex;
+    uint32_t __encodedMethodIndex;
+} Il2CppRGCTXConstrainedData;
 typedef struct Il2CppRGCTXDefinition
 {
     Il2CppRGCTXDataType type;
-    const Il2CppRGCTXDefinitionData* data;
+    const void* data;
 } Il2CppRGCTXDefinition;
 typedef struct
 {
@@ -465,67 +471,67 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t sanity;
     int32_t version;
     int32_t stringLiteralOffset;
-    int32_t stringLiteralSize;
+    int32_t stringLiteralCount;
     int32_t stringLiteralDataOffset;
-    int32_t stringLiteralDataSize;
+    int32_t stringLiteralDataCount;
     int32_t stringOffset;
-    int32_t stringSize;
+    int32_t stringCount;
     int32_t eventsOffset;
-    int32_t eventsSize;
+    int32_t eventsCount;
     int32_t propertiesOffset;
-    int32_t propertiesSize;
+    int32_t propertiesCount;
     int32_t methodsOffset;
-    int32_t methodsSize;
+    int32_t methodsCount;
     int32_t parameterDefaultValuesOffset;
-    int32_t parameterDefaultValuesSize;
+    int32_t parameterDefaultValuesCount;
     int32_t fieldDefaultValuesOffset;
-    int32_t fieldDefaultValuesSize;
+    int32_t fieldDefaultValuesCount;
     int32_t fieldAndParameterDefaultValueDataOffset;
-    int32_t fieldAndParameterDefaultValueDataSize;
+    int32_t fieldAndParameterDefaultValueDataCount;
     int32_t fieldMarshaledSizesOffset;
-    int32_t fieldMarshaledSizesSize;
+    int32_t fieldMarshaledSizesCount;
     int32_t parametersOffset;
-    int32_t parametersSize;
+    int32_t parametersCount;
     int32_t fieldsOffset;
-    int32_t fieldsSize;
+    int32_t fieldsCount;
     int32_t genericParametersOffset;
-    int32_t genericParametersSize;
+    int32_t genericParametersCount;
     int32_t genericParameterConstraintsOffset;
-    int32_t genericParameterConstraintsSize;
+    int32_t genericParameterConstraintsCount;
     int32_t genericContainersOffset;
-    int32_t genericContainersSize;
+    int32_t genericContainersCount;
     int32_t nestedTypesOffset;
-    int32_t nestedTypesSize;
+    int32_t nestedTypesCount;
     int32_t interfacesOffset;
-    int32_t interfacesSize;
+    int32_t interfacesCount;
     int32_t vtableMethodsOffset;
-    int32_t vtableMethodsSize;
+    int32_t vtableMethodsCount;
     int32_t interfaceOffsetsOffset;
-    int32_t interfaceOffsetsSize;
+    int32_t interfaceOffsetsCount;
     int32_t typeDefinitionsOffset;
-    int32_t typeDefinitionsSize;
+    int32_t typeDefinitionsCount;
     int32_t imagesOffset;
-    int32_t imagesSize;
+    int32_t imagesCount;
     int32_t assembliesOffset;
-    int32_t assembliesSize;
+    int32_t assembliesCount;
     int32_t fieldRefsOffset;
-    int32_t fieldRefsSize;
+    int32_t fieldRefsCount;
     int32_t referencedAssembliesOffset;
-    int32_t referencedAssembliesSize;
+    int32_t referencedAssembliesCount;
     int32_t attributesInfoOffset;
-    int32_t attributesInfoSize;
+    int32_t attributesInfoCount;
     int32_t attributeTypesOffset;
-    int32_t attributeTypesSize;
+    int32_t attributeTypesCount;
     int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesSize;
+    int32_t unresolvedVirtualCallParameterTypesCount;
     int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesSize;
+    int32_t unresolvedVirtualCallParameterRangesCount;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
     int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
-    int32_t exportedTypeDefinitionsSize;
+    int32_t exportedTypeDefinitionsCount;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
        
@@ -1145,6 +1151,7 @@ typedef struct Il2CppDefaults
     Il2CppClass* uint16_shared_enum;
     Il2CppClass* uint32_shared_enum;
     Il2CppClass* uint64_shared_enum;
+    Il2CppClass* il2cpp_fully_shared_type;
 } Il2CppDefaults;
 extern Il2CppDefaults il2cpp_defaults;
 struct Il2CppClass;
@@ -1185,13 +1192,6 @@ typedef struct EventInfo
     const MethodInfo* raise;
     uint32_t token;
 } EventInfo;
-typedef struct ParameterInfo
-{
-    const char* name;
-    int32_t position;
-    uint32_t token;
-    const Il2CppType* parameter_type;
-} ParameterInfo;
 typedef void (*InvokerMethod)(Il2CppMethodPointer, const MethodInfo*, void*, void**, void*);
 typedef enum MethodVariableKind
 {
@@ -1280,11 +1280,12 @@ typedef union Il2CppRGCTXData
 typedef struct MethodInfo
 {
     Il2CppMethodPointer methodPointer;
+    Il2CppMethodPointer virtualMethodPointer;
     InvokerMethod invoker_method;
     const char* name;
     Il2CppClass *klass;
     const Il2CppType *return_type;
-    const ParameterInfo* parameters;
+    const Il2CppType** parameters;
     union
     {
         const Il2CppRGCTXData* rgctx_data;
@@ -1294,7 +1295,6 @@ typedef struct MethodInfo
     {
         const Il2CppGenericMethod* genericMethod;
         Il2CppMetadataGenericContainerHandle genericContainerHandle;
-        Il2CppMethodPointer nativeFunction;
     };
     uint32_t token;
     uint16_t flags;
@@ -1369,10 +1369,10 @@ typedef struct Il2CppClass
     uint8_t initialized_and_no_error : 1;
     uint8_t initialized : 1;
     uint8_t enumtype : 1;
+    uint8_t nullabletype : 1;
     uint8_t is_generic : 1;
     uint8_t has_references : 1;
     uint8_t init_pending : 1;
-    uint8_t size_init_pending : 1;
     uint8_t size_inited : 1;
     uint8_t has_finalize : 1;
     uint8_t has_cctor : 1;
@@ -1968,6 +1968,8 @@ typedef struct Il2CppMarshalByRefObject
     Il2CppObject obj;
     Il2CppObject *identity;
 } Il2CppMarshalByRefObject;
+typedef void* Il2CppFullySharedGenericAny;
+typedef void* Il2CppFullySharedGenericStruct;
 typedef struct Il2CppAppDomain
 {
     Il2CppMarshalByRefObject mbr;
--- 2021/2021.2.0a11/struct.h
+++ 2021/2021.2.0a12/struct.h
@@ -1340,7 +1340,7 @@ typedef struct Il2CppClass
     void *unity_user_data;
     uint32_t initializationExceptionGCHandle;
     uint32_t cctor_started;
-    uint32_t cctor_finished;
+    uint32_t cctor_finished_or_no_cctor;
     __attribute__((aligned(8))) size_t cctor_thread;
     Il2CppMetadataGenericContainerHandle genericContainerHandle;
     uint32_t instance_size;
@@ -1379,7 +1379,6 @@ typedef struct Il2CppClass
     uint8_t is_blittable : 1;
     uint8_t is_import_or_windows_runtime : 1;
     uint8_t is_vtable_initialized : 1;
-    uint8_t has_initialization_error : 1;
     VirtualInvokeData vtable[0];
 } Il2CppClass;
 typedef struct Il2CppTypeDefinitionSizes
--- 2021/2021.2.0a14/struct.h
+++ 2021/2021.2.0a15/struct.h
@@ -122,7 +122,7 @@ typedef struct
 typedef uint16_t Il2CppChar;
 typedef char Il2CppNativeChar;
 typedef void (*il2cpp_register_object_callback)(Il2CppObject** arr, int size, void* userdata);
-typedef void (*il2cpp_WorldChangedCallback)();
+typedef void* (*il2cpp_liveness_reallocate_callback)(void* ptr, size_t size, void* userdata);
 typedef void (*Il2CppFrameWalkFunc) (const Il2CppStackFrameInfo *info, void *user_data);
 typedef void (*Il2CppProfileFunc) (Il2CppProfiler* prof);
 typedef void (*Il2CppProfileMethodFunc) (Il2CppProfiler* prof, const MethodInfo *method);
--- 2021/2021.2.0a16/struct.h
+++ 2021/2021.2.0a17/struct.h
@@ -1054,6 +1054,7 @@ typedef enum Il2CppTypeNameFormat
 typedef struct Il2CppDefaults
 {
     Il2CppImage *corlib;
+    Il2CppImage *corlib_gen;
     Il2CppClass *object_class;
     Il2CppClass *byte_class;
     Il2CppClass *void_class;
--- 2021/2021.2.0a17/struct.h
+++ 2021/2021.2.0a19/struct.h
@@ -1093,7 +1093,6 @@ typedef struct Il2CppDefaults
     Il2CppClass *method_info_class;
     Il2CppClass *property_info_class;
     Il2CppClass *event_info_class;
-    Il2CppClass *mono_event_info_class;
     Il2CppClass *stringbuilder_class;
     Il2CppClass *stack_frame_class;
     Il2CppClass *stack_trace_class;
@@ -1114,16 +1113,9 @@ typedef struct Il2CppDefaults
     Il2CppClass *culture_info;
     Il2CppClass *async_call_class;
     Il2CppClass *assembly_class;
-    Il2CppClass *mono_assembly_class;
     Il2CppClass *assembly_name_class;
-    Il2CppClass *mono_field_class;
-    Il2CppClass *mono_method_class;
-    Il2CppClass *mono_method_info_class;
-    Il2CppClass *mono_property_info_class;
     Il2CppClass *parameter_info_class;
-    Il2CppClass *mono_parameter_info_class;
     Il2CppClass *module_class;
-    Il2CppClass *pointer_class;
     Il2CppClass *system_exception_class;
     Il2CppClass *argument_exception_class;
     Il2CppClass *wait_handle_class;
@@ -1732,13 +1724,13 @@ typedef struct Il2CppPropertyInfo
 typedef struct Il2CppReflectionParameter
 {
     Il2CppObject object;
+    uint32_t AttrsImpl;
     Il2CppReflectionType *ClassImpl;
     Il2CppObject *DefaultValueImpl;
     Il2CppObject *MemberImpl;
     Il2CppString *NameImpl;
     int32_t PositionImpl;
-    uint32_t AttrsImpl;
-    Il2CppObject *MarshalAsImpl;
+    Il2CppObject* MarshalAs;
 } Il2CppReflectionParameter;
 typedef struct Il2CppReflectionModule
 {
@@ -1772,8 +1764,8 @@ typedef struct Il2CppReflectionAssembly
 {
     Il2CppObject object;
     const Il2CppAssembly *assembly;
-    Il2CppObject *resolve_event_holder;
     Il2CppObject *evidence;
+    Il2CppObject *resolve_event_holder;
     Il2CppObject *minimum;
     Il2CppObject *optional;
     Il2CppObject *refuse;
@@ -1801,15 +1793,29 @@ typedef struct Il2CppReflectionPointer
     void* data;
     Il2CppReflectionType* type;
 } Il2CppReflectionPointer;
+typedef struct Il2CppThreadName
+{
+    Il2CppChar* chars;
+    int32_t unused;
+    int32_t length;
+} Il2CppThreadName;
+typedef struct
+{
+    uint32_t ref;
+    void (*destructor)(void* data);
+} Il2CppRefCount;
+typedef struct
+{
+    Il2CppRefCount ref;
+    void* synch_cs;
+} Il2CppLongLivedThreadData;
 typedef struct Il2CppInternalThread
 {
     Il2CppObject obj;
     int lock_thread_id;
     void* handle;
     void* native_handle;
-    Il2CppArray* cached_culture_info;
-    Il2CppChar* name;
-    int name_len;
+    Il2CppThreadName name;
     uint32_t state;
     Il2CppObject* abort_exc;
     int abort_state_handle;
@@ -1823,7 +1829,7 @@ typedef struct Il2CppInternalThread
     int _serialized_principal_version;
     void* appdomain_refs;
     int32_t interruption_requested;
-    void* synch_cs;
+    void* longlived;
     uint8_t threadpool_thread;
     uint8_t thread_interrupt_requested;
     int stack_size;
@@ -1832,7 +1838,6 @@ typedef struct Il2CppInternalThread
     int managed_id;
     uint32_t small_id;
     void* manage_callback;
-    void* interrupt_on_stop;
     intptr_t flags;
     void* thread_pinning_ref;
     void* abort_protected_block_count;
@@ -1841,7 +1846,7 @@ typedef struct Il2CppInternalThread
     void * suspended;
     int32_t self_suspended;
     size_t thread_state;
-    size_t unused2;
+    void* unused[3];
     void* last;
 } Il2CppInternalThread;
 typedef struct Il2CppIOSelectorJob
@@ -1927,6 +1932,7 @@ typedef struct Il2CppException
     Il2CppObject* safeSerializationManager;
     Il2CppArray* captured_traces;
     Il2CppArray* native_trace_ips;
+    int32_t caught_in_unmanaged;
 } Il2CppException;
 typedef struct Il2CppSystemException
 {
@@ -1953,6 +1959,8 @@ typedef struct Il2CppDelegate
     void* delegate_trampoline;
     intptr_t extraArg;
     uint8_t **method_code;
+    void* interp_method;
+    void* interp_invoke_impl;
     Il2CppReflectionMethod *method_info;
     Il2CppReflectionMethod *original_method_info;
     Il2CppObject *data;
@@ -2080,6 +2088,32 @@ typedef struct Il2CppNumberFormatInfo
     uint8_t validForParseAsNumber;
     uint8_t validForParseAsCurrency;
 } Il2CppNumberFormatInfo;
+typedef struct NumberFormatEntryManaged
+{
+    int32_t currency_decimal_digits;
+    int32_t currency_decimal_separator;
+    int32_t currency_group_separator;
+    int32_t currency_group_sizes0;
+    int32_t currency_group_sizes1;
+    int32_t currency_negative_pattern;
+    int32_t currency_positive_pattern;
+    int32_t currency_symbol;
+    int32_t nan_symbol;
+    int32_t negative_infinity_symbol;
+    int32_t negative_sign;
+    int32_t number_decimal_digits;
+    int32_t number_decimal_separator;
+    int32_t number_group_separator;
+    int32_t number_group_sizes0;
+    int32_t number_group_sizes1;
+    int32_t number_negative_pattern;
+    int32_t per_mille_symbol;
+    int32_t percent_negative_pattern;
+    int32_t percent_positive_pattern;
+    int32_t percent_symbol;
+    int32_t positive_infinity_symbol;
+    int32_t positive_sign;
+} NumberFormatEntryManaged;
 typedef struct Il2CppCultureData
 {
     Il2CppObject obj;
@@ -2327,3 +2361,7 @@ typedef union Il2CppSingle_float
     Il2CppSingle s;
     float f;
 } Il2CppSingle_float;
+typedef struct Il2CppByReference
+{
+    intptr_t value;
+} Il2CppByReference;
--- 2021/2021.2.0a20/struct.h
+++ 2021/2021.2.0a21/struct.h
@@ -294,6 +294,11 @@ enum Il2CppMetadataUsage
     kIl2CppMetadataUsageStringLiteral,
     kIl2CppMetadataUsageMethodRef,
 };
+enum Il2CppInvalidMetadataUsageToken
+{
+    kIl2CppInvalidMetadataUsageNoData = 0,
+    kIl2CppInvalidMetadataUsageAmbiguousMethod = 1,
+};
 typedef struct Il2CppInterfaceOffsetPair
 {
     TypeIndex interfaceTypeIndex;
@@ -1372,6 +1377,7 @@ typedef struct Il2CppClass
     uint8_t is_blittable : 1;
     uint8_t is_import_or_windows_runtime : 1;
     uint8_t is_vtable_initialized : 1;
+    uint8_t is_byref_like : 1;
     VirtualInvokeData vtable[0];
 } Il2CppClass;
 typedef struct Il2CppTypeDefinitionSizes
--- 2021/2021.2.0b6/struct.h
+++ 2021/2021.2.0b7/struct.h
@@ -438,12 +438,11 @@ typedef struct Il2CppAssemblyDefinition
     int32_t referencedAssemblyCount;
     Il2CppAssemblyNameDefinition aname;
 } Il2CppAssemblyDefinition;
-typedef struct Il2CppCustomAttributeTypeRange
+typedef struct Il2CppCustomAttributeDataRange
 {
     uint32_t token;
-    int32_t start;
-    int32_t count;
-} Il2CppCustomAttributeTypeRange;
+    uint32_t startOffset;
+} Il2CppCustomAttributeDataRange;
 typedef struct Il2CppMetadataRange
 {
     int32_t start;
@@ -523,10 +522,10 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t fieldRefsCount;
     int32_t referencedAssembliesOffset;
     int32_t referencedAssembliesCount;
-    int32_t attributesInfoOffset;
-    int32_t attributesInfoCount;
-    int32_t attributeTypesOffset;
-    int32_t attributeTypesCount;
+    int32_t attributeDataOffset;
+    int32_t attributeDataCount;
+    int32_t attributeDataRangeOffset;
+    int32_t attributeDataRangeCount;
     int32_t unresolvedVirtualCallParameterTypesOffset;
     int32_t unresolvedVirtualCallParameterTypesCount;
     int32_t unresolvedVirtualCallParameterRangesOffset;
@@ -682,7 +681,8 @@ typedef enum Il2CppTypeEnum
     IL2CPP_TYPE_MODIFIER = 0x40,
     IL2CPP_TYPE_SENTINEL = 0x41,
     IL2CPP_TYPE_PINNED = 0x45,
-    IL2CPP_TYPE_ENUM = 0x55
+    IL2CPP_TYPE_ENUM = 0x55,
+    IL2CPP_TYPE_IL2CPP_TYPE_INDEX = 0xff
 } Il2CppTypeEnum;
 struct Il2CppClass;
 struct MethodInfo;
@@ -1094,6 +1094,7 @@ typedef struct Il2CppDefaults
     Il2CppClass *internal_thread_class;
     Il2CppClass *appdomain_class;
     Il2CppClass *appdomain_setup_class;
+    Il2CppClass *member_info_class;
     Il2CppClass *field_info_class;
     Il2CppClass *method_info_class;
     Il2CppClass *property_info_class;
@@ -1114,6 +1115,8 @@ typedef struct Il2CppDefaults
     Il2CppClass *il2cpp_com_object_class;
     Il2CppClass *attribute_class;
     Il2CppClass *customattribute_data_class;
+    Il2CppClass *customattribute_typed_argument_class;
+    Il2CppClass *customattribute_named_argument_class;
     Il2CppClass *version;
     Il2CppClass *culture_info;
     Il2CppClass *async_call_class;
@@ -1162,7 +1165,6 @@ typedef struct CustomAttributesCache
     int count;
     Il2CppObject** attributes;
 } CustomAttributesCache;
-typedef void (*CustomAttributesCacheGenerator)(CustomAttributesCache*);
 typedef struct FieldInfo
 {
     const char* name;
@@ -1302,7 +1304,6 @@ typedef struct MethodInfo
     uint8_t is_generic : 1;
     uint8_t is_inflated : 1;
     uint8_t wrapper_type : 1;
-    uint8_t is_marshaled_from_native : 1;
 } MethodInfo;
 typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
@@ -1480,7 +1481,6 @@ typedef struct Il2CppCodeGenModule
     const uint32_t rgctxsCount;
     const Il2CppRGCTXDefinition* rgctxs;
     const Il2CppDebuggerMetadataRegistration *debuggerMetadata;
-    const CustomAttributesCacheGenerator* customAttributeCacheGenerator;
     const Il2CppMethodPointer moduleInitializer;
     TypeDefinitionIndex* staticConstructorTypeIndices;
     const Il2CppMetadataRegistration* metadataRegistration;
@@ -1590,7 +1590,6 @@ typedef struct Il2CppPerfCounters
     unsigned int threadpool_threads;
     unsigned int threadpool_iothreads;
 } Il2CppPerfCounters;
-__attribute__ ((visibility ("default"))) void il2cpp_gc_wbarrier_set_field(Il2CppObject * obj, void **targetAddress, void *object);
 typedef struct Il2CppClass Il2CppClass;
 typedef struct MethodInfo MethodInfo;
 typedef struct PropertyInfo PropertyInfo;
--- 2021/2021.2.0b7/struct.h
+++ 2021/2021.2.0b8/struct.h
@@ -1304,6 +1304,7 @@ typedef struct MethodInfo
     uint8_t is_generic : 1;
     uint8_t is_inflated : 1;
     uint8_t wrapper_type : 1;
+    uint8_t has_full_generic_sharing_signature : 1;
 } MethodInfo;
 typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
--- 2021/2021.2.0b12/struct.h
+++ 2021/2021.2.0b13/struct.h
@@ -138,6 +138,7 @@ struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
+typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
 typedef uint16_t Il2CppMethodSlot;
 static const uint16_t kInvalidIl2CppMethodSlot = 65535;
 static const int32_t kIl2CppInt32Min = (-2147483647-1);
@@ -1305,6 +1306,7 @@ typedef struct MethodInfo
     uint8_t is_inflated : 1;
     uint8_t wrapper_type : 1;
     uint8_t has_full_generic_sharing_signature : 1;
+    uint8_t indirect_call_via_invokers : 1;
 } MethodInfo;
 typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
@@ -1373,6 +1375,7 @@ typedef struct Il2CppClass
     uint8_t is_generic : 1;
     uint8_t has_references : 1;
     uint8_t init_pending : 1;
+    uint8_t size_init_pending : 1;
     uint8_t size_inited : 1;
     uint8_t has_finalize : 1;
     uint8_t has_cctor : 1;
@@ -1439,6 +1442,7 @@ typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
     int maximumRuntimeGenericDepth;
+    int recursiveGenericIterations;
 } Il2CppCodeGenOptions;
 typedef struct Il2CppRange
 {
--- 2021/2021.2.0b15/struct.h
+++ 2021/2021.2.0b16/struct.h
@@ -1154,6 +1154,7 @@ typedef struct Il2CppDefaults
     Il2CppClass* uint32_shared_enum;
     Il2CppClass* uint64_shared_enum;
     Il2CppClass* il2cpp_fully_shared_type;
+    Il2CppClass* il2cpp_fully_shared_struct_type;
 } Il2CppDefaults;
 extern Il2CppDefaults il2cpp_defaults;
 struct Il2CppClass;
@@ -1963,7 +1964,7 @@ typedef struct Il2CppDelegate
 {
     Il2CppObject object;
     Il2CppMethodPointer method_ptr;
-    InvokerMethod invoke_impl;
+    Il2CppMethodPointer invoke_impl;
     Il2CppObject *target;
     const MethodInfo *method;
     void* delegate_trampoline;
--- 2021/2021.2.0f1/struct.h
+++ 2021/2021.2.1f1/struct.h
@@ -476,67 +476,67 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t sanity;
     int32_t version;
     int32_t stringLiteralOffset;
-    int32_t stringLiteralCount;
+    int32_t stringLiteralSize;
     int32_t stringLiteralDataOffset;
-    int32_t stringLiteralDataCount;
+    int32_t stringLiteralDataSize;
     int32_t stringOffset;
-    int32_t stringCount;
+    int32_t stringSize;
     int32_t eventsOffset;
-    int32_t eventsCount;
+    int32_t eventsSize;
     int32_t propertiesOffset;
-    int32_t propertiesCount;
+    int32_t propertiesSize;
     int32_t methodsOffset;
-    int32_t methodsCount;
+    int32_t methodsSize;
     int32_t parameterDefaultValuesOffset;
-    int32_t parameterDefaultValuesCount;
+    int32_t parameterDefaultValuesSize;
     int32_t fieldDefaultValuesOffset;
-    int32_t fieldDefaultValuesCount;
+    int32_t fieldDefaultValuesSize;
     int32_t fieldAndParameterDefaultValueDataOffset;
-    int32_t fieldAndParameterDefaultValueDataCount;
+    int32_t fieldAndParameterDefaultValueDataSize;
     int32_t fieldMarshaledSizesOffset;
-    int32_t fieldMarshaledSizesCount;
+    int32_t fieldMarshaledSizesSize;
     int32_t parametersOffset;
-    int32_t parametersCount;
+    int32_t parametersSize;
     int32_t fieldsOffset;
-    int32_t fieldsCount;
+    int32_t fieldsSize;
     int32_t genericParametersOffset;
-    int32_t genericParametersCount;
+    int32_t genericParametersSize;
     int32_t genericParameterConstraintsOffset;
-    int32_t genericParameterConstraintsCount;
+    int32_t genericParameterConstraintsSize;
     int32_t genericContainersOffset;
-    int32_t genericContainersCount;
+    int32_t genericContainersSize;
     int32_t nestedTypesOffset;
-    int32_t nestedTypesCount;
+    int32_t nestedTypesSize;
     int32_t interfacesOffset;
-    int32_t interfacesCount;
+    int32_t interfacesSize;
     int32_t vtableMethodsOffset;
-    int32_t vtableMethodsCount;
+    int32_t vtableMethodsSize;
     int32_t interfaceOffsetsOffset;
-    int32_t interfaceOffsetsCount;
+    int32_t interfaceOffsetsSize;
     int32_t typeDefinitionsOffset;
-    int32_t typeDefinitionsCount;
+    int32_t typeDefinitionsSize;
     int32_t imagesOffset;
-    int32_t imagesCount;
+    int32_t imagesSize;
     int32_t assembliesOffset;
-    int32_t assembliesCount;
+    int32_t assembliesSize;
     int32_t fieldRefsOffset;
-    int32_t fieldRefsCount;
+    int32_t fieldRefsSize;
     int32_t referencedAssembliesOffset;
-    int32_t referencedAssembliesCount;
+    int32_t referencedAssembliesSize;
     int32_t attributeDataOffset;
-    int32_t attributeDataCount;
+    int32_t attributeDataSize;
     int32_t attributeDataRangeOffset;
-    int32_t attributeDataRangeCount;
+    int32_t attributeDataRangeSize;
     int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesCount;
+    int32_t unresolvedVirtualCallParameterTypesSize;
     int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesCount;
+    int32_t unresolvedVirtualCallParameterRangesSize;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
     int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
-    int32_t exportedTypeDefinitionsCount;
+    int32_t exportedTypeDefinitionsSize;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
        
@@ -1398,6 +1398,7 @@ typedef struct Il2CppDomain
     Il2CppAppDomain* domain;
     Il2CppAppDomainSetup* setup;
     Il2CppAppContext* default_context;
+    Il2CppObject* ephemeron_tombstone;
     const char* friendly_name;
     uint32_t domain_id;
     volatile int threadpool_jobs;
--- 2021/2021.2.5f1/struct.h
+++ 2021/2021.2.6f1/struct.h
@@ -1970,7 +1970,7 @@ typedef struct Il2CppDelegate
     const MethodInfo *method;
     void* delegate_trampoline;
     intptr_t extraArg;
-    uint8_t **method_code;
+    Il2CppObject* invoke_impl_this;
     void* interp_method;
     void* interp_invoke_impl;
     Il2CppReflectionMethod *method_info;
--- 2021/2021.3.6f1/struct.h
+++ 2021/2021.3.7f1/struct.h
@@ -294,6 +294,7 @@ enum Il2CppMetadataUsage
     kIl2CppMetadataUsageFieldInfo,
     kIl2CppMetadataUsageStringLiteral,
     kIl2CppMetadataUsageMethodRef,
+    kIl2CppMetadataUsageFieldRva
 };
 enum Il2CppInvalidMetadataUsageToken
 {
--- 2021/2021.3.19f1/struct.h
+++ 2021/2021.3.20f1/struct.h
@@ -136,6 +136,7 @@ typedef void (*Il2CppLogCallback)(const
 typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
+typedef uint8_t (*Il2CppAndroidUpStateFunc)(const char* ifName, uint8_t* is_up);
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
--- 2021/2021.3.39f1/struct.h
+++ 2021/2021.3.40f1/struct.h
@@ -376,6 +376,7 @@ typedef struct Il2CppMethodDefinition
     StringIndex nameIndex;
     TypeDefinitionIndex declaringType;
     TypeIndex returnType;
+    uint32_t returnParameterToken;
     ParameterIndex parameterStart;
     GenericContainerIndex genericContainerIndex;
     uint32_t token;
--- 2021/2021.3.44f1/struct.h
+++ 2022/2022.1.0a7/struct.h
@@ -136,10 +136,8 @@ typedef void (*Il2CppLogCallback)(const
 typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
-typedef uint8_t (*Il2CppAndroidUpStateFunc)(const char* ifName, uint8_t* is_up);
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
-typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
 typedef uint16_t Il2CppMethodSlot;
 static const uint16_t kInvalidIl2CppMethodSlot = 65535;
 static const int32_t kIl2CppInt32Min = (-2147483647-1);
@@ -295,7 +293,6 @@ enum Il2CppMetadataUsage
     kIl2CppMetadataUsageFieldInfo,
     kIl2CppMetadataUsageStringLiteral,
     kIl2CppMetadataUsageMethodRef,
-    kIl2CppMetadataUsageFieldRva
 };
 enum Il2CppInvalidMetadataUsageToken
 {
@@ -376,7 +373,6 @@ typedef struct Il2CppMethodDefinition
     StringIndex nameIndex;
     TypeDefinitionIndex declaringType;
     TypeIndex returnType;
-    uint32_t returnParameterToken;
     ParameterIndex parameterStart;
     GenericContainerIndex genericContainerIndex;
     uint32_t token;
@@ -479,67 +475,67 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t sanity;
     int32_t version;
     int32_t stringLiteralOffset;
-    int32_t stringLiteralSize;
+    int32_t stringLiteralCount;
     int32_t stringLiteralDataOffset;
-    int32_t stringLiteralDataSize;
+    int32_t stringLiteralDataCount;
     int32_t stringOffset;
-    int32_t stringSize;
+    int32_t stringCount;
     int32_t eventsOffset;
-    int32_t eventsSize;
+    int32_t eventsCount;
     int32_t propertiesOffset;
-    int32_t propertiesSize;
+    int32_t propertiesCount;
     int32_t methodsOffset;
-    int32_t methodsSize;
+    int32_t methodsCount;
     int32_t parameterDefaultValuesOffset;
-    int32_t parameterDefaultValuesSize;
+    int32_t parameterDefaultValuesCount;
     int32_t fieldDefaultValuesOffset;
-    int32_t fieldDefaultValuesSize;
+    int32_t fieldDefaultValuesCount;
     int32_t fieldAndParameterDefaultValueDataOffset;
-    int32_t fieldAndParameterDefaultValueDataSize;
+    int32_t fieldAndParameterDefaultValueDataCount;
     int32_t fieldMarshaledSizesOffset;
-    int32_t fieldMarshaledSizesSize;
+    int32_t fieldMarshaledSizesCount;
     int32_t parametersOffset;
-    int32_t parametersSize;
+    int32_t parametersCount;
     int32_t fieldsOffset;
-    int32_t fieldsSize;
+    int32_t fieldsCount;
     int32_t genericParametersOffset;
-    int32_t genericParametersSize;
+    int32_t genericParametersCount;
     int32_t genericParameterConstraintsOffset;
-    int32_t genericParameterConstraintsSize;
+    int32_t genericParameterConstraintsCount;
     int32_t genericContainersOffset;
-    int32_t genericContainersSize;
+    int32_t genericContainersCount;
     int32_t nestedTypesOffset;
-    int32_t nestedTypesSize;
+    int32_t nestedTypesCount;
     int32_t interfacesOffset;
-    int32_t interfacesSize;
+    int32_t interfacesCount;
     int32_t vtableMethodsOffset;
-    int32_t vtableMethodsSize;
+    int32_t vtableMethodsCount;
     int32_t interfaceOffsetsOffset;
-    int32_t interfaceOffsetsSize;
+    int32_t interfaceOffsetsCount;
     int32_t typeDefinitionsOffset;
-    int32_t typeDefinitionsSize;
+    int32_t typeDefinitionsCount;
     int32_t imagesOffset;
-    int32_t imagesSize;
+    int32_t imagesCount;
     int32_t assembliesOffset;
-    int32_t assembliesSize;
+    int32_t assembliesCount;
     int32_t fieldRefsOffset;
-    int32_t fieldRefsSize;
+    int32_t fieldRefsCount;
     int32_t referencedAssembliesOffset;
-    int32_t referencedAssembliesSize;
+    int32_t referencedAssembliesCount;
     int32_t attributeDataOffset;
-    int32_t attributeDataSize;
+    int32_t attributeDataCount;
     int32_t attributeDataRangeOffset;
-    int32_t attributeDataRangeSize;
+    int32_t attributeDataRangeCount;
     int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesSize;
+    int32_t unresolvedVirtualCallParameterTypesCount;
     int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesSize;
+    int32_t unresolvedVirtualCallParameterRangesCount;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
     int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
-    int32_t exportedTypeDefinitionsSize;
+    int32_t exportedTypeDefinitionsCount;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
        
@@ -1157,7 +1153,6 @@ typedef struct Il2CppDefaults
     Il2CppClass* uint32_shared_enum;
     Il2CppClass* uint64_shared_enum;
     Il2CppClass* il2cpp_fully_shared_type;
-    Il2CppClass* il2cpp_fully_shared_struct_type;
 } Il2CppDefaults;
 extern Il2CppDefaults il2cpp_defaults;
 struct Il2CppClass;
@@ -1310,7 +1305,6 @@ typedef struct MethodInfo
     uint8_t is_inflated : 1;
     uint8_t wrapper_type : 1;
     uint8_t has_full_generic_sharing_signature : 1;
-    uint8_t indirect_call_via_invokers : 1;
 } MethodInfo;
 typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
@@ -1379,7 +1373,6 @@ typedef struct Il2CppClass
     uint8_t is_generic : 1;
     uint8_t has_references : 1;
     uint8_t init_pending : 1;
-    uint8_t size_init_pending : 1;
     uint8_t size_inited : 1;
     uint8_t has_finalize : 1;
     uint8_t has_cctor : 1;
@@ -1401,7 +1394,6 @@ typedef struct Il2CppDomain
     Il2CppAppDomain* domain;
     Il2CppAppDomainSetup* setup;
     Il2CppAppContext* default_context;
-    Il2CppObject* ephemeron_tombstone;
     const char* friendly_name;
     uint32_t domain_id;
     volatile int threadpool_jobs;
@@ -1447,7 +1439,6 @@ typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
     int maximumRuntimeGenericDepth;
-    int recursiveGenericIterations;
 } Il2CppCodeGenOptions;
 typedef struct Il2CppRange
 {
@@ -1968,12 +1959,12 @@ typedef struct Il2CppDelegate
 {
     Il2CppObject object;
     Il2CppMethodPointer method_ptr;
-    Il2CppMethodPointer invoke_impl;
+    InvokerMethod invoke_impl;
     Il2CppObject *target;
     const MethodInfo *method;
     void* delegate_trampoline;
     intptr_t extraArg;
-    Il2CppObject* invoke_impl_this;
+    uint8_t **method_code;
     void* interp_method;
     void* interp_invoke_impl;
     Il2CppReflectionMethod *method_info;
--- 2022/2022.1.0a9/struct.h
+++ 2022/2022.1.0a10/struct.h
@@ -138,6 +138,7 @@ struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
+typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
 typedef uint16_t Il2CppMethodSlot;
 static const uint16_t kInvalidIl2CppMethodSlot = 65535;
 static const int32_t kIl2CppInt32Min = (-2147483647-1);
@@ -1305,6 +1306,7 @@ typedef struct MethodInfo
     uint8_t is_inflated : 1;
     uint8_t wrapper_type : 1;
     uint8_t has_full_generic_sharing_signature : 1;
+    uint8_t indirect_call_via_invokers : 1;
 } MethodInfo;
 typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
@@ -1373,6 +1375,7 @@ typedef struct Il2CppClass
     uint8_t is_generic : 1;
     uint8_t has_references : 1;
     uint8_t init_pending : 1;
+    uint8_t size_init_pending : 1;
     uint8_t size_inited : 1;
     uint8_t has_finalize : 1;
     uint8_t has_cctor : 1;
@@ -1439,6 +1442,7 @@ typedef struct Il2CppCodeGenOptions
 {
     uint8_t enablePrimitiveValueTypeGenericSharing;
     int maximumRuntimeGenericDepth;
+    int recursiveGenericIterations;
 } Il2CppCodeGenOptions;
 typedef struct Il2CppRange
 {
--- 2022/2022.1.0a11/struct.h
+++ 2022/2022.1.0a12/struct.h
@@ -1154,6 +1154,7 @@ typedef struct Il2CppDefaults
     Il2CppClass* uint32_shared_enum;
     Il2CppClass* uint64_shared_enum;
     Il2CppClass* il2cpp_fully_shared_type;
+    Il2CppClass* il2cpp_fully_shared_struct_type;
 } Il2CppDefaults;
 extern Il2CppDefaults il2cpp_defaults;
 struct Il2CppClass;
@@ -1963,7 +1964,7 @@ typedef struct Il2CppDelegate
 {
     Il2CppObject object;
     Il2CppMethodPointer method_ptr;
-    InvokerMethod invoke_impl;
+    Il2CppMethodPointer invoke_impl;
     Il2CppObject *target;
     const MethodInfo *method;
     void* delegate_trampoline;
--- 2022/2022.1.0a12/struct.h
+++ 2022/2022.1.0a13/struct.h
@@ -476,67 +476,67 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t sanity;
     int32_t version;
     int32_t stringLiteralOffset;
-    int32_t stringLiteralCount;
+    int32_t stringLiteralSize;
     int32_t stringLiteralDataOffset;
-    int32_t stringLiteralDataCount;
+    int32_t stringLiteralDataSize;
     int32_t stringOffset;
-    int32_t stringCount;
+    int32_t stringSize;
     int32_t eventsOffset;
-    int32_t eventsCount;
+    int32_t eventsSize;
     int32_t propertiesOffset;
-    int32_t propertiesCount;
+    int32_t propertiesSize;
     int32_t methodsOffset;
-    int32_t methodsCount;
+    int32_t methodsSize;
     int32_t parameterDefaultValuesOffset;
-    int32_t parameterDefaultValuesCount;
+    int32_t parameterDefaultValuesSize;
     int32_t fieldDefaultValuesOffset;
-    int32_t fieldDefaultValuesCount;
+    int32_t fieldDefaultValuesSize;
     int32_t fieldAndParameterDefaultValueDataOffset;
-    int32_t fieldAndParameterDefaultValueDataCount;
+    int32_t fieldAndParameterDefaultValueDataSize;
     int32_t fieldMarshaledSizesOffset;
-    int32_t fieldMarshaledSizesCount;
+    int32_t fieldMarshaledSizesSize;
     int32_t parametersOffset;
-    int32_t parametersCount;
+    int32_t parametersSize;
     int32_t fieldsOffset;
-    int32_t fieldsCount;
+    int32_t fieldsSize;
     int32_t genericParametersOffset;
-    int32_t genericParametersCount;
+    int32_t genericParametersSize;
     int32_t genericParameterConstraintsOffset;
-    int32_t genericParameterConstraintsCount;
+    int32_t genericParameterConstraintsSize;
     int32_t genericContainersOffset;
-    int32_t genericContainersCount;
+    int32_t genericContainersSize;
     int32_t nestedTypesOffset;
-    int32_t nestedTypesCount;
+    int32_t nestedTypesSize;
     int32_t interfacesOffset;
-    int32_t interfacesCount;
+    int32_t interfacesSize;
     int32_t vtableMethodsOffset;
-    int32_t vtableMethodsCount;
+    int32_t vtableMethodsSize;
     int32_t interfaceOffsetsOffset;
-    int32_t interfaceOffsetsCount;
+    int32_t interfaceOffsetsSize;
     int32_t typeDefinitionsOffset;
-    int32_t typeDefinitionsCount;
+    int32_t typeDefinitionsSize;
     int32_t imagesOffset;
-    int32_t imagesCount;
+    int32_t imagesSize;
     int32_t assembliesOffset;
-    int32_t assembliesCount;
+    int32_t assembliesSize;
     int32_t fieldRefsOffset;
-    int32_t fieldRefsCount;
+    int32_t fieldRefsSize;
     int32_t referencedAssembliesOffset;
-    int32_t referencedAssembliesCount;
+    int32_t referencedAssembliesSize;
     int32_t attributeDataOffset;
-    int32_t attributeDataCount;
+    int32_t attributeDataSize;
     int32_t attributeDataRangeOffset;
-    int32_t attributeDataRangeCount;
+    int32_t attributeDataRangeSize;
     int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesCount;
+    int32_t unresolvedVirtualCallParameterTypesSize;
     int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesCount;
+    int32_t unresolvedVirtualCallParameterRangesSize;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
     int32_t windowsRuntimeStringsSize;
     int32_t exportedTypeDefinitionsOffset;
-    int32_t exportedTypeDefinitionsCount;
+    int32_t exportedTypeDefinitionsSize;
 } Il2CppGlobalMetadataHeader;
 #pragma pack(pop, p1)
        
@@ -1398,6 +1398,7 @@ typedef struct Il2CppDomain
     Il2CppAppDomain* domain;
     Il2CppAppDomainSetup* setup;
     Il2CppAppContext* default_context;
+    Il2CppObject* ephemeron_tombstone;
     const char* friendly_name;
     uint32_t domain_id;
     volatile int threadpool_jobs;
--- 2022/2022.1.0a16/struct.h
+++ 2022/2022.1.0b1/struct.h
@@ -1970,7 +1970,7 @@ typedef struct Il2CppDelegate
     const MethodInfo *method;
     void* delegate_trampoline;
     intptr_t extraArg;
-    uint8_t **method_code;
+    Il2CppObject* invoke_impl_this;
     void* interp_method;
     void* interp_invoke_impl;
     Il2CppReflectionMethod *method_info;
--- 2022/2022.1.0b6/struct.h
+++ 2022/2022.1.0b7/struct.h
@@ -527,10 +527,10 @@ typedef struct Il2CppGlobalMetadataHeade
     int32_t attributeDataSize;
     int32_t attributeDataRangeOffset;
     int32_t attributeDataRangeSize;
-    int32_t unresolvedVirtualCallParameterTypesOffset;
-    int32_t unresolvedVirtualCallParameterTypesSize;
-    int32_t unresolvedVirtualCallParameterRangesOffset;
-    int32_t unresolvedVirtualCallParameterRangesSize;
+    int32_t unresolvedIndirectCallParameterTypesOffset;
+    int32_t unresolvedIndirectCallParameterTypesSize;
+    int32_t unresolvedIndirectCallParameterRangesOffset;
+    int32_t unresolvedIndirectCallParameterRangesSize;
     int32_t windowsRuntimeTypeNamesOffset;
     int32_t windowsRuntimeTypeNamesSize;
     int32_t windowsRuntimeStringsOffset;
@@ -1307,7 +1307,6 @@ typedef struct MethodInfo
     uint8_t is_inflated : 1;
     uint8_t wrapper_type : 1;
     uint8_t has_full_generic_sharing_signature : 1;
-    uint8_t indirect_call_via_invokers : 1;
 } MethodInfo;
 typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
@@ -1502,8 +1501,10 @@ typedef struct Il2CppCodeRegistration
     const Il2CppMethodPointer* genericAdjustorThunks;
     uint32_t invokerPointersCount;
     const InvokerMethod* invokerPointers;
-    uint32_t unresolvedVirtualCallCount;
+    uint32_t unresolvedIndirectCallCount;
     const Il2CppMethodPointer* unresolvedVirtualCallPointers;
+    const Il2CppMethodPointer* unresolvedInstanceCallPointers;
+    const Il2CppMethodPointer* unresolvedStaticCallPointers;
     uint32_t interopDataCount;
     Il2CppInteropData* interopData;
     uint32_t windowsRuntimeFactoryCount;
--- 2022/2022.1.7f1/struct.h
+++ 2022/2022.1.8f1/struct.h
@@ -294,6 +294,7 @@ enum Il2CppMetadataUsage
     kIl2CppMetadataUsageFieldInfo,
     kIl2CppMetadataUsageStringLiteral,
     kIl2CppMetadataUsageMethodRef,
+    kIl2CppMetadataUsageFieldRva
 };
 enum Il2CppInvalidMetadataUsageToken
 {
--- 2022/2022.1.24f1/struct.h
+++ 2022/2022.2.0a9/struct.h
@@ -294,7 +294,6 @@ enum Il2CppMetadataUsage
     kIl2CppMetadataUsageFieldInfo,
     kIl2CppMetadataUsageStringLiteral,
     kIl2CppMetadataUsageMethodRef,
-    kIl2CppMetadataUsageFieldRva
 };
 enum Il2CppInvalidMetadataUsageToken
 {
@@ -1347,6 +1346,7 @@ typedef struct Il2CppClass
     __attribute__((aligned(8))) size_t cctor_thread;
     Il2CppMetadataGenericContainerHandle genericContainerHandle;
     uint32_t instance_size;
+    uint32_t stack_slot_size;
     uint32_t actualSize;
     uint32_t element_size;
     int32_t native_size;
@@ -1367,7 +1367,6 @@ typedef struct Il2CppClass
     uint8_t genericRecursionDepth;
     uint8_t rank;
     uint8_t minimumAlignment;
-    uint8_t naturalAligment;
     uint8_t packingSize;
     uint8_t initialized_and_no_error : 1;
     uint8_t initialized : 1;
--- 2022/2022.2.0a10/struct.h
+++ 2022/2022.2.0a11/struct.h
@@ -1162,11 +1162,6 @@ struct MethodInfo;
 struct FieldInfo;
 struct Il2CppObject;
 struct MemberInfo;
-typedef struct CustomAttributesCache
-{
-    int count;
-    Il2CppObject** attributes;
-} CustomAttributesCache;
 typedef struct FieldInfo
 {
     const char* name;
--- 2022/2022.2.0b1/struct.h
+++ 2022/2022.2.0b2/struct.h
@@ -294,6 +294,7 @@ enum Il2CppMetadataUsage
     kIl2CppMetadataUsageFieldInfo,
     kIl2CppMetadataUsageStringLiteral,
     kIl2CppMetadataUsageMethodRef,
+    kIl2CppMetadataUsageFieldRva
 };
 enum Il2CppInvalidMetadataUsageToken
 {
--- 2022/2022.2.8f1/struct.h
+++ 2022/2022.2.9f1/struct.h
@@ -136,6 +136,7 @@ typedef void (*Il2CppLogCallback)(const
 typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
+typedef uint8_t (*Il2CppAndroidUpStateFunc)(const char* ifName, uint8_t* is_up);
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
--- 2022/2022.3.7f1/struct.h
+++ 2022/2022.3.8f1/struct.h
@@ -1831,7 +1831,7 @@ typedef struct Il2CppInternalThread
     int abort_state_handle;
     uint64_t tid;
     intptr_t debugger_thread;
-    void** static_data;
+    void* static_data;
     void* runtime_thread_info;
     Il2CppObject* current_appcontext;
     Il2CppObject* root_domain_thread;
--- 2022/2022.3.32f1/struct.h
+++ 2022/2022.3.33f1/struct.h
@@ -376,6 +376,7 @@ typedef struct Il2CppMethodDefinition
     StringIndex nameIndex;
     TypeDefinitionIndex declaringType;
     TypeIndex returnType;
+    uint32_t returnParameterToken;
     ParameterIndex parameterStart;
     GenericContainerIndex genericContainerIndex;
     uint32_t token;
--- 2022/2022.3.50f1/struct.h
+++ 2023/2023.1.0a4/struct.h
@@ -136,7 +136,6 @@ typedef void (*Il2CppLogCallback)(const
 typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
-typedef uint8_t (*Il2CppAndroidUpStateFunc)(const char* ifName, uint8_t* is_up);
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
@@ -376,7 +375,6 @@ typedef struct Il2CppMethodDefinition
     StringIndex nameIndex;
     TypeDefinitionIndex declaringType;
     TypeIndex returnType;
-    uint32_t returnParameterToken;
     ParameterIndex parameterStart;
     GenericContainerIndex genericContainerIndex;
     uint32_t token;
@@ -1832,7 +1830,7 @@ typedef struct Il2CppInternalThread
     int abort_state_handle;
     uint64_t tid;
     intptr_t debugger_thread;
-    void* static_data;
+    void** static_data;
     void* runtime_thread_info;
     Il2CppObject* current_appcontext;
     Il2CppObject* root_domain_thread;
--- 2023/2023.1.0a5/struct.h
+++ 2023/2023.1.0a6/struct.h
@@ -12,6 +12,7 @@ typedef struct Il2CppImage Il2CppImage;
 typedef struct Il2CppException Il2CppException;
 typedef struct Il2CppProfiler Il2CppProfiler;
 typedef struct Il2CppObject Il2CppObject;
+typedef struct Il2CppReflectionField Il2CppReflectionField;
 typedef struct Il2CppReflectionMethod Il2CppReflectionMethod;
 typedef struct Il2CppReflectionType Il2CppReflectionType;
 typedef struct Il2CppString Il2CppString;
--- 2023/2023.1.0a14/struct.h
+++ 2023/2023.1.0a15/struct.h
@@ -137,6 +137,7 @@ typedef void (*Il2CppLogCallback)(const
 typedef size_t(*Il2CppBacktraceFunc) (Il2CppMethodPointer* buffer, size_t maxSize);
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
+typedef void* Il2CppGCHandle;
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
@@ -1337,7 +1338,7 @@ typedef struct Il2CppClass
     const Il2CppRGCTXData* rgctx_data;
     Il2CppClass** typeHierarchy;
     void *unity_user_data;
-    uint32_t initializationExceptionGCHandle;
+    Il2CppGCHandle initializationExceptionGCHandle;
     uint32_t cctor_started;
     uint32_t cctor_finished_or_no_cctor;
     __attribute__((aligned(8))) size_t cctor_thread;
--- 2023/2023.1.0a16/struct.h
+++ 2023/2023.1.0a17/struct.h
@@ -1058,7 +1058,8 @@ typedef enum Il2CppTypeNameFormat
     IL2CPP_TYPE_NAME_FORMAT_IL,
     IL2CPP_TYPE_NAME_FORMAT_REFLECTION,
     IL2CPP_TYPE_NAME_FORMAT_FULL_NAME,
-    IL2CPP_TYPE_NAME_FORMAT_ASSEMBLY_QUALIFIED
+    IL2CPP_TYPE_NAME_FORMAT_ASSEMBLY_QUALIFIED,
+    IL2CPP_TYPE_NAME_FORMAT_REFLECTION_QUALIFIED
 } Il2CppTypeNameFormat;
 typedef struct Il2CppDefaults
 {
--- 2023/2023.1.0b5/struct.h
+++ 2023/2023.1.0b6/struct.h
@@ -138,6 +138,7 @@ typedef size_t(*Il2CppBacktraceFunc) (Il
 struct Il2CppManagedMemorySnapshot;
 typedef uintptr_t il2cpp_array_size_t;
 typedef void* Il2CppGCHandle;
+typedef uint8_t (*Il2CppAndroidUpStateFunc)(const char* ifName, uint8_t* is_up);
        
 typedef void ( *SynchronizationContextCallback)(intptr_t arg);
 typedef void ( *CultureInfoChangedCallback)(const Il2CppChar* arg);
--- 2023/2023.1.9f1/struct.h
+++ 2023/2023.1.10f1/struct.h
@@ -1834,7 +1834,7 @@ typedef struct Il2CppInternalThread
     int abort_state_handle;
     uint64_t tid;
     intptr_t debugger_thread;
-    void** static_data;
+    void* static_data;
     void* runtime_thread_info;
     Il2CppObject* current_appcontext;
     Il2CppObject* root_domain_thread;
--- 2023/2023.1.20f1/struct.h
+++ 2023/2023.2.0a6/struct.h
@@ -1834,7 +1834,7 @@ typedef struct Il2CppInternalThread
     int abort_state_handle;
     uint64_t tid;
     intptr_t debugger_thread;
-    void* static_data;
+    void** static_data;
     void* runtime_thread_info;
     Il2CppObject* current_appcontext;
     Il2CppObject* root_domain_thread;
--- 2023/2023.2.0a20/struct.h
+++ 2023/2023.2.0a22/struct.h
@@ -758,6 +758,7 @@ typedef struct Il2CppMetadataMethodInfo
     uint16_t iflags;
     uint16_t slot;
     uint16_t parameterCount;
+    uint8_t isUnmangedCallersOnly;
 } Il2CppMetadataMethodInfo;
 typedef struct Il2CppMetadataParameterInfo
 {
@@ -1307,6 +1308,7 @@ typedef struct MethodInfo
     uint8_t is_inflated : 1;
     uint8_t wrapper_type : 1;
     uint8_t has_full_generic_sharing_signature : 1;
+    uint8_t is_unmanaged_callers_only : 1;
 } MethodInfo;
 typedef struct Il2CppRuntimeInterfaceOffsetPair
 {
@@ -1834,7 +1836,7 @@ typedef struct Il2CppInternalThread
     int abort_state_handle;
     uint64_t tid;
     intptr_t debugger_thread;
-    void** static_data;
+    void* static_data;
     void* runtime_thread_info;
     Il2CppObject* current_appcontext;
     Il2CppObject* root_domain_thread;
--- 6000/6000.0.9f1/struct.h
+++ 6000/6000.0.10f1/struct.h
@@ -378,6 +378,7 @@ typedef struct Il2CppMethodDefinition
     StringIndex nameIndex;
     TypeDefinitionIndex declaringType;
     TypeIndex returnType;
+    uint32_t returnParameterToken;
     ParameterIndex parameterStart;
     GenericContainerIndex genericContainerIndex;
     uint32_t token;
